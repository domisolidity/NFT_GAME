{
	"id": "5285322013d3f51ade54cc366c144db0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"BEP20/BEP20Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.5.16 <9.0.0;\n\n\nimport \"./Context.sol\";\nimport \"./IBEP20.sol\";\nimport \"./Ownable.sol\";\nimport \"./SafeMath.sol\";\n\ncontract BEP20Token is Context, IBEP20, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 private _decimals;\n  string private _symbol;\n  string private _name;\n\n  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint totalSupply_)  {\n    _name = name_;\n    _symbol = symbol_;\n    _decimals = decimals_;\n    _totalSupply = totalSupply_;\n    _balances[msg.sender] = totalSupply_;\n\n    emit Transfer(address(0), msg.sender, totalSupply_);\n  }\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view virtual override returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view virtual override returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view virtual override returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view virtual override returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {BEP20-totalSupply}.\n   */\n  function totalSupply() external view virtual override returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {BEP20-balanceOf}.\n   */\n  function balanceOf(address account) external view virtual override returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {BEP20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external virtual override returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-allowance}.\n   */\n  function allowance(address owner, address spender) external view virtual override returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {BEP20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external virtual override returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {BEP20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external virtual override returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public virtual  returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual  returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n  function mint(uint256 amount) public virtual  onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal virtual {\n    require(account != address(0), \"BEP20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal virtual {\n    require(owner != address(0), \"BEP20: approve from the zero address\");\n    require(spender != address(0), \"BEP20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal virtual {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n  }\n}"
			},
			"BEP20/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.5.16 <9.0.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}"
			},
			"BEP20/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.5.16 <9.0.0;\nimport \"./Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () { //internal\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}"
			},
			"BEP20/IBEP20.sol": {
				"content": "\n// SPDX-License-Identifier: MIT\npragma solidity >=0.5.16 <9.0.0;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"BEP20/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.5.16 <9.0.0;\n\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor ()  { } //internal\n\n  function _msgSender() internal view returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BEP20/BEP20Token.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BEP20/BEP20Token.sol\":164:8021  contract BEP20Token is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"BEP20/BEP20Token.sol\":482:782  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint totalSupply_)  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"BEP20/Ownable.sol\":853:870  address msgSender */\n  0x00\n    /* \"BEP20/Ownable.sol\":873:885  _msgSender() */\n  tag_9\n    /* \"BEP20/Ownable.sol\":873:883  _msgSender */\n  shl(0x20, tag_10)\n    /* \"BEP20/Ownable.sol\":873:885  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"BEP20/Ownable.sol\":853:885  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"BEP20/Ownable.sol\":900:909  msgSender */\n  dup1\n    /* \"BEP20/Ownable.sol\":891:897  _owner */\n  0x00\n  dup1\n    /* \"BEP20/Ownable.sol\":891:909  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEP20/Ownable.sol\":953:962  msgSender */\n  dup1\n    /* \"BEP20/Ownable.sol\":920:963  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEP20/Ownable.sol\":949:950  0 */\n  0x00\n    /* \"BEP20/Ownable.sol\":920:963  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEP20/Ownable.sol\":836:968  { //internal... */\n  pop\n    /* \"BEP20/BEP20Token.sol\":589:594  name_ */\n  dup4\n    /* \"BEP20/BEP20Token.sol\":581:586  _name */\n  0x06\n    /* \"BEP20/BEP20Token.sol\":581:594  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"BEP20/BEP20Token.sol\":610:617  symbol_ */\n  dup3\n    /* \"BEP20/BEP20Token.sol\":600:607  _symbol */\n  0x05\n    /* \"BEP20/BEP20Token.sol\":600:617  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_14\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"BEP20/BEP20Token.sol\":635:644  decimals_ */\n  dup2\n    /* \"BEP20/BEP20Token.sol\":623:632  _decimals */\n  0x04\n  0x00\n    /* \"BEP20/BEP20Token.sol\":623:644  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEP20/BEP20Token.sol\":665:677  totalSupply_ */\n  dup1\n    /* \"BEP20/BEP20Token.sol\":650:662  _totalSupply */\n  0x03\n    /* \"BEP20/BEP20Token.sol\":650:677  _totalSupply = totalSupply_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BEP20/BEP20Token.sol\":707:719  totalSupply_ */\n  dup1\n    /* \"BEP20/BEP20Token.sol\":683:692  _balances */\n  0x01\n    /* \"BEP20/BEP20Token.sol\":683:704  _balances[msg.sender] */\n  0x00\n    /* \"BEP20/BEP20Token.sol\":693:703  msg.sender */\n  caller\n    /* \"BEP20/BEP20Token.sol\":683:704  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BEP20/BEP20Token.sol\":683:719  _balances[msg.sender] = totalSupply_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BEP20/BEP20Token.sol\":752:762  msg.sender */\n  caller\n    /* \"BEP20/BEP20Token.sol\":731:777  Transfer(address(0), msg.sender, totalSupply_) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEP20/BEP20Token.sol\":748:749  0 */\n  0x00\n    /* \"BEP20/BEP20Token.sol\":731:777  Transfer(address(0), msg.sender, totalSupply_) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"BEP20/BEP20Token.sol\":764:776  totalSupply_ */\n  dup4\n    /* \"BEP20/BEP20Token.sol\":731:777  Transfer(address(0), msg.sender, totalSupply_) */\n  mload(0x40)\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEP20/BEP20Token.sol\":482:782  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint totalSupply_)  {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"BEP20/BEP20Token.sol\":164:8021  contract BEP20Token is Context, IBEP20, Ownable {... */\n  jump(tag_17)\n    /* \"BEP20/Context.sol\":772:871  function _msgSender() internal view returns (address payable) {... */\ntag_10:\n    /* \"BEP20/Context.sol\":817:832  address payable */\n  0x00\n    /* \"BEP20/Context.sol\":855:865  msg.sender */\n  caller\n    /* \"BEP20/Context.sol\":840:866  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"BEP20/Context.sol\":772:871  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"BEP20/BEP20Token.sol\":164:8021  contract BEP20Token is Context, IBEP20, Ownable {... */\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_22\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_21)\ntag_22:\n  dup3\n  0x1f\n  lt\n  tag_23\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_21)\ntag_23:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_21\n  jumpi\n  swap2\n  dup3\n  add\ntag_24:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_24)\ntag_25:\ntag_21:\n  pop\n  swap1\n  pop\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  pop\n  swap1\n  jump\t// out\ntag_27:\ntag_28:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_29\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_28)\ntag_29:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_31:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_33\n    /* \"#utility.yul\":137:186   */\n  tag_34\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":121:187   */\n  tag_36\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_38\n  tag_39\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":262:374   */\ntag_37:\n    /* \"#utility.yul\":383:422   */\n  tag_40\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_42:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_45\n  tag_46\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":531:653   */\ntag_44:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_47\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_31\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:952   */\ntag_48:\n    /* \"#utility.yul\":866:871   */\n  0x00\n    /* \"#utility.yul\":897:903   */\n  dup2\n    /* \"#utility.yul\":891:904   */\n  mload\n    /* \"#utility.yul\":882:904   */\n  swap1\n  pop\n    /* \"#utility.yul\":913:946   */\n  tag_50\n    /* \"#utility.yul\":940:945   */\n  dup2\n    /* \"#utility.yul\":913:946   */\n  tag_51\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":809:952   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":958:1097   */\ntag_52:\n    /* \"#utility.yul\":1013:1018   */\n  0x00\n    /* \"#utility.yul\":1044:1050   */\n  dup2\n    /* \"#utility.yul\":1038:1051   */\n  mload\n    /* \"#utility.yul\":1029:1051   */\n  swap1\n  pop\n    /* \"#utility.yul\":1060:1091   */\n  tag_54\n    /* \"#utility.yul\":1085:1090   */\n  dup2\n    /* \"#utility.yul\":1060:1091   */\n  tag_55\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":958:1097   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1103:2265   */\ntag_3:\n    /* \"#utility.yul\":1218:1224   */\n  0x00\n    /* \"#utility.yul\":1226:1232   */\n  dup1\n    /* \"#utility.yul\":1234:1240   */\n  0x00\n    /* \"#utility.yul\":1242:1248   */\n  dup1\n    /* \"#utility.yul\":1291:1294   */\n  0x80\n    /* \"#utility.yul\":1279:1288   */\n  dup6\n    /* \"#utility.yul\":1270:1277   */\n  dup8\n    /* \"#utility.yul\":1266:1289   */\n  sub\n    /* \"#utility.yul\":1262:1295   */\n  slt\n    /* \"#utility.yul\":1259:1379   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1298:1377   */\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1259:1379   */\ntag_57:\n    /* \"#utility.yul\":1439:1440   */\n  0x00\n    /* \"#utility.yul\":1428:1437   */\n  dup6\n    /* \"#utility.yul\":1424:1441   */\n  add\n    /* \"#utility.yul\":1418:1442   */\n  mload\n    /* \"#utility.yul\":1469:1487   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1461:1467   */\n  dup2\n    /* \"#utility.yul\":1458:1488   */\n  gt\n    /* \"#utility.yul\":1455:1572   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1491:1570   */\n  tag_61\n  tag_62\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1455:1572   */\ntag_60:\n    /* \"#utility.yul\":1596:1670   */\n  tag_63\n    /* \"#utility.yul\":1662:1669   */\n  dup8\n    /* \"#utility.yul\":1653:1659   */\n  dup3\n    /* \"#utility.yul\":1642:1651   */\n  dup9\n    /* \"#utility.yul\":1638:1660   */\n  add\n    /* \"#utility.yul\":1596:1670   */\n  tag_42\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1586:1670   */\n  swap5\n  pop\n    /* \"#utility.yul\":1389:1680   */\n  pop\n    /* \"#utility.yul\":1740:1742   */\n  0x20\n    /* \"#utility.yul\":1729:1738   */\n  dup6\n    /* \"#utility.yul\":1725:1743   */\n  add\n    /* \"#utility.yul\":1719:1744   */\n  mload\n    /* \"#utility.yul\":1771:1789   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1763:1769   */\n  dup2\n    /* \"#utility.yul\":1760:1790   */\n  gt\n    /* \"#utility.yul\":1757:1874   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1793:1872   */\n  tag_65\n  tag_62\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1757:1874   */\ntag_64:\n    /* \"#utility.yul\":1898:1972   */\n  tag_66\n    /* \"#utility.yul\":1964:1971   */\n  dup8\n    /* \"#utility.yul\":1955:1961   */\n  dup3\n    /* \"#utility.yul\":1944:1953   */\n  dup9\n    /* \"#utility.yul\":1940:1962   */\n  add\n    /* \"#utility.yul\":1898:1972   */\n  tag_42\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1888:1972   */\n  swap4\n  pop\n    /* \"#utility.yul\":1690:1982   */\n  pop\n    /* \"#utility.yul\":2021:2023   */\n  0x40\n    /* \"#utility.yul\":2047:2109   */\n  tag_67\n    /* \"#utility.yul\":2101:2108   */\n  dup8\n    /* \"#utility.yul\":2092:2098   */\n  dup3\n    /* \"#utility.yul\":2081:2090   */\n  dup9\n    /* \"#utility.yul\":2077:2099   */\n  add\n    /* \"#utility.yul\":2047:2109   */\n  tag_52\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2037:2109   */\n  swap3\n  pop\n    /* \"#utility.yul\":1992:2119   */\n  pop\n    /* \"#utility.yul\":2158:2160   */\n  0x60\n    /* \"#utility.yul\":2184:2248   */\n  tag_68\n    /* \"#utility.yul\":2240:2247   */\n  dup8\n    /* \"#utility.yul\":2231:2237   */\n  dup3\n    /* \"#utility.yul\":2220:2229   */\n  dup9\n    /* \"#utility.yul\":2216:2238   */\n  add\n    /* \"#utility.yul\":2184:2248   */\n  tag_48\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2174:2248   */\n  swap2\n  pop\n    /* \"#utility.yul\":2129:2258   */\n  pop\n    /* \"#utility.yul\":1103:2265   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2271:2389   */\ntag_69:\n    /* \"#utility.yul\":2358:2382   */\n  tag_71\n    /* \"#utility.yul\":2376:2381   */\n  dup2\n    /* \"#utility.yul\":2358:2382   */\n  tag_72\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2353:2356   */\n  dup3\n    /* \"#utility.yul\":2346:2383   */\n  mstore\n    /* \"#utility.yul\":2271:2389   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2395:2617   */\ntag_16:\n    /* \"#utility.yul\":2488:2492   */\n  0x00\n    /* \"#utility.yul\":2526:2528   */\n  0x20\n    /* \"#utility.yul\":2515:2524   */\n  dup3\n    /* \"#utility.yul\":2511:2529   */\n  add\n    /* \"#utility.yul\":2503:2529   */\n  swap1\n  pop\n    /* \"#utility.yul\":2539:2610   */\n  tag_74\n    /* \"#utility.yul\":2607:2608   */\n  0x00\n    /* \"#utility.yul\":2596:2605   */\n  dup4\n    /* \"#utility.yul\":2592:2609   */\n  add\n    /* \"#utility.yul\":2583:2589   */\n  dup5\n    /* \"#utility.yul\":2539:2610   */\n  tag_69\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2395:2617   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2623:2752   */\ntag_36:\n    /* \"#utility.yul\":2657:2663   */\n  0x00\n    /* \"#utility.yul\":2684:2704   */\n  tag_76\n  tag_77\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2674:2704   */\n  swap1\n  pop\n    /* \"#utility.yul\":2713:2746   */\n  tag_78\n    /* \"#utility.yul\":2741:2745   */\n  dup3\n    /* \"#utility.yul\":2733:2739   */\n  dup3\n    /* \"#utility.yul\":2713:2746   */\n  tag_79\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2623:2752   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2758:2833   */\ntag_77:\n    /* \"#utility.yul\":2791:2797   */\n  0x00\n    /* \"#utility.yul\":2824:2826   */\n  0x40\n    /* \"#utility.yul\":2818:2827   */\n  mload\n    /* \"#utility.yul\":2808:2827   */\n  swap1\n  pop\n    /* \"#utility.yul\":2758:2833   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2839:3147   */\ntag_35:\n    /* \"#utility.yul\":2901:2905   */\n  0x00\n    /* \"#utility.yul\":2991:3009   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2983:2989   */\n  dup3\n    /* \"#utility.yul\":2980:3010   */\n  gt\n    /* \"#utility.yul\":2977:3033   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3013:3031   */\n  tag_83\n  tag_84\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2977:3033   */\ntag_82:\n    /* \"#utility.yul\":3051:3080   */\n  tag_85\n    /* \"#utility.yul\":3073:3079   */\n  dup3\n    /* \"#utility.yul\":3051:3080   */\n  tag_86\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3043:3080   */\n  swap1\n  pop\n    /* \"#utility.yul\":3135:3139   */\n  0x20\n    /* \"#utility.yul\":3129:3133   */\n  dup2\n    /* \"#utility.yul\":3125:3140   */\n  add\n    /* \"#utility.yul\":3117:3140   */\n  swap1\n  pop\n    /* \"#utility.yul\":2839:3147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3153:3230   */\ntag_72:\n    /* \"#utility.yul\":3190:3197   */\n  0x00\n    /* \"#utility.yul\":3219:3224   */\n  dup2\n    /* \"#utility.yul\":3208:3224   */\n  swap1\n  pop\n    /* \"#utility.yul\":3153:3230   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3322   */\ntag_88:\n    /* \"#utility.yul\":3271:3278   */\n  0x00\n    /* \"#utility.yul\":3311:3315   */\n  0xff\n    /* \"#utility.yul\":3304:3309   */\n  dup3\n    /* \"#utility.yul\":3300:3316   */\n  and\n    /* \"#utility.yul\":3289:3316   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3322   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3328:3635   */\ntag_41:\n    /* \"#utility.yul\":3396:3397   */\n  0x00\n    /* \"#utility.yul\":3406:3519   */\ntag_91:\n    /* \"#utility.yul\":3420:3426   */\n  dup4\n    /* \"#utility.yul\":3417:3418   */\n  dup2\n    /* \"#utility.yul\":3414:3427   */\n  lt\n    /* \"#utility.yul\":3406:3519   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3505:3506   */\n  dup1\n    /* \"#utility.yul\":3500:3503   */\n  dup3\n    /* \"#utility.yul\":3496:3507   */\n  add\n    /* \"#utility.yul\":3490:3508   */\n  mload\n    /* \"#utility.yul\":3486:3487   */\n  dup2\n    /* \"#utility.yul\":3481:3484   */\n  dup5\n    /* \"#utility.yul\":3477:3488   */\n  add\n    /* \"#utility.yul\":3470:3509   */\n  mstore\n    /* \"#utility.yul\":3442:3444   */\n  0x20\n    /* \"#utility.yul\":3439:3440   */\n  dup2\n    /* \"#utility.yul\":3435:3445   */\n  add\n    /* \"#utility.yul\":3430:3445   */\n  swap1\n  pop\n    /* \"#utility.yul\":3406:3519   */\n  jump(tag_91)\ntag_93:\n    /* \"#utility.yul\":3537:3543   */\n  dup4\n    /* \"#utility.yul\":3534:3535   */\n  dup2\n    /* \"#utility.yul\":3531:3544   */\n  gt\n    /* \"#utility.yul\":3528:3629   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":3617:3618   */\n  0x00\n    /* \"#utility.yul\":3608:3614   */\n  dup5\n    /* \"#utility.yul\":3603:3606   */\n  dup5\n    /* \"#utility.yul\":3599:3615   */\n  add\n    /* \"#utility.yul\":3592:3619   */\n  mstore\n    /* \"#utility.yul\":3528:3629   */\ntag_94:\n    /* \"#utility.yul\":3377:3635   */\n  pop\n    /* \"#utility.yul\":3328:3635   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3961   */\ntag_20:\n    /* \"#utility.yul\":3685:3691   */\n  0x00\n    /* \"#utility.yul\":3722:3723   */\n  0x02\n    /* \"#utility.yul\":3716:3720   */\n  dup3\n    /* \"#utility.yul\":3712:3724   */\n  div\n    /* \"#utility.yul\":3702:3724   */\n  swap1\n  pop\n    /* \"#utility.yul\":3769:3770   */\n  0x01\n    /* \"#utility.yul\":3763:3767   */\n  dup3\n    /* \"#utility.yul\":3759:3771   */\n  and\n    /* \"#utility.yul\":3790:3808   */\n  dup1\n    /* \"#utility.yul\":3780:3861   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3846:3850   */\n  0x7f\n    /* \"#utility.yul\":3838:3844   */\n  dup3\n    /* \"#utility.yul\":3834:3851   */\n  and\n    /* \"#utility.yul\":3824:3851   */\n  swap2\n  pop\n    /* \"#utility.yul\":3780:3861   */\ntag_96:\n    /* \"#utility.yul\":3908:3910   */\n  0x20\n    /* \"#utility.yul\":3900:3906   */\n  dup3\n    /* \"#utility.yul\":3897:3911   */\n  lt\n    /* \"#utility.yul\":3877:3895   */\n  dup2\n    /* \"#utility.yul\":3874:3912   */\n  eq\n    /* \"#utility.yul\":3871:3955   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3927:3945   */\n  tag_98\n  tag_99\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3871:3955   */\ntag_97:\n    /* \"#utility.yul\":3692:3961   */\n  pop\n    /* \"#utility.yul\":3641:3961   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3967:4248   */\ntag_79:\n    /* \"#utility.yul\":4050:4077   */\n  tag_101\n    /* \"#utility.yul\":4072:4076   */\n  dup3\n    /* \"#utility.yul\":4050:4077   */\n  tag_86\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4042:4048   */\n  dup2\n    /* \"#utility.yul\":4038:4078   */\n  add\n    /* \"#utility.yul\":4180:4186   */\n  dup2\n    /* \"#utility.yul\":4168:4178   */\n  dup2\n    /* \"#utility.yul\":4165:4187   */\n  lt\n    /* \"#utility.yul\":4144:4162   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4132:4142   */\n  dup3\n    /* \"#utility.yul\":4129:4163   */\n  gt\n    /* \"#utility.yul\":4126:4188   */\n  or\n    /* \"#utility.yul\":4123:4211   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4191:4209   */\n  tag_103\n  tag_84\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4123:4211   */\ntag_102:\n    /* \"#utility.yul\":4231:4241   */\n  dup1\n    /* \"#utility.yul\":4227:4229   */\n  0x40\n    /* \"#utility.yul\":4220:4242   */\n  mstore\n    /* \"#utility.yul\":4010:4248   */\n  pop\n    /* \"#utility.yul\":3967:4248   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4254:4434   */\ntag_99:\n    /* \"#utility.yul\":4302:4379   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4299:4300   */\n  0x00\n    /* \"#utility.yul\":4292:4380   */\n  mstore\n    /* \"#utility.yul\":4399:4403   */\n  0x22\n    /* \"#utility.yul\":4396:4397   */\n  0x04\n    /* \"#utility.yul\":4389:4404   */\n  mstore\n    /* \"#utility.yul\":4423:4427   */\n  0x24\n    /* \"#utility.yul\":4420:4421   */\n  0x00\n    /* \"#utility.yul\":4413:4428   */\n  revert\n    /* \"#utility.yul\":4440:4620   */\ntag_84:\n    /* \"#utility.yul\":4488:4565   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4485:4486   */\n  0x00\n    /* \"#utility.yul\":4478:4566   */\n  mstore\n    /* \"#utility.yul\":4585:4589   */\n  0x41\n    /* \"#utility.yul\":4582:4583   */\n  0x04\n    /* \"#utility.yul\":4575:4590   */\n  mstore\n    /* \"#utility.yul\":4609:4613   */\n  0x24\n    /* \"#utility.yul\":4606:4607   */\n  0x00\n    /* \"#utility.yul\":4599:4614   */\n  revert\n    /* \"#utility.yul\":4626:4743   */\ntag_46:\n    /* \"#utility.yul\":4735:4736   */\n  0x00\n    /* \"#utility.yul\":4732:4733   */\n  dup1\n    /* \"#utility.yul\":4725:4737   */\n  revert\n    /* \"#utility.yul\":4749:4866   */\ntag_39:\n    /* \"#utility.yul\":4858:4859   */\n  0x00\n    /* \"#utility.yul\":4855:4856   */\n  dup1\n    /* \"#utility.yul\":4848:4860   */\n  revert\n    /* \"#utility.yul\":4872:4989   */\ntag_62:\n    /* \"#utility.yul\":4981:4982   */\n  0x00\n    /* \"#utility.yul\":4978:4979   */\n  dup1\n    /* \"#utility.yul\":4971:4983   */\n  revert\n    /* \"#utility.yul\":4995:5112   */\ntag_59:\n    /* \"#utility.yul\":5104:5105   */\n  0x00\n    /* \"#utility.yul\":5101:5102   */\n  dup1\n    /* \"#utility.yul\":5094:5106   */\n  revert\n    /* \"#utility.yul\":5118:5220   */\ntag_86:\n    /* \"#utility.yul\":5159:5165   */\n  0x00\n    /* \"#utility.yul\":5210:5212   */\n  0x1f\n    /* \"#utility.yul\":5206:5213   */\n  not\n    /* \"#utility.yul\":5201:5203   */\n  0x1f\n    /* \"#utility.yul\":5194:5199   */\n  dup4\n    /* \"#utility.yul\":5190:5204   */\n  add\n    /* \"#utility.yul\":5186:5214   */\n  and\n    /* \"#utility.yul\":5176:5214   */\n  swap1\n  pop\n    /* \"#utility.yul\":5118:5220   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5226:5348   */\ntag_51:\n    /* \"#utility.yul\":5299:5323   */\n  tag_112\n    /* \"#utility.yul\":5317:5322   */\n  dup2\n    /* \"#utility.yul\":5299:5323   */\n  tag_72\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5292:5297   */\n  dup2\n    /* \"#utility.yul\":5289:5324   */\n  eq\n    /* \"#utility.yul\":5279:5342   */\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5338:5339   */\n  0x00\n    /* \"#utility.yul\":5335:5336   */\n  dup1\n    /* \"#utility.yul\":5328:5340   */\n  revert\n    /* \"#utility.yul\":5279:5342   */\ntag_113:\n    /* \"#utility.yul\":5226:5348   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5354:5472   */\ntag_55:\n    /* \"#utility.yul\":5425:5447   */\n  tag_115\n    /* \"#utility.yul\":5441:5446   */\n  dup2\n    /* \"#utility.yul\":5425:5447   */\n  tag_88\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5418:5423   */\n  dup2\n    /* \"#utility.yul\":5415:5448   */\n  eq\n    /* \"#utility.yul\":5405:5466   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5462:5463   */\n  0x00\n    /* \"#utility.yul\":5459:5460   */\n  dup1\n    /* \"#utility.yul\":5452:5464   */\n  revert\n    /* \"#utility.yul\":5405:5466   */\ntag_116:\n    /* \"#utility.yul\":5354:5472   */\n  pop\n  jump\t// out\n    /* \"BEP20/BEP20Token.sol\":164:8021  contract BEP20Token is Context, IBEP20, Ownable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEP20/BEP20Token.sol\":164:8021  contract BEP20Token is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BEP20/BEP20Token.sol\":1277:1371  function name() external view virtual override returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/BEP20Token.sol\":2357:2515  function approve(address spender, uint256 amount) external virtual override returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/BEP20Token.sol\":1422:1524  function totalSupply() external view virtual override returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/BEP20Token.sol\":2946:3251  function transferFrom(address sender, address recipient, uint256 amount) external virtual override returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/BEP20Token.sol\":985:1079  function decimals() external view virtual override returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/BEP20Token.sol\":3619:3825  function increaseAllowance(address spender, uint256 addedValue) public virtual  returns (bool) {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/BEP20Token.sol\":1573:1694  function balanceOf(address account) external view virtual override returns (uint256) {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/Ownable.sol\":1619:1746  function renounceOwnership() public onlyOwner {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"BEP20/BEP20Token.sol\":837:931  function getOwner() external view virtual override returns (address) {... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/Ownable.sol\":1036:1107  function owner() public view returns (address) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/BEP20Token.sol\":1131:1229  function symbol() external view virtual override returns (string memory) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/BEP20Token.sol\":4728:4854  function mint(uint256 amount) public virtual  onlyOwner returns (bool) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/BEP20Token.sol\":4281:4538  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual  returns (bool) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/BEP20Token.sol\":1878:2042  function transfer(address recipient, uint256 amount) external virtual override returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/BEP20Token.sol\":2091:2236  function allowance(address owner, address spender) external view virtual override returns (uint256) {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/Ownable.sol\":1885:1986  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"BEP20/BEP20Token.sol\":1277:1371  function name() external view virtual override returns (string memory) {... */\n    tag_23:\n        /* \"BEP20/BEP20Token.sol\":1333:1346  string memory */\n      0x60\n        /* \"BEP20/BEP20Token.sol\":1361:1366  _name */\n      0x06\n        /* \"BEP20/BEP20Token.sol\":1354:1366  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":1277:1371  function name() external view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":2357:2515  function approve(address spender, uint256 amount) external virtual override returns (bool) {... */\n    tag_29:\n        /* \"BEP20/BEP20Token.sol\":2442:2446  bool */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":2454:2493  _approve(_msgSender(), spender, amount) */\n      tag_95\n        /* \"BEP20/BEP20Token.sol\":2463:2475  _msgSender() */\n      tag_96\n        /* \"BEP20/BEP20Token.sol\":2463:2473  _msgSender */\n      tag_97\n        /* \"BEP20/BEP20Token.sol\":2463:2475  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"BEP20/BEP20Token.sol\":2477:2484  spender */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":2486:2492  amount */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":2454:2462  _approve */\n      tag_98\n        /* \"BEP20/BEP20Token.sol\":2454:2493  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_95:\n        /* \"BEP20/BEP20Token.sol\":2506:2510  true */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":2499:2510  return true */\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":2357:2515  function approve(address spender, uint256 amount) external virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":1422:1524  function totalSupply() external view virtual override returns (uint256) {... */\n    tag_33:\n        /* \"BEP20/BEP20Token.sol\":1485:1492  uint256 */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":1507:1519  _totalSupply */\n      sload(0x03)\n        /* \"BEP20/BEP20Token.sol\":1500:1519  return _totalSupply */\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":1422:1524  function totalSupply() external view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":2946:3251  function transferFrom(address sender, address recipient, uint256 amount) external virtual override returns (bool) {... */\n    tag_39:\n        /* \"BEP20/BEP20Token.sol\":3054:3058  bool */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":3066:3102  _transfer(sender, recipient, amount) */\n      tag_101\n        /* \"BEP20/BEP20Token.sol\":3076:3082  sender */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":3084:3093  recipient */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":3095:3101  amount */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":3066:3075  _transfer */\n      tag_102\n        /* \"BEP20/BEP20Token.sol\":3066:3102  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_101:\n        /* \"BEP20/BEP20Token.sol\":3108:3229  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_103\n        /* \"BEP20/BEP20Token.sol\":3117:3123  sender */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":3125:3137  _msgSender() */\n      tag_104\n        /* \"BEP20/BEP20Token.sol\":3125:3135  _msgSender */\n      tag_97\n        /* \"BEP20/BEP20Token.sol\":3125:3137  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"BEP20/BEP20Token.sol\":3139:3228  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_105\n        /* \"BEP20/BEP20Token.sol\":3177:3183  amount */\n      dup6\n        /* \"BEP20/BEP20Token.sol\":3139:3228  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"BEP20/BEP20Token.sol\":3139:3150  _allowances */\n      0x02\n        /* \"BEP20/BEP20Token.sol\":3139:3158  _allowances[sender] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":3151:3157  sender */\n      dup12\n        /* \"BEP20/BEP20Token.sol\":3139:3158  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20/BEP20Token.sol\":3139:3172  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":3159:3171  _msgSender() */\n      tag_106\n        /* \"BEP20/BEP20Token.sol\":3159:3169  _msgSender */\n      tag_97\n        /* \"BEP20/BEP20Token.sol\":3159:3171  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"BEP20/BEP20Token.sol\":3139:3172  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20/BEP20Token.sol\":3139:3176  _allowances[sender][_msgSender()].sub */\n      tag_107\n      swap1\n        /* \"BEP20/BEP20Token.sol\":3139:3228  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"BEP20/BEP20Token.sol\":3108:3116  _approve */\n      tag_98\n        /* \"BEP20/BEP20Token.sol\":3108:3229  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_103:\n        /* \"BEP20/BEP20Token.sol\":3242:3246  true */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":3235:3246  return true */\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":2946:3251  function transferFrom(address sender, address recipient, uint256 amount) external virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":985:1079  function decimals() external view virtual override returns (uint8) {... */\n    tag_42:\n        /* \"BEP20/BEP20Token.sol\":1045:1050  uint8 */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":1065:1074  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BEP20/BEP20Token.sol\":1058:1074  return _decimals */\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":985:1079  function decimals() external view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":3619:3825  function increaseAllowance(address spender, uint256 addedValue) public virtual  returns (bool) {... */\n    tag_47:\n        /* \"BEP20/BEP20Token.sol\":3708:3712  bool */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":3720:3803  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_110\n        /* \"BEP20/BEP20Token.sol\":3729:3741  _msgSender() */\n      tag_111\n        /* \"BEP20/BEP20Token.sol\":3729:3739  _msgSender */\n      tag_97\n        /* \"BEP20/BEP20Token.sol\":3729:3741  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"BEP20/BEP20Token.sol\":3743:3750  spender */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":3752:3802  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_112\n        /* \"BEP20/BEP20Token.sol\":3791:3801  addedValue */\n      dup6\n        /* \"BEP20/BEP20Token.sol\":3752:3763  _allowances */\n      0x02\n        /* \"BEP20/BEP20Token.sol\":3752:3777  _allowances[_msgSender()] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":3764:3776  _msgSender() */\n      tag_113\n        /* \"BEP20/BEP20Token.sol\":3764:3774  _msgSender */\n      tag_97\n        /* \"BEP20/BEP20Token.sol\":3764:3776  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"BEP20/BEP20Token.sol\":3752:3777  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20/BEP20Token.sol\":3752:3786  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":3778:3785  spender */\n      dup10\n        /* \"BEP20/BEP20Token.sol\":3752:3786  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20/BEP20Token.sol\":3752:3790  _allowances[_msgSender()][spender].add */\n      tag_114\n      swap1\n        /* \"BEP20/BEP20Token.sol\":3752:3802  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"BEP20/BEP20Token.sol\":3720:3728  _approve */\n      tag_98\n        /* \"BEP20/BEP20Token.sol\":3720:3803  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_110:\n        /* \"BEP20/BEP20Token.sol\":3816:3820  true */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":3809:3820  return true */\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":3619:3825  function increaseAllowance(address spender, uint256 addedValue) public virtual  returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":1573:1694  function balanceOf(address account) external view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"BEP20/BEP20Token.sol\":1649:1656  uint256 */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":1671:1680  _balances */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":1671:1689  _balances[account] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":1681:1688  account */\n      dup4\n        /* \"BEP20/BEP20Token.sol\":1671:1689  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20/BEP20Token.sol\":1664:1689  return _balances[account] */\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":1573:1694  function balanceOf(address account) external view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BEP20/Ownable.sol\":1619:1746  function renounceOwnership() public onlyOwner {... */\n    tag_55:\n        /* \"BEP20/Ownable.sol\":1232:1244  _msgSender() */\n      tag_117\n        /* \"BEP20/Ownable.sol\":1232:1242  _msgSender */\n      tag_97\n        /* \"BEP20/Ownable.sol\":1232:1244  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"BEP20/Ownable.sol\":1222:1244  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1222:1228  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1222:1244  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEP20/Ownable.sol\":1214:1281  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"BEP20/Ownable.sol\":1713:1714  0 */\n      0x00\n        /* \"BEP20/Ownable.sol\":1676:1716  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1697:1703  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1676:1716  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20/Ownable.sol\":1739:1740  0 */\n      0x00\n        /* \"BEP20/Ownable.sol\":1722:1728  _owner */\n      dup1\n      0x00\n        /* \"BEP20/Ownable.sol\":1722:1741  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEP20/Ownable.sol\":1619:1746  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":837:931  function getOwner() external view virtual override returns (address) {... */\n    tag_57:\n        /* \"BEP20/BEP20Token.sol\":897:904  address */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":919:926  owner() */\n      tag_123\n        /* \"BEP20/BEP20Token.sol\":919:924  owner */\n      tag_61\n        /* \"BEP20/BEP20Token.sol\":919:926  owner() */\n      jump\t// in\n    tag_123:\n        /* \"BEP20/BEP20Token.sol\":912:926  return owner() */\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":837:931  function getOwner() external view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20/Ownable.sol\":1036:1107  function owner() public view returns (address) {... */\n    tag_61:\n        /* \"BEP20/Ownable.sol\":1074:1081  address */\n      0x00\n        /* \"BEP20/Ownable.sol\":1096:1102  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1089:1102  return _owner */\n      swap1\n      pop\n        /* \"BEP20/Ownable.sol\":1036:1107  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":1131:1229  function symbol() external view virtual override returns (string memory) {... */\n    tag_64:\n        /* \"BEP20/BEP20Token.sol\":1189:1202  string memory */\n      0x60\n        /* \"BEP20/BEP20Token.sol\":1217:1224  _symbol */\n      0x05\n        /* \"BEP20/BEP20Token.sol\":1210:1224  return _symbol */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_89\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_89\n      jump\t// in\n    tag_127:\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_129\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_128)\n    tag_129:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_130:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_130\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":1131:1229  function symbol() external view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":4728:4854  function mint(uint256 amount) public virtual  onlyOwner returns (bool) {... */\n    tag_69:\n        /* \"BEP20/BEP20Token.sol\":4793:4797  bool */\n      0x00\n        /* \"BEP20/Ownable.sol\":1232:1244  _msgSender() */\n      tag_132\n        /* \"BEP20/Ownable.sol\":1232:1242  _msgSender */\n      tag_97\n        /* \"BEP20/Ownable.sol\":1232:1244  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"BEP20/Ownable.sol\":1222:1244  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1222:1228  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1222:1244  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEP20/Ownable.sol\":1214:1281  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_120\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"BEP20/BEP20Token.sol\":4805:4832  _mint(_msgSender(), amount) */\n      tag_136\n        /* \"BEP20/BEP20Token.sol\":4811:4823  _msgSender() */\n      tag_137\n        /* \"BEP20/BEP20Token.sol\":4811:4821  _msgSender */\n      tag_97\n        /* \"BEP20/BEP20Token.sol\":4811:4823  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"BEP20/BEP20Token.sol\":4825:4831  amount */\n      dup4\n        /* \"BEP20/BEP20Token.sol\":4805:4810  _mint */\n      tag_138\n        /* \"BEP20/BEP20Token.sol\":4805:4832  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_136:\n        /* \"BEP20/BEP20Token.sol\":4845:4849  true */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":4838:4849  return true */\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":4728:4854  function mint(uint256 amount) public virtual  onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":4281:4538  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual  returns (bool) {... */\n    tag_73:\n        /* \"BEP20/BEP20Token.sol\":4375:4379  bool */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":4387:4516  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_140\n        /* \"BEP20/BEP20Token.sol\":4396:4408  _msgSender() */\n      tag_141\n        /* \"BEP20/BEP20Token.sol\":4396:4406  _msgSender */\n      tag_97\n        /* \"BEP20/BEP20Token.sol\":4396:4408  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"BEP20/BEP20Token.sol\":4410:4417  spender */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":4419:4515  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_142\n        /* \"BEP20/BEP20Token.sol\":4458:4473  subtractedValue */\n      dup6\n        /* \"BEP20/BEP20Token.sol\":4419:4515  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"BEP20/BEP20Token.sol\":4419:4430  _allowances */\n      0x02\n        /* \"BEP20/BEP20Token.sol\":4419:4444  _allowances[_msgSender()] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":4431:4443  _msgSender() */\n      tag_143\n        /* \"BEP20/BEP20Token.sol\":4431:4441  _msgSender */\n      tag_97\n        /* \"BEP20/BEP20Token.sol\":4431:4443  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"BEP20/BEP20Token.sol\":4419:4444  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20/BEP20Token.sol\":4419:4453  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":4445:4452  spender */\n      dup11\n        /* \"BEP20/BEP20Token.sol\":4419:4453  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20/BEP20Token.sol\":4419:4457  _allowances[_msgSender()][spender].sub */\n      tag_107\n      swap1\n        /* \"BEP20/BEP20Token.sol\":4419:4515  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"BEP20/BEP20Token.sol\":4387:4395  _approve */\n      tag_98\n        /* \"BEP20/BEP20Token.sol\":4387:4516  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_140:\n        /* \"BEP20/BEP20Token.sol\":4529:4533  true */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":4522:4533  return true */\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":4281:4538  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual  returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":1878:2042  function transfer(address recipient, uint256 amount) external virtual override returns (bool) {... */\n    tag_77:\n        /* \"BEP20/BEP20Token.sol\":1966:1970  bool */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":1978:2020  _transfer(_msgSender(), recipient, amount) */\n      tag_145\n        /* \"BEP20/BEP20Token.sol\":1988:2000  _msgSender() */\n      tag_146\n        /* \"BEP20/BEP20Token.sol\":1988:1998  _msgSender */\n      tag_97\n        /* \"BEP20/BEP20Token.sol\":1988:2000  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"BEP20/BEP20Token.sol\":2002:2011  recipient */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":2013:2019  amount */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":1978:1987  _transfer */\n      tag_102\n        /* \"BEP20/BEP20Token.sol\":1978:2020  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_145:\n        /* \"BEP20/BEP20Token.sol\":2033:2037  true */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":2026:2037  return true */\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":1878:2042  function transfer(address recipient, uint256 amount) external virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":2091:2236  function allowance(address owner, address spender) external view virtual override returns (uint256) {... */\n    tag_82:\n        /* \"BEP20/BEP20Token.sol\":2182:2189  uint256 */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":2204:2215  _allowances */\n      0x02\n        /* \"BEP20/BEP20Token.sol\":2204:2222  _allowances[owner] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":2216:2221  owner */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":2204:2222  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20/BEP20Token.sol\":2204:2231  _allowances[owner][spender] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":2223:2230  spender */\n      dup4\n        /* \"BEP20/BEP20Token.sol\":2204:2231  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20/BEP20Token.sol\":2197:2231  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"BEP20/BEP20Token.sol\":2091:2236  function allowance(address owner, address spender) external view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20/Ownable.sol\":1885:1986  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_86:\n        /* \"BEP20/Ownable.sol\":1232:1244  _msgSender() */\n      tag_149\n        /* \"BEP20/Ownable.sol\":1232:1242  _msgSender */\n      tag_97\n        /* \"BEP20/Ownable.sol\":1232:1244  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"BEP20/Ownable.sol\":1222:1244  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1222:1228  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1222:1244  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEP20/Ownable.sol\":1214:1281  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_120\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"BEP20/Ownable.sol\":1953:1981  _transferOwnership(newOwner) */\n      tag_153\n        /* \"BEP20/Ownable.sol\":1972:1980  newOwner */\n      dup2\n        /* \"BEP20/Ownable.sol\":1953:1971  _transferOwnership */\n      tag_154\n        /* \"BEP20/Ownable.sol\":1953:1981  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_153:\n        /* \"BEP20/Ownable.sol\":1885:1986  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEP20/Context.sol\":772:871  function _msgSender() internal view returns (address payable) {... */\n    tag_97:\n        /* \"BEP20/Context.sol\":817:832  address payable */\n      0x00\n        /* \"BEP20/Context.sol\":855:865  msg.sender */\n      caller\n        /* \"BEP20/Context.sol\":840:866  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"BEP20/Context.sol\":772:871  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":7306:7628  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_98:\n        /* \"BEP20/BEP20Token.sol\":7420:7421  0 */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":7403:7422  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/BEP20Token.sol\":7403:7408  owner */\n      dup4\n        /* \"BEP20/BEP20Token.sol\":7403:7422  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20/BEP20Token.sol\":7395:7463  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"BEP20/BEP20Token.sol\":7496:7497  0 */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":7477:7498  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/BEP20Token.sol\":7477:7484  spender */\n      dup3\n        /* \"BEP20/BEP20Token.sol\":7477:7498  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20/BEP20Token.sol\":7469:7537  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"BEP20/BEP20Token.sol\":7574:7580  amount */\n      dup1\n        /* \"BEP20/BEP20Token.sol\":7544:7555  _allowances */\n      0x02\n        /* \"BEP20/BEP20Token.sol\":7544:7562  _allowances[owner] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":7556:7561  owner */\n      dup6\n        /* \"BEP20/BEP20Token.sol\":7544:7562  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20/BEP20Token.sol\":7544:7571  _allowances[owner][spender] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":7563:7570  spender */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":7544:7571  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20/BEP20Token.sol\":7544:7580  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20/BEP20Token.sol\":7607:7614  spender */\n      dup2\n        /* \"BEP20/BEP20Token.sol\":7591:7623  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/BEP20Token.sol\":7600:7605  owner */\n      dup4\n        /* \"BEP20/BEP20Token.sol\":7591:7623  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"BEP20/BEP20Token.sol\":7616:7622  amount */\n      dup4\n        /* \"BEP20/BEP20Token.sol\":7591:7623  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20/BEP20Token.sol\":7306:7628  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":5298:5748  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_102:\n        /* \"BEP20/BEP20Token.sol\":5417:5418  0 */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":5399:5419  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/BEP20Token.sol\":5399:5405  sender */\n      dup4\n        /* \"BEP20/BEP20Token.sol\":5399:5419  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20/BEP20Token.sol\":5391:5461  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"BEP20/BEP20Token.sol\":5496:5497  0 */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":5475:5498  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/BEP20Token.sol\":5475:5484  recipient */\n      dup3\n        /* \"BEP20/BEP20Token.sol\":5475:5498  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20/BEP20Token.sol\":5467:5538  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"BEP20/BEP20Token.sol\":5565:5636  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_171\n        /* \"BEP20/BEP20Token.sol\":5587:5593  amount */\n      dup2\n        /* \"BEP20/BEP20Token.sol\":5565:5636  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"BEP20/BEP20Token.sol\":5565:5574  _balances */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":5565:5582  _balances[sender] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":5575:5581  sender */\n      dup8\n        /* \"BEP20/BEP20Token.sol\":5565:5582  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20/BEP20Token.sol\":5565:5586  _balances[sender].sub */\n      tag_107\n      swap1\n        /* \"BEP20/BEP20Token.sol\":5565:5636  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"BEP20/BEP20Token.sol\":5545:5554  _balances */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":5545:5562  _balances[sender] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":5555:5561  sender */\n      dup6\n        /* \"BEP20/BEP20Token.sol\":5545:5562  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20/BEP20Token.sol\":5545:5636  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20/BEP20Token.sol\":5665:5697  _balances[recipient].add(amount) */\n      tag_172\n        /* \"BEP20/BEP20Token.sol\":5690:5696  amount */\n      dup2\n        /* \"BEP20/BEP20Token.sol\":5665:5674  _balances */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":5665:5685  _balances[recipient] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":5675:5684  recipient */\n      dup6\n        /* \"BEP20/BEP20Token.sol\":5665:5685  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20/BEP20Token.sol\":5665:5689  _balances[recipient].add */\n      tag_114\n      swap1\n        /* \"BEP20/BEP20Token.sol\":5665:5697  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"BEP20/BEP20Token.sol\":5642:5651  _balances */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":5642:5662  _balances[recipient] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":5652:5661  recipient */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":5642:5662  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20/BEP20Token.sol\":5642:5697  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20/BEP20Token.sol\":5725:5734  recipient */\n      dup2\n        /* \"BEP20/BEP20Token.sol\":5708:5743  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/BEP20Token.sol\":5717:5723  sender */\n      dup4\n        /* \"BEP20/BEP20Token.sol\":5708:5743  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"BEP20/BEP20Token.sol\":5736:5742  amount */\n      dup4\n        /* \"BEP20/BEP20Token.sol\":5708:5743  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20/BEP20Token.sol\":5298:5748  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20/SafeMath.sol\":1653:1826  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_107:\n        /* \"BEP20/SafeMath.sol\":1739:1746  uint256 */\n      0x00\n        /* \"BEP20/SafeMath.sol\":1767:1768  a */\n      dup4\n        /* \"BEP20/SafeMath.sol\":1762:1763  b */\n      dup4\n        /* \"BEP20/SafeMath.sol\":1762:1768  b <= a */\n      gt\n      iszero\n        /* \"BEP20/SafeMath.sol\":1770:1782  errorMessage */\n      dup3\n        /* \"BEP20/SafeMath.sol\":1754:1783  require(b <= a, errorMessage) */\n      swap1\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n      pop\n        /* \"BEP20/SafeMath.sol\":1789:1798  uint256 c */\n      0x00\n        /* \"BEP20/SafeMath.sol\":1805:1806  b */\n      dup4\n        /* \"BEP20/SafeMath.sol\":1801:1802  a */\n      dup6\n        /* \"BEP20/SafeMath.sol\":1801:1806  a - b */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"BEP20/SafeMath.sol\":1789:1806  uint256 c = a - b */\n      swap1\n      pop\n        /* \"BEP20/SafeMath.sol\":1820:1821  c */\n      dup1\n        /* \"BEP20/SafeMath.sol\":1813:1821  return c */\n      swap2\n      pop\n      pop\n        /* \"BEP20/SafeMath.sol\":1653:1826  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20/SafeMath.sol\":855:1017  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_114:\n        /* \"BEP20/SafeMath.sol\":913:920  uint256 */\n      0x00\n        /* \"BEP20/SafeMath.sol\":928:937  uint256 c */\n      dup1\n        /* \"BEP20/SafeMath.sol\":944:945  b */\n      dup3\n        /* \"BEP20/SafeMath.sol\":940:941  a */\n      dup5\n        /* \"BEP20/SafeMath.sol\":940:945  a + b */\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"BEP20/SafeMath.sol\":928:945  uint256 c = a + b */\n      swap1\n      pop\n        /* \"BEP20/SafeMath.sol\":964:965  a */\n      dup4\n        /* \"BEP20/SafeMath.sol\":959:960  c */\n      dup2\n        /* \"BEP20/SafeMath.sol\":959:965  c >= a */\n      lt\n      iszero\n        /* \"BEP20/SafeMath.sol\":951:997  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"BEP20/SafeMath.sol\":1011:1012  c */\n      dup1\n        /* \"BEP20/SafeMath.sol\":1004:1012  return c */\n      swap2\n      pop\n      pop\n        /* \"BEP20/SafeMath.sol\":855:1017  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20/BEP20Token.sol\":5998:6282  function _mint(address account, uint256 amount) internal {... */\n    tag_138:\n        /* \"BEP20/BEP20Token.sol\":6088:6089  0 */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":6069:6090  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/BEP20Token.sol\":6069:6076  account */\n      dup3\n        /* \"BEP20/BEP20Token.sol\":6069:6090  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20/BEP20Token.sol\":6061:6126  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"BEP20/BEP20Token.sol\":6148:6172  _totalSupply.add(amount) */\n      tag_189\n        /* \"BEP20/BEP20Token.sol\":6165:6171  amount */\n      dup2\n        /* \"BEP20/BEP20Token.sol\":6148:6160  _totalSupply */\n      sload(0x03)\n        /* \"BEP20/BEP20Token.sol\":6148:6164  _totalSupply.add */\n      tag_114\n      swap1\n        /* \"BEP20/BEP20Token.sol\":6148:6172  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"BEP20/BEP20Token.sol\":6133:6145  _totalSupply */\n      0x03\n        /* \"BEP20/BEP20Token.sol\":6133:6172  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20/BEP20Token.sol\":6199:6229  _balances[account].add(amount) */\n      tag_190\n        /* \"BEP20/BEP20Token.sol\":6222:6228  amount */\n      dup2\n        /* \"BEP20/BEP20Token.sol\":6199:6208  _balances */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":6199:6217  _balances[account] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":6209:6216  account */\n      dup6\n        /* \"BEP20/BEP20Token.sol\":6199:6217  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20/BEP20Token.sol\":6199:6221  _balances[account].add */\n      tag_114\n      swap1\n        /* \"BEP20/BEP20Token.sol\":6199:6229  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"BEP20/BEP20Token.sol\":6178:6187  _balances */\n      0x01\n        /* \"BEP20/BEP20Token.sol\":6178:6196  _balances[account] */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":6188:6195  account */\n      dup5\n        /* \"BEP20/BEP20Token.sol\":6178:6196  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20/BEP20Token.sol\":6178:6229  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20/BEP20Token.sol\":6261:6268  account */\n      dup2\n        /* \"BEP20/BEP20Token.sol\":6240:6277  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/BEP20Token.sol\":6257:6258  0 */\n      0x00\n        /* \"BEP20/BEP20Token.sol\":6240:6277  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"BEP20/BEP20Token.sol\":6270:6276  amount */\n      dup4\n        /* \"BEP20/BEP20Token.sol\":6240:6277  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_191\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20/BEP20Token.sol\":5998:6282  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20/Ownable.sol\":2079:2290  function _transferOwnership(address newOwner) internal {... */\n    tag_154:\n        /* \"BEP20/Ownable.sol\":2168:2169  0 */\n      0x00\n        /* \"BEP20/Ownable.sol\":2148:2170  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":2148:2156  newOwner */\n      dup2\n        /* \"BEP20/Ownable.sol\":2148:2170  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20/Ownable.sol\":2140:2213  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"BEP20/Ownable.sol\":2253:2261  newOwner */\n      dup1\n        /* \"BEP20/Ownable.sol\":2224:2262  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":2245:2251  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":2224:2262  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20/Ownable.sol\":2277:2285  newOwner */\n      dup1\n        /* \"BEP20/Ownable.sol\":2268:2274  _owner */\n      0x00\n      dup1\n        /* \"BEP20/Ownable.sol\":2268:2285  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEP20/Ownable.sol\":2079:2290  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_197:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_199\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_201:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_203\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_51:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_207\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":373:492   */\n    tag_206:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_209\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_197\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_81:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_212\n      tag_208\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":725:844   */\n    tag_211:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_213\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_197\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_214\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_197\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_38:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_217\n      tag_208\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1222:1341   */\n    tag_216:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_218\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_197\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_219\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_197\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_220\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_201\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_28:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_223\n      tag_208\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1830:1949   */\n    tag_222:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_224\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_197\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_225\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_201\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2546   */\n    tag_68:\n        /* \"#utility.yul\":2276:2282   */\n      0x00\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2313:2322   */\n      dup3\n        /* \"#utility.yul\":2304:2311   */\n      dup5\n        /* \"#utility.yul\":2300:2323   */\n      sub\n        /* \"#utility.yul\":2296:2328   */\n      slt\n        /* \"#utility.yul\":2293:2412   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":2331:2410   */\n      tag_228\n      tag_208\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2293:2412   */\n    tag_227:\n        /* \"#utility.yul\":2451:2452   */\n      0x00\n        /* \"#utility.yul\":2476:2529   */\n      tag_229\n        /* \"#utility.yul\":2521:2528   */\n      dup5\n        /* \"#utility.yul\":2512:2518   */\n      dup3\n        /* \"#utility.yul\":2501:2510   */\n      dup6\n        /* \"#utility.yul\":2497:2519   */\n      add\n        /* \"#utility.yul\":2476:2529   */\n      tag_201\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2466:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2422:2539   */\n      pop\n        /* \"#utility.yul\":2217:2546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2552:2670   */\n    tag_230:\n        /* \"#utility.yul\":2639:2663   */\n      tag_232\n        /* \"#utility.yul\":2657:2662   */\n      dup2\n        /* \"#utility.yul\":2639:2663   */\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2634:2637   */\n      dup3\n        /* \"#utility.yul\":2627:2664   */\n      mstore\n        /* \"#utility.yul\":2552:2670   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2676:2785   */\n    tag_234:\n        /* \"#utility.yul\":2757:2778   */\n      tag_236\n        /* \"#utility.yul\":2772:2777   */\n      dup2\n        /* \"#utility.yul\":2757:2778   */\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2752:2755   */\n      dup3\n        /* \"#utility.yul\":2745:2779   */\n      mstore\n        /* \"#utility.yul\":2676:2785   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:3155   */\n    tag_238:\n        /* \"#utility.yul\":2879:2882   */\n      0x00\n        /* \"#utility.yul\":2907:2946   */\n      tag_240\n        /* \"#utility.yul\":2940:2945   */\n      dup3\n        /* \"#utility.yul\":2907:2946   */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2962:3033   */\n      tag_242\n        /* \"#utility.yul\":3026:3032   */\n      dup2\n        /* \"#utility.yul\":3021:3024   */\n      dup6\n        /* \"#utility.yul\":2962:3033   */\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2955:3033   */\n      swap4\n      pop\n        /* \"#utility.yul\":3042:3094   */\n      tag_244\n        /* \"#utility.yul\":3087:3093   */\n      dup2\n        /* \"#utility.yul\":3082:3085   */\n      dup6\n        /* \"#utility.yul\":3075:3079   */\n      0x20\n        /* \"#utility.yul\":3068:3073   */\n      dup7\n        /* \"#utility.yul\":3064:3080   */\n      add\n        /* \"#utility.yul\":3042:3094   */\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3119:3148   */\n      tag_246\n        /* \"#utility.yul\":3141:3147   */\n      dup2\n        /* \"#utility.yul\":3119:3148   */\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3114:3117   */\n      dup5\n        /* \"#utility.yul\":3110:3149   */\n      add\n        /* \"#utility.yul\":3103:3149   */\n      swap2\n      pop\n        /* \"#utility.yul\":2883:3155   */\n      pop\n        /* \"#utility.yul\":2791:3155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3161:3527   */\n    tag_248:\n        /* \"#utility.yul\":3303:3306   */\n      0x00\n        /* \"#utility.yul\":3324:3391   */\n      tag_250\n        /* \"#utility.yul\":3388:3390   */\n      0x25\n        /* \"#utility.yul\":3383:3386   */\n      dup4\n        /* \"#utility.yul\":3324:3391   */\n      tag_243\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3317:3391   */\n      swap2\n      pop\n        /* \"#utility.yul\":3400:3493   */\n      tag_251\n        /* \"#utility.yul\":3489:3492   */\n      dup3\n        /* \"#utility.yul\":3400:3493   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3518:3520   */\n      0x40\n        /* \"#utility.yul\":3513:3516   */\n      dup3\n        /* \"#utility.yul\":3509:3521   */\n      add\n        /* \"#utility.yul\":3502:3521   */\n      swap1\n      pop\n        /* \"#utility.yul\":3161:3527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3533:3899   */\n    tag_253:\n        /* \"#utility.yul\":3675:3678   */\n      0x00\n        /* \"#utility.yul\":3696:3763   */\n      tag_255\n        /* \"#utility.yul\":3760:3762   */\n      0x24\n        /* \"#utility.yul\":3755:3758   */\n      dup4\n        /* \"#utility.yul\":3696:3763   */\n      tag_243\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3689:3763   */\n      swap2\n      pop\n        /* \"#utility.yul\":3772:3865   */\n      tag_256\n        /* \"#utility.yul\":3861:3864   */\n      dup3\n        /* \"#utility.yul\":3772:3865   */\n      tag_257\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3890:3892   */\n      0x40\n        /* \"#utility.yul\":3885:3888   */\n      dup3\n        /* \"#utility.yul\":3881:3893   */\n      add\n        /* \"#utility.yul\":3874:3893   */\n      swap1\n      pop\n        /* \"#utility.yul\":3533:3899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4271   */\n    tag_258:\n        /* \"#utility.yul\":4047:4050   */\n      0x00\n        /* \"#utility.yul\":4068:4135   */\n      tag_260\n        /* \"#utility.yul\":4132:4134   */\n      0x26\n        /* \"#utility.yul\":4127:4130   */\n      dup4\n        /* \"#utility.yul\":4068:4135   */\n      tag_243\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4061:4135   */\n      swap2\n      pop\n        /* \"#utility.yul\":4144:4237   */\n      tag_261\n        /* \"#utility.yul\":4233:4236   */\n      dup3\n        /* \"#utility.yul\":4144:4237   */\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4262:4264   */\n      0x40\n        /* \"#utility.yul\":4257:4260   */\n      dup3\n        /* \"#utility.yul\":4253:4265   */\n      add\n        /* \"#utility.yul\":4246:4265   */\n      swap1\n      pop\n        /* \"#utility.yul\":3905:4271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4277:4643   */\n    tag_263:\n        /* \"#utility.yul\":4419:4422   */\n      0x00\n        /* \"#utility.yul\":4440:4507   */\n      tag_265\n        /* \"#utility.yul\":4504:4506   */\n      0x1b\n        /* \"#utility.yul\":4499:4502   */\n      dup4\n        /* \"#utility.yul\":4440:4507   */\n      tag_243\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4433:4507   */\n      swap2\n      pop\n        /* \"#utility.yul\":4516:4609   */\n      tag_266\n        /* \"#utility.yul\":4605:4608   */\n      dup3\n        /* \"#utility.yul\":4516:4609   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4634:4636   */\n      0x20\n        /* \"#utility.yul\":4629:4632   */\n      dup3\n        /* \"#utility.yul\":4625:4637   */\n      add\n        /* \"#utility.yul\":4618:4637   */\n      swap1\n      pop\n        /* \"#utility.yul\":4277:4643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4649:5015   */\n    tag_268:\n        /* \"#utility.yul\":4791:4794   */\n      0x00\n        /* \"#utility.yul\":4812:4879   */\n      tag_270\n        /* \"#utility.yul\":4876:4878   */\n      0x1f\n        /* \"#utility.yul\":4871:4874   */\n      dup4\n        /* \"#utility.yul\":4812:4879   */\n      tag_243\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4805:4879   */\n      swap2\n      pop\n        /* \"#utility.yul\":4888:4981   */\n      tag_271\n        /* \"#utility.yul\":4977:4980   */\n      dup3\n        /* \"#utility.yul\":4888:4981   */\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5006:5008   */\n      0x20\n        /* \"#utility.yul\":5001:5004   */\n      dup3\n        /* \"#utility.yul\":4997:5009   */\n      add\n        /* \"#utility.yul\":4990:5009   */\n      swap1\n      pop\n        /* \"#utility.yul\":4649:5015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5021:5387   */\n    tag_273:\n        /* \"#utility.yul\":5163:5166   */\n      0x00\n        /* \"#utility.yul\":5184:5251   */\n      tag_275\n        /* \"#utility.yul\":5248:5250   */\n      0x20\n        /* \"#utility.yul\":5243:5246   */\n      dup4\n        /* \"#utility.yul\":5184:5251   */\n      tag_243\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5177:5251   */\n      swap2\n      pop\n        /* \"#utility.yul\":5260:5353   */\n      tag_276\n        /* \"#utility.yul\":5349:5352   */\n      dup3\n        /* \"#utility.yul\":5260:5353   */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":5378:5380   */\n      0x20\n        /* \"#utility.yul\":5373:5376   */\n      dup3\n        /* \"#utility.yul\":5369:5381   */\n      add\n        /* \"#utility.yul\":5362:5381   */\n      swap1\n      pop\n        /* \"#utility.yul\":5021:5387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5393:5759   */\n    tag_278:\n        /* \"#utility.yul\":5535:5538   */\n      0x00\n        /* \"#utility.yul\":5556:5623   */\n      tag_280\n        /* \"#utility.yul\":5620:5622   */\n      0x23\n        /* \"#utility.yul\":5615:5618   */\n      dup4\n        /* \"#utility.yul\":5556:5623   */\n      tag_243\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5549:5623   */\n      swap2\n      pop\n        /* \"#utility.yul\":5632:5725   */\n      tag_281\n        /* \"#utility.yul\":5721:5724   */\n      dup3\n        /* \"#utility.yul\":5632:5725   */\n      tag_282\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5750:5752   */\n      0x40\n        /* \"#utility.yul\":5745:5748   */\n      dup3\n        /* \"#utility.yul\":5741:5753   */\n      add\n        /* \"#utility.yul\":5734:5753   */\n      swap1\n      pop\n        /* \"#utility.yul\":5393:5759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5765:6131   */\n    tag_283:\n        /* \"#utility.yul\":5907:5910   */\n      0x00\n        /* \"#utility.yul\":5928:5995   */\n      tag_285\n        /* \"#utility.yul\":5992:5994   */\n      0x22\n        /* \"#utility.yul\":5987:5990   */\n      dup4\n        /* \"#utility.yul\":5928:5995   */\n      tag_243\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5921:5995   */\n      swap2\n      pop\n        /* \"#utility.yul\":6004:6097   */\n      tag_286\n        /* \"#utility.yul\":6093:6096   */\n      dup3\n        /* \"#utility.yul\":6004:6097   */\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":6122:6124   */\n      0x40\n        /* \"#utility.yul\":6117:6120   */\n      dup3\n        /* \"#utility.yul\":6113:6125   */\n      add\n        /* \"#utility.yul\":6106:6125   */\n      swap1\n      pop\n        /* \"#utility.yul\":5765:6131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6137:6255   */\n    tag_288:\n        /* \"#utility.yul\":6224:6248   */\n      tag_290\n        /* \"#utility.yul\":6242:6247   */\n      dup2\n        /* \"#utility.yul\":6224:6248   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6219:6222   */\n      dup3\n        /* \"#utility.yul\":6212:6249   */\n      mstore\n        /* \"#utility.yul\":6137:6255   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6261:6373   */\n    tag_292:\n        /* \"#utility.yul\":6344:6366   */\n      tag_294\n        /* \"#utility.yul\":6360:6365   */\n      dup2\n        /* \"#utility.yul\":6344:6366   */\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6339:6342   */\n      dup3\n        /* \"#utility.yul\":6332:6367   */\n      mstore\n        /* \"#utility.yul\":6261:6373   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6379:6601   */\n    tag_59:\n        /* \"#utility.yul\":6472:6476   */\n      0x00\n        /* \"#utility.yul\":6510:6512   */\n      0x20\n        /* \"#utility.yul\":6499:6508   */\n      dup3\n        /* \"#utility.yul\":6495:6513   */\n      add\n        /* \"#utility.yul\":6487:6513   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6594   */\n      tag_297\n        /* \"#utility.yul\":6591:6592   */\n      0x00\n        /* \"#utility.yul\":6580:6589   */\n      dup4\n        /* \"#utility.yul\":6576:6593   */\n      add\n        /* \"#utility.yul\":6567:6573   */\n      dup5\n        /* \"#utility.yul\":6523:6594   */\n      tag_230\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6379:6601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6607:6817   */\n    tag_31:\n        /* \"#utility.yul\":6694:6698   */\n      0x00\n        /* \"#utility.yul\":6732:6734   */\n      0x20\n        /* \"#utility.yul\":6721:6730   */\n      dup3\n        /* \"#utility.yul\":6717:6735   */\n      add\n        /* \"#utility.yul\":6709:6735   */\n      swap1\n      pop\n        /* \"#utility.yul\":6745:6810   */\n      tag_299\n        /* \"#utility.yul\":6807:6808   */\n      0x00\n        /* \"#utility.yul\":6796:6805   */\n      dup4\n        /* \"#utility.yul\":6792:6809   */\n      add\n        /* \"#utility.yul\":6783:6789   */\n      dup5\n        /* \"#utility.yul\":6745:6810   */\n      tag_234\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6607:6817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6823:7136   */\n    tag_25:\n        /* \"#utility.yul\":6936:6940   */\n      0x00\n        /* \"#utility.yul\":6974:6976   */\n      0x20\n        /* \"#utility.yul\":6963:6972   */\n      dup3\n        /* \"#utility.yul\":6959:6977   */\n      add\n        /* \"#utility.yul\":6951:6977   */\n      swap1\n      pop\n        /* \"#utility.yul\":7023:7032   */\n      dup2\n        /* \"#utility.yul\":7017:7021   */\n      dup2\n        /* \"#utility.yul\":7013:7033   */\n      sub\n        /* \"#utility.yul\":7009:7010   */\n      0x00\n        /* \"#utility.yul\":6998:7007   */\n      dup4\n        /* \"#utility.yul\":6994:7011   */\n      add\n        /* \"#utility.yul\":6987:7034   */\n      mstore\n        /* \"#utility.yul\":7051:7129   */\n      tag_301\n        /* \"#utility.yul\":7124:7128   */\n      dup2\n        /* \"#utility.yul\":7115:7121   */\n      dup5\n        /* \"#utility.yul\":7051:7129   */\n      tag_238\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7043:7129   */\n      swap1\n      pop\n        /* \"#utility.yul\":6823:7136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7142:7561   */\n    tag_167:\n        /* \"#utility.yul\":7308:7312   */\n      0x00\n        /* \"#utility.yul\":7346:7348   */\n      0x20\n        /* \"#utility.yul\":7335:7344   */\n      dup3\n        /* \"#utility.yul\":7331:7349   */\n      add\n        /* \"#utility.yul\":7323:7349   */\n      swap1\n      pop\n        /* \"#utility.yul\":7395:7404   */\n      dup2\n        /* \"#utility.yul\":7389:7393   */\n      dup2\n        /* \"#utility.yul\":7385:7405   */\n      sub\n        /* \"#utility.yul\":7381:7382   */\n      0x00\n        /* \"#utility.yul\":7370:7379   */\n      dup4\n        /* \"#utility.yul\":7366:7383   */\n      add\n        /* \"#utility.yul\":7359:7406   */\n      mstore\n        /* \"#utility.yul\":7423:7554   */\n      tag_303\n        /* \"#utility.yul\":7549:7553   */\n      dup2\n        /* \"#utility.yul\":7423:7554   */\n      tag_248\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7415:7554   */\n      swap1\n      pop\n        /* \"#utility.yul\":7142:7561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7567:7986   */\n    tag_159:\n        /* \"#utility.yul\":7733:7737   */\n      0x00\n        /* \"#utility.yul\":7771:7773   */\n      0x20\n        /* \"#utility.yul\":7760:7769   */\n      dup3\n        /* \"#utility.yul\":7756:7774   */\n      add\n        /* \"#utility.yul\":7748:7774   */\n      swap1\n      pop\n        /* \"#utility.yul\":7820:7829   */\n      dup2\n        /* \"#utility.yul\":7814:7818   */\n      dup2\n        /* \"#utility.yul\":7810:7830   */\n      sub\n        /* \"#utility.yul\":7806:7807   */\n      0x00\n        /* \"#utility.yul\":7795:7804   */\n      dup4\n        /* \"#utility.yul\":7791:7808   */\n      add\n        /* \"#utility.yul\":7784:7831   */\n      mstore\n        /* \"#utility.yul\":7848:7979   */\n      tag_305\n        /* \"#utility.yul\":7974:7978   */\n      dup2\n        /* \"#utility.yul\":7848:7979   */\n      tag_253\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7840:7979   */\n      swap1\n      pop\n        /* \"#utility.yul\":7567:7986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7992:8411   */\n    tag_195:\n        /* \"#utility.yul\":8158:8162   */\n      0x00\n        /* \"#utility.yul\":8196:8198   */\n      0x20\n        /* \"#utility.yul\":8185:8194   */\n      dup3\n        /* \"#utility.yul\":8181:8199   */\n      add\n        /* \"#utility.yul\":8173:8199   */\n      swap1\n      pop\n        /* \"#utility.yul\":8245:8254   */\n      dup2\n        /* \"#utility.yul\":8239:8243   */\n      dup2\n        /* \"#utility.yul\":8235:8255   */\n      sub\n        /* \"#utility.yul\":8231:8232   */\n      0x00\n        /* \"#utility.yul\":8220:8229   */\n      dup4\n        /* \"#utility.yul\":8216:8233   */\n      add\n        /* \"#utility.yul\":8209:8256   */\n      mstore\n        /* \"#utility.yul\":8273:8404   */\n      tag_307\n        /* \"#utility.yul\":8399:8403   */\n      dup2\n        /* \"#utility.yul\":8273:8404   */\n      tag_258\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":8265:8404   */\n      swap1\n      pop\n        /* \"#utility.yul\":7992:8411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8417:8836   */\n    tag_184:\n        /* \"#utility.yul\":8583:8587   */\n      0x00\n        /* \"#utility.yul\":8621:8623   */\n      0x20\n        /* \"#utility.yul\":8610:8619   */\n      dup3\n        /* \"#utility.yul\":8606:8624   */\n      add\n        /* \"#utility.yul\":8598:8624   */\n      swap1\n      pop\n        /* \"#utility.yul\":8670:8679   */\n      dup2\n        /* \"#utility.yul\":8664:8668   */\n      dup2\n        /* \"#utility.yul\":8660:8680   */\n      sub\n        /* \"#utility.yul\":8656:8657   */\n      0x00\n        /* \"#utility.yul\":8645:8654   */\n      dup4\n        /* \"#utility.yul\":8641:8658   */\n      add\n        /* \"#utility.yul\":8634:8681   */\n      mstore\n        /* \"#utility.yul\":8698:8829   */\n      tag_309\n        /* \"#utility.yul\":8824:8828   */\n      dup2\n        /* \"#utility.yul\":8698:8829   */\n      tag_263\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8690:8829   */\n      swap1\n      pop\n        /* \"#utility.yul\":8417:8836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8842:9261   */\n    tag_188:\n        /* \"#utility.yul\":9008:9012   */\n      0x00\n        /* \"#utility.yul\":9046:9048   */\n      0x20\n        /* \"#utility.yul\":9035:9044   */\n      dup3\n        /* \"#utility.yul\":9031:9049   */\n      add\n        /* \"#utility.yul\":9023:9049   */\n      swap1\n      pop\n        /* \"#utility.yul\":9095:9104   */\n      dup2\n        /* \"#utility.yul\":9089:9093   */\n      dup2\n        /* \"#utility.yul\":9085:9105   */\n      sub\n        /* \"#utility.yul\":9081:9082   */\n      0x00\n        /* \"#utility.yul\":9070:9079   */\n      dup4\n        /* \"#utility.yul\":9066:9083   */\n      add\n        /* \"#utility.yul\":9059:9106   */\n      mstore\n        /* \"#utility.yul\":9123:9254   */\n      tag_311\n        /* \"#utility.yul\":9249:9253   */\n      dup2\n        /* \"#utility.yul\":9123:9254   */\n      tag_268\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":9115:9254   */\n      swap1\n      pop\n        /* \"#utility.yul\":8842:9261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9267:9686   */\n    tag_120:\n        /* \"#utility.yul\":9433:9437   */\n      0x00\n        /* \"#utility.yul\":9471:9473   */\n      0x20\n        /* \"#utility.yul\":9460:9469   */\n      dup3\n        /* \"#utility.yul\":9456:9474   */\n      add\n        /* \"#utility.yul\":9448:9474   */\n      swap1\n      pop\n        /* \"#utility.yul\":9520:9529   */\n      dup2\n        /* \"#utility.yul\":9514:9518   */\n      dup2\n        /* \"#utility.yul\":9510:9530   */\n      sub\n        /* \"#utility.yul\":9506:9507   */\n      0x00\n        /* \"#utility.yul\":9495:9504   */\n      dup4\n        /* \"#utility.yul\":9491:9508   */\n      add\n        /* \"#utility.yul\":9484:9531   */\n      mstore\n        /* \"#utility.yul\":9548:9679   */\n      tag_313\n        /* \"#utility.yul\":9674:9678   */\n      dup2\n        /* \"#utility.yul\":9548:9679   */\n      tag_273\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":9540:9679   */\n      swap1\n      pop\n        /* \"#utility.yul\":9267:9686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9692:10111   */\n    tag_170:\n        /* \"#utility.yul\":9858:9862   */\n      0x00\n        /* \"#utility.yul\":9896:9898   */\n      0x20\n        /* \"#utility.yul\":9885:9894   */\n      dup3\n        /* \"#utility.yul\":9881:9899   */\n      add\n        /* \"#utility.yul\":9873:9899   */\n      swap1\n      pop\n        /* \"#utility.yul\":9945:9954   */\n      dup2\n        /* \"#utility.yul\":9939:9943   */\n      dup2\n        /* \"#utility.yul\":9935:9955   */\n      sub\n        /* \"#utility.yul\":9931:9932   */\n      0x00\n        /* \"#utility.yul\":9920:9929   */\n      dup4\n        /* \"#utility.yul\":9916:9933   */\n      add\n        /* \"#utility.yul\":9909:9956   */\n      mstore\n        /* \"#utility.yul\":9973:10104   */\n      tag_315\n        /* \"#utility.yul\":10099:10103   */\n      dup2\n        /* \"#utility.yul\":9973:10104   */\n      tag_278\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9965:10104   */\n      swap1\n      pop\n        /* \"#utility.yul\":9692:10111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10117:10536   */\n    tag_162:\n        /* \"#utility.yul\":10283:10287   */\n      0x00\n        /* \"#utility.yul\":10321:10323   */\n      0x20\n        /* \"#utility.yul\":10310:10319   */\n      dup3\n        /* \"#utility.yul\":10306:10324   */\n      add\n        /* \"#utility.yul\":10298:10324   */\n      swap1\n      pop\n        /* \"#utility.yul\":10370:10379   */\n      dup2\n        /* \"#utility.yul\":10364:10368   */\n      dup2\n        /* \"#utility.yul\":10360:10380   */\n      sub\n        /* \"#utility.yul\":10356:10357   */\n      0x00\n        /* \"#utility.yul\":10345:10354   */\n      dup4\n        /* \"#utility.yul\":10341:10358   */\n      add\n        /* \"#utility.yul\":10334:10381   */\n      mstore\n        /* \"#utility.yul\":10398:10529   */\n      tag_317\n        /* \"#utility.yul\":10524:10528   */\n      dup2\n        /* \"#utility.yul\":10398:10529   */\n      tag_283\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":10390:10529   */\n      swap1\n      pop\n        /* \"#utility.yul\":10117:10536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10542:10764   */\n    tag_35:\n        /* \"#utility.yul\":10635:10639   */\n      0x00\n        /* \"#utility.yul\":10673:10675   */\n      0x20\n        /* \"#utility.yul\":10662:10671   */\n      dup3\n        /* \"#utility.yul\":10658:10676   */\n      add\n        /* \"#utility.yul\":10650:10676   */\n      swap1\n      pop\n        /* \"#utility.yul\":10686:10757   */\n      tag_319\n        /* \"#utility.yul\":10754:10755   */\n      0x00\n        /* \"#utility.yul\":10743:10752   */\n      dup4\n        /* \"#utility.yul\":10739:10756   */\n      add\n        /* \"#utility.yul\":10730:10736   */\n      dup5\n        /* \"#utility.yul\":10686:10757   */\n      tag_288\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":10542:10764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10770:10984   */\n    tag_44:\n        /* \"#utility.yul\":10859:10863   */\n      0x00\n        /* \"#utility.yul\":10897:10899   */\n      0x20\n        /* \"#utility.yul\":10886:10895   */\n      dup3\n        /* \"#utility.yul\":10882:10900   */\n      add\n        /* \"#utility.yul\":10874:10900   */\n      swap1\n      pop\n        /* \"#utility.yul\":10910:10977   */\n      tag_321\n        /* \"#utility.yul\":10974:10975   */\n      0x00\n        /* \"#utility.yul\":10963:10972   */\n      dup4\n        /* \"#utility.yul\":10959:10976   */\n      add\n        /* \"#utility.yul\":10950:10956   */\n      dup5\n        /* \"#utility.yul\":10910:10977   */\n      tag_292\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":10770:10984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11071:11170   */\n    tag_241:\n        /* \"#utility.yul\":11123:11129   */\n      0x00\n        /* \"#utility.yul\":11157:11162   */\n      dup2\n        /* \"#utility.yul\":11151:11163   */\n      mload\n        /* \"#utility.yul\":11141:11163   */\n      swap1\n      pop\n        /* \"#utility.yul\":11071:11170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11176:11345   */\n    tag_243:\n        /* \"#utility.yul\":11260:11271   */\n      0x00\n        /* \"#utility.yul\":11294:11300   */\n      dup3\n        /* \"#utility.yul\":11289:11292   */\n      dup3\n        /* \"#utility.yul\":11282:11301   */\n      mstore\n        /* \"#utility.yul\":11334:11338   */\n      0x20\n        /* \"#utility.yul\":11329:11332   */\n      dup3\n        /* \"#utility.yul\":11325:11339   */\n      add\n        /* \"#utility.yul\":11310:11339   */\n      swap1\n      pop\n        /* \"#utility.yul\":11176:11345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11351:11656   */\n    tag_181:\n        /* \"#utility.yul\":11391:11394   */\n      0x00\n        /* \"#utility.yul\":11410:11430   */\n      tag_327\n        /* \"#utility.yul\":11428:11429   */\n      dup3\n        /* \"#utility.yul\":11410:11430   */\n      tag_291\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":11405:11430   */\n      swap2\n      pop\n        /* \"#utility.yul\":11444:11464   */\n      tag_328\n        /* \"#utility.yul\":11462:11463   */\n      dup4\n        /* \"#utility.yul\":11444:11464   */\n      tag_291\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":11439:11464   */\n      swap3\n      pop\n        /* \"#utility.yul\":11598:11599   */\n      dup3\n        /* \"#utility.yul\":11530:11596   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11526:11600   */\n      sub\n        /* \"#utility.yul\":11523:11524   */\n      dup3\n        /* \"#utility.yul\":11520:11601   */\n      gt\n        /* \"#utility.yul\":11517:11624   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":11604:11622   */\n      tag_330\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":11517:11624   */\n    tag_329:\n        /* \"#utility.yul\":11648:11649   */\n      dup3\n        /* \"#utility.yul\":11645:11646   */\n      dup3\n        /* \"#utility.yul\":11641:11650   */\n      add\n        /* \"#utility.yul\":11634:11650   */\n      swap1\n      pop\n        /* \"#utility.yul\":11351:11656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11662:11853   */\n    tag_178:\n        /* \"#utility.yul\":11702:11706   */\n      0x00\n        /* \"#utility.yul\":11722:11742   */\n      tag_333\n        /* \"#utility.yul\":11740:11741   */\n      dup3\n        /* \"#utility.yul\":11722:11742   */\n      tag_291\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":11717:11742   */\n      swap2\n      pop\n        /* \"#utility.yul\":11756:11776   */\n      tag_334\n        /* \"#utility.yul\":11774:11775   */\n      dup4\n        /* \"#utility.yul\":11756:11776   */\n      tag_291\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":11751:11776   */\n      swap3\n      pop\n        /* \"#utility.yul\":11795:11796   */\n      dup3\n        /* \"#utility.yul\":11792:11793   */\n      dup3\n        /* \"#utility.yul\":11789:11797   */\n      lt\n        /* \"#utility.yul\":11786:11820   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":11800:11818   */\n      tag_336\n      tag_331\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":11786:11820   */\n    tag_335:\n        /* \"#utility.yul\":11845:11846   */\n      dup3\n        /* \"#utility.yul\":11842:11843   */\n      dup3\n        /* \"#utility.yul\":11838:11847   */\n      sub\n        /* \"#utility.yul\":11830:11847   */\n      swap1\n      pop\n        /* \"#utility.yul\":11662:11853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11859:11955   */\n    tag_233:\n        /* \"#utility.yul\":11896:11903   */\n      0x00\n        /* \"#utility.yul\":11925:11949   */\n      tag_338\n        /* \"#utility.yul\":11943:11948   */\n      dup3\n        /* \"#utility.yul\":11925:11949   */\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":11914:11949   */\n      swap1\n      pop\n        /* \"#utility.yul\":11859:11955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11961:12051   */\n    tag_237:\n        /* \"#utility.yul\":11995:12002   */\n      0x00\n        /* \"#utility.yul\":12038:12043   */\n      dup2\n        /* \"#utility.yul\":12031:12044   */\n      iszero\n        /* \"#utility.yul\":12024:12045   */\n      iszero\n        /* \"#utility.yul\":12013:12045   */\n      swap1\n      pop\n        /* \"#utility.yul\":11961:12051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12057:12183   */\n    tag_339:\n        /* \"#utility.yul\":12094:12101   */\n      0x00\n        /* \"#utility.yul\":12134:12176   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12127:12132   */\n      dup3\n        /* \"#utility.yul\":12123:12177   */\n      and\n        /* \"#utility.yul\":12112:12177   */\n      swap1\n      pop\n        /* \"#utility.yul\":12057:12183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12189:12266   */\n    tag_291:\n        /* \"#utility.yul\":12226:12233   */\n      0x00\n        /* \"#utility.yul\":12255:12260   */\n      dup2\n        /* \"#utility.yul\":12244:12260   */\n      swap1\n      pop\n        /* \"#utility.yul\":12189:12266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12272:12358   */\n    tag_295:\n        /* \"#utility.yul\":12307:12314   */\n      0x00\n        /* \"#utility.yul\":12347:12351   */\n      0xff\n        /* \"#utility.yul\":12340:12345   */\n      dup3\n        /* \"#utility.yul\":12336:12352   */\n      and\n        /* \"#utility.yul\":12325:12352   */\n      swap1\n      pop\n        /* \"#utility.yul\":12272:12358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12364:12671   */\n    tag_245:\n        /* \"#utility.yul\":12432:12433   */\n      0x00\n        /* \"#utility.yul\":12442:12555   */\n    tag_345:\n        /* \"#utility.yul\":12456:12462   */\n      dup4\n        /* \"#utility.yul\":12453:12454   */\n      dup2\n        /* \"#utility.yul\":12450:12463   */\n      lt\n        /* \"#utility.yul\":12442:12555   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":12541:12542   */\n      dup1\n        /* \"#utility.yul\":12536:12539   */\n      dup3\n        /* \"#utility.yul\":12532:12543   */\n      add\n        /* \"#utility.yul\":12526:12544   */\n      mload\n        /* \"#utility.yul\":12522:12523   */\n      dup2\n        /* \"#utility.yul\":12517:12520   */\n      dup5\n        /* \"#utility.yul\":12513:12524   */\n      add\n        /* \"#utility.yul\":12506:12545   */\n      mstore\n        /* \"#utility.yul\":12478:12480   */\n      0x20\n        /* \"#utility.yul\":12475:12476   */\n      dup2\n        /* \"#utility.yul\":12471:12481   */\n      add\n        /* \"#utility.yul\":12466:12481   */\n      swap1\n      pop\n        /* \"#utility.yul\":12442:12555   */\n      jump(tag_345)\n    tag_347:\n        /* \"#utility.yul\":12573:12579   */\n      dup4\n        /* \"#utility.yul\":12570:12571   */\n      dup2\n        /* \"#utility.yul\":12567:12580   */\n      gt\n        /* \"#utility.yul\":12564:12665   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":12653:12654   */\n      0x00\n        /* \"#utility.yul\":12644:12650   */\n      dup5\n        /* \"#utility.yul\":12639:12642   */\n      dup5\n        /* \"#utility.yul\":12635:12651   */\n      add\n        /* \"#utility.yul\":12628:12655   */\n      mstore\n        /* \"#utility.yul\":12564:12665   */\n    tag_348:\n        /* \"#utility.yul\":12413:12671   */\n      pop\n        /* \"#utility.yul\":12364:12671   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12677:12997   */\n    tag_89:\n        /* \"#utility.yul\":12721:12727   */\n      0x00\n        /* \"#utility.yul\":12758:12759   */\n      0x02\n        /* \"#utility.yul\":12752:12756   */\n      dup3\n        /* \"#utility.yul\":12748:12760   */\n      div\n        /* \"#utility.yul\":12738:12760   */\n      swap1\n      pop\n        /* \"#utility.yul\":12805:12806   */\n      0x01\n        /* \"#utility.yul\":12799:12803   */\n      dup3\n        /* \"#utility.yul\":12795:12807   */\n      and\n        /* \"#utility.yul\":12826:12844   */\n      dup1\n        /* \"#utility.yul\":12816:12897   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":12882:12886   */\n      0x7f\n        /* \"#utility.yul\":12874:12880   */\n      dup3\n        /* \"#utility.yul\":12870:12887   */\n      and\n        /* \"#utility.yul\":12860:12887   */\n      swap2\n      pop\n        /* \"#utility.yul\":12816:12897   */\n    tag_350:\n        /* \"#utility.yul\":12944:12946   */\n      0x20\n        /* \"#utility.yul\":12936:12942   */\n      dup3\n        /* \"#utility.yul\":12933:12947   */\n      lt\n        /* \"#utility.yul\":12913:12931   */\n      dup2\n        /* \"#utility.yul\":12910:12948   */\n      eq\n        /* \"#utility.yul\":12907:12991   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":12963:12981   */\n      tag_352\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":12907:12991   */\n    tag_351:\n        /* \"#utility.yul\":12728:12997   */\n      pop\n        /* \"#utility.yul\":12677:12997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13003:13183   */\n    tag_331:\n        /* \"#utility.yul\":13051:13128   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13048:13049   */\n      0x00\n        /* \"#utility.yul\":13041:13129   */\n      mstore\n        /* \"#utility.yul\":13148:13152   */\n      0x11\n        /* \"#utility.yul\":13145:13146   */\n      0x04\n        /* \"#utility.yul\":13138:13153   */\n      mstore\n        /* \"#utility.yul\":13172:13176   */\n      0x24\n        /* \"#utility.yul\":13169:13170   */\n      0x00\n        /* \"#utility.yul\":13162:13177   */\n      revert\n        /* \"#utility.yul\":13189:13369   */\n    tag_353:\n        /* \"#utility.yul\":13237:13314   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13234:13235   */\n      0x00\n        /* \"#utility.yul\":13227:13315   */\n      mstore\n        /* \"#utility.yul\":13334:13338   */\n      0x22\n        /* \"#utility.yul\":13331:13332   */\n      0x04\n        /* \"#utility.yul\":13324:13339   */\n      mstore\n        /* \"#utility.yul\":13358:13362   */\n      0x24\n        /* \"#utility.yul\":13355:13356   */\n      0x00\n        /* \"#utility.yul\":13348:13363   */\n      revert\n        /* \"#utility.yul\":13498:13615   */\n    tag_208:\n        /* \"#utility.yul\":13607:13608   */\n      0x00\n        /* \"#utility.yul\":13604:13605   */\n      dup1\n        /* \"#utility.yul\":13597:13609   */\n      revert\n        /* \"#utility.yul\":13621:13723   */\n    tag_247:\n        /* \"#utility.yul\":13662:13668   */\n      0x00\n        /* \"#utility.yul\":13713:13715   */\n      0x1f\n        /* \"#utility.yul\":13709:13716   */\n      not\n        /* \"#utility.yul\":13704:13706   */\n      0x1f\n        /* \"#utility.yul\":13697:13702   */\n      dup4\n        /* \"#utility.yul\":13693:13707   */\n      add\n        /* \"#utility.yul\":13689:13717   */\n      and\n        /* \"#utility.yul\":13679:13717   */\n      swap1\n      pop\n        /* \"#utility.yul\":13621:13723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13729:13953   */\n    tag_252:\n        /* \"#utility.yul\":13869:13903   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13865:13866   */\n      0x00\n        /* \"#utility.yul\":13857:13863   */\n      dup3\n        /* \"#utility.yul\":13853:13867   */\n      add\n        /* \"#utility.yul\":13846:13904   */\n      mstore\n        /* \"#utility.yul\":13938:13945   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13933:13935   */\n      0x20\n        /* \"#utility.yul\":13925:13931   */\n      dup3\n        /* \"#utility.yul\":13921:13936   */\n      add\n        /* \"#utility.yul\":13914:13946   */\n      mstore\n        /* \"#utility.yul\":13729:13953   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13959:14182   */\n    tag_257:\n        /* \"#utility.yul\":14099:14133   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":14095:14096   */\n      0x00\n        /* \"#utility.yul\":14087:14093   */\n      dup3\n        /* \"#utility.yul\":14083:14097   */\n      add\n        /* \"#utility.yul\":14076:14134   */\n      mstore\n        /* \"#utility.yul\":14168:14174   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14163:14165   */\n      0x20\n        /* \"#utility.yul\":14155:14161   */\n      dup3\n        /* \"#utility.yul\":14151:14166   */\n      add\n        /* \"#utility.yul\":14144:14175   */\n      mstore\n        /* \"#utility.yul\":13959:14182   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14188:14413   */\n    tag_262:\n        /* \"#utility.yul\":14328:14362   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14324:14325   */\n      0x00\n        /* \"#utility.yul\":14316:14322   */\n      dup3\n        /* \"#utility.yul\":14312:14326   */\n      add\n        /* \"#utility.yul\":14305:14363   */\n      mstore\n        /* \"#utility.yul\":14397:14405   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14392:14394   */\n      0x20\n        /* \"#utility.yul\":14384:14390   */\n      dup3\n        /* \"#utility.yul\":14380:14395   */\n      add\n        /* \"#utility.yul\":14373:14406   */\n      mstore\n        /* \"#utility.yul\":14188:14413   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14419:14596   */\n    tag_267:\n        /* \"#utility.yul\":14559:14588   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":14555:14556   */\n      0x00\n        /* \"#utility.yul\":14547:14553   */\n      dup3\n        /* \"#utility.yul\":14543:14557   */\n      add\n        /* \"#utility.yul\":14536:14589   */\n      mstore\n        /* \"#utility.yul\":14419:14596   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14602:14783   */\n    tag_272:\n        /* \"#utility.yul\":14742:14775   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":14738:14739   */\n      0x00\n        /* \"#utility.yul\":14730:14736   */\n      dup3\n        /* \"#utility.yul\":14726:14740   */\n      add\n        /* \"#utility.yul\":14719:14776   */\n      mstore\n        /* \"#utility.yul\":14602:14783   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14789:14971   */\n    tag_277:\n        /* \"#utility.yul\":14929:14963   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14925:14926   */\n      0x00\n        /* \"#utility.yul\":14917:14923   */\n      dup3\n        /* \"#utility.yul\":14913:14927   */\n      add\n        /* \"#utility.yul\":14906:14964   */\n      mstore\n        /* \"#utility.yul\":14789:14971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14977:15199   */\n    tag_282:\n        /* \"#utility.yul\":15117:15151   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":15113:15114   */\n      0x00\n        /* \"#utility.yul\":15105:15111   */\n      dup3\n        /* \"#utility.yul\":15101:15115   */\n      add\n        /* \"#utility.yul\":15094:15152   */\n      mstore\n        /* \"#utility.yul\":15186:15191   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15181:15183   */\n      0x20\n        /* \"#utility.yul\":15173:15179   */\n      dup3\n        /* \"#utility.yul\":15169:15184   */\n      add\n        /* \"#utility.yul\":15162:15192   */\n      mstore\n        /* \"#utility.yul\":14977:15199   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15205:15426   */\n    tag_287:\n        /* \"#utility.yul\":15345:15379   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":15341:15342   */\n      0x00\n        /* \"#utility.yul\":15333:15339   */\n      dup3\n        /* \"#utility.yul\":15329:15343   */\n      add\n        /* \"#utility.yul\":15322:15380   */\n      mstore\n        /* \"#utility.yul\":15414:15418   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15409:15411   */\n      0x20\n        /* \"#utility.yul\":15401:15407   */\n      dup3\n        /* \"#utility.yul\":15397:15412   */\n      add\n        /* \"#utility.yul\":15390:15419   */\n      mstore\n        /* \"#utility.yul\":15205:15426   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15432:15554   */\n    tag_200:\n        /* \"#utility.yul\":15505:15529   */\n      tag_369\n        /* \"#utility.yul\":15523:15528   */\n      dup2\n        /* \"#utility.yul\":15505:15529   */\n      tag_233\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":15498:15503   */\n      dup2\n        /* \"#utility.yul\":15495:15530   */\n      eq\n        /* \"#utility.yul\":15485:15548   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":15544:15545   */\n      0x00\n        /* \"#utility.yul\":15541:15542   */\n      dup1\n        /* \"#utility.yul\":15534:15546   */\n      revert\n        /* \"#utility.yul\":15485:15548   */\n    tag_370:\n        /* \"#utility.yul\":15432:15554   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15560:15682   */\n    tag_204:\n        /* \"#utility.yul\":15633:15657   */\n      tag_372\n        /* \"#utility.yul\":15651:15656   */\n      dup2\n        /* \"#utility.yul\":15633:15657   */\n      tag_291\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":15626:15631   */\n      dup2\n        /* \"#utility.yul\":15623:15658   */\n      eq\n        /* \"#utility.yul\":15613:15676   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":15672:15673   */\n      0x00\n        /* \"#utility.yul\":15669:15670   */\n      dup1\n        /* \"#utility.yul\":15662:15674   */\n      revert\n        /* \"#utility.yul\":15613:15676   */\n    tag_373:\n        /* \"#utility.yul\":15560:15682   */\n      pop\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122033033d66c3710f4238cf3cbb58b3b9075f9f31f4e2730e2fec18ae93f6ec8f9264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_551": {
									"entryPoint": null,
									"id": 551,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_563": {
									"entryPoint": 497,
									"id": 563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1355,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1402,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1454,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1459,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5475:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:5"
															},
															"nodeType": "YulIf",
															"src": "262:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:5",
														"type": ""
													}
												],
												"src": "7:421:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:5"
															},
															"nodeType": "YulIf",
															"src": "531:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:5",
														"type": ""
													}
												],
												"src": "448:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "872:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "882:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "897:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "891:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "891:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "882:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "940:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "913:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "913:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "850:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "858:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "866:5:5",
														"type": ""
													}
												],
												"src": "809:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1019:78:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1029:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1044:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1038:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1029:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1085:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "1060:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1060:31:5"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "997:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1005:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1013:5:5",
														"type": ""
													}
												],
												"src": "958:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1249:1016:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1296:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1298:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1298:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1298:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1270:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1279:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1266:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1291:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:33:5"
															},
															"nodeType": "YulIf",
															"src": "1259:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1389:291:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1404:38:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1428:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1439:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1424:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1424:17:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1418:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:24:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1408:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1489:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1491:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1491:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1491:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1469:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1458:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1458:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "1455:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1586:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1642:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1653:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1638:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1638:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1662:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1596:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1596:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1586:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1690:292:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1705:39:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1729:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1740:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1725:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1725:18:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1719:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1719:25:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1709:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1791:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1793:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1793:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1793:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1763:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1771:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1760:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1760:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "1757:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1888:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1944:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1955:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1940:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1940:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1964:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1898:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1898:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1888:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1992:127:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2007:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2021:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2011:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2037:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2081:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2092:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2077:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2077:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2101:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2047:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2047:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2037:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2129:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2144:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2158:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2148:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2174:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2220:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2231:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2216:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2216:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2240:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2184:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2174:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1195:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1206:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1218:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1226:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1234:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1242:6:5",
														"type": ""
													}
												],
												"src": "1103:1162:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2336:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2353:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2376:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2358:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2358:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2346:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2324:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2331:3:5",
														"type": ""
													}
												],
												"src": "2271:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2493:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2503:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2515:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2526:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2511:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2503:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2596:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2607:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2539:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2539:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2539:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2465:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2477:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2488:4:5",
														"type": ""
													}
												],
												"src": "2395:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2664:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2674:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2684:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2684:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2733:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2741:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2713:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2713:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2648:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2657:6:5",
														"type": ""
													}
												],
												"src": "2623:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2798:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2808:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2824:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2818:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2818:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2791:6:5",
														"type": ""
													}
												],
												"src": "2758:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2906:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3011:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3013:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3013:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3013:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2983:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2991:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2980:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:30:5"
															},
															"nodeType": "YulIf",
															"src": "2977:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3073:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3051:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3051:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3043:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3117:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3129:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3135:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3125:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3125:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3117:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2890:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2901:4:5",
														"type": ""
													}
												],
												"src": "2839:308:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3198:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3208:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3219:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3208:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3180:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3190:7:5",
														"type": ""
													}
												],
												"src": "3153:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:43:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3289:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3304:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3311:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3300:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3289:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3261:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3271:7:5",
														"type": ""
													}
												],
												"src": "3236:86:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3377:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3387:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3396:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3391:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3456:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3481:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3486:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3477:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3477:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3500:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3505:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3496:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3496:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3490:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3490:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3470:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3470:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3470:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3417:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3420:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3414:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3414:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3428:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3430:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3439:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3442:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3435:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3435:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3430:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3410:3:5",
																"statements": []
															},
															"src": "3406:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3553:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3603:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3608:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3599:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3599:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3617:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3592:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3592:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3592:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3534:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3537:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3531:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3531:13:5"
															},
															"nodeType": "YulIf",
															"src": "3528:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3359:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3364:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3369:6:5",
														"type": ""
													}
												],
												"src": "3328:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3692:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3702:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3716:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3722:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3712:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3702:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3733:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3763:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3769:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3759:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3737:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3810:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3824:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3838:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3846:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3834:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3834:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3824:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3790:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3783:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3783:26:5"
															},
															"nodeType": "YulIf",
															"src": "3780:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3913:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3927:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3927:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3927:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3877:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3900:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3908:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3897:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3897:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3874:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3874:38:5"
															},
															"nodeType": "YulIf",
															"src": "3871:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3676:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3685:6:5",
														"type": ""
													}
												],
												"src": "3641:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4010:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4020:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4042:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "4072:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4050:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4050:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4038:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4038:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4024:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4189:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4191:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4191:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4191:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4132:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4144:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4129:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4129:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4168:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4180:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4165:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4165:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4126:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:62:5"
															},
															"nodeType": "YulIf",
															"src": "4123:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4227:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4231:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4220:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3996:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4004:4:5",
														"type": ""
													}
												],
												"src": "3967:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4282:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4302:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4292:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4292:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4292:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4396:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4399:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4389:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4389:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4389:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4420:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4413:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4413:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4254:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4468:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4485:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4488:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4478:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4478:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4478:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4582:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4585:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4575:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4575:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4575:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4606:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4599:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4599:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4599:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4440:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4715:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4732:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4735:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4725:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4725:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4626:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4838:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4858:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4848:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4848:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4749:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4961:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4978:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4981:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4971:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4971:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4971:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4872:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5084:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5101:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5104:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5094:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5094:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5094:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4995:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5166:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5176:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5194:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5201:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5190:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5190:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5210:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5186:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5176:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5149:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5159:6:5",
														"type": ""
													}
												],
												"src": "5118:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5269:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5326:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5335:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5338:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5328:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5328:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5328:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5292:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5317:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5299:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5299:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5289:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5289:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5282:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:43:5"
															},
															"nodeType": "YulIf",
															"src": "5279:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5262:5:5",
														"type": ""
													}
												],
												"src": "5226:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5395:77:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5450:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5459:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5462:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5452:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5452:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5452:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5418:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5441:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "5425:15:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5425:22:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5415:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5415:33:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5408:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:41:5"
															},
															"nodeType": "YulIf",
															"src": "5405:61:5"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5388:5:5",
														"type": ""
													}
												],
												"src": "5354:118:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620021f5380380620021f5833981810160405281019062000037919062000355565b600062000049620001f160201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508360069080519060200190620000ff929190620001f9565b50826005908051906020019062000118929190620001f9565b5081600460006101000a81548160ff021916908360ff1602179055508060038190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001df919062000416565b60405180910390a35050505062000602565b600033905090565b8280546200020790620004df565b90600052602060002090601f0160209004810192826200022b576000855562000277565b82601f106200024657805160ff191683800117855562000277565b8280016001018555821562000277579182015b828111156200027657825182559160200191906001019062000259565b5b5090506200028691906200028a565b5090565b5b80821115620002a55760008160009055506001016200028b565b5090565b6000620002c0620002ba846200045c565b62000433565b905082815260208101848484011115620002df57620002de620005ae565b5b620002ec848285620004a9565b509392505050565b600082601f8301126200030c576200030b620005a9565b5b81516200031e848260208601620002a9565b91505092915050565b6000815190506200033881620005ce565b92915050565b6000815190506200034f81620005e8565b92915050565b60008060008060808587031215620003725762000371620005b8565b5b600085015167ffffffffffffffff811115620003935762000392620005b3565b5b620003a187828801620002f4565b945050602085015167ffffffffffffffff811115620003c557620003c4620005b3565b5b620003d387828801620002f4565b9350506040620003e6878288016200033e565b9250506060620003f98782880162000327565b91505092959194509250565b620004108162000492565b82525050565b60006020820190506200042d600083018462000405565b92915050565b60006200043f62000452565b90506200044d828262000515565b919050565b6000604051905090565b600067ffffffffffffffff8211156200047a57620004796200057a565b5b6200048582620005bd565b9050602081019050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015620004c9578082015181840152602081019050620004ac565b83811115620004d9576000848401525b50505050565b60006002820490506001821680620004f857607f821691505b602082108114156200050f576200050e6200054b565b5b50919050565b6200052082620005bd565b810181811067ffffffffffffffff821117156200054257620005416200057a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620005d98162000492565b8114620005e557600080fd5b50565b620005f3816200049c565b8114620005ff57600080fd5b50565b611be380620006126000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102b3578063a9059cbb146102e3578063dd62ed3e14610313578063f2fde38b1461034357610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a0712d681461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a91906115da565b60405180910390f35b61013d600480360381019061013891906113aa565b6103f1565b60405161014a91906115bf565b60405180910390f35b61015b61040f565b60405161016891906116fc565b60405180910390f35b61018b60048036038101906101869190611357565b610419565b60405161019891906115bf565b60405180910390f35b6101a96104f2565b6040516101b69190611717565b60405180910390f35b6101d960048036038101906101d491906113aa565b610509565b6040516101e691906115bf565b60405180910390f35b610209600480360381019061020491906112ea565b6105bc565b60405161021691906116fc565b60405180910390f35b610227610605565b005b610231610758565b60405161023e91906115a4565b60405180910390f35b61024f610767565b60405161025c91906115a4565b60405180910390f35b61026d610790565b60405161027a91906115da565b60405180910390f35b61029d600480360381019061029891906113ea565b610822565b6040516102aa91906115bf565b60405180910390f35b6102cd60048036038101906102c891906113aa565b6108d3565b6040516102da91906115bf565b60405180910390f35b6102fd60048036038101906102f891906113aa565b6109a0565b60405161030a91906115bf565b60405180910390f35b61032d60048036038101906103289190611317565b6109be565b60405161033a91906116fc565b60405180910390f35b61035d600480360381019061035891906112ea565b610a45565b005b60606006805461036e90611860565b80601f016020809104026020016040519081016040528092919081815260200182805461039a90611860565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006104056103fe610ae6565b8484610aee565b6001905092915050565b6000600354905090565b6000610426848484610cb9565b6104e784610432610ae6565b6104e285604051806060016040528060288152602001611b3b60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610498610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006105b2610516610ae6565b846105ad8560026000610527610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b610aee565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106919061169c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610762610767565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461079f90611860565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb90611860565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b5050505050905090565b600061082c610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b09061169c565b60405180910390fd5b6108ca6108c4610ae6565b83611009565b60019050919050565b60006109966108e0610ae6565b8461099185604051806060016040528060258152602001611b89602591396002600061090a610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b6001905092915050565b60006109b46109ad610ae6565b8484610cb9565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a4d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad19061169c565b60405180910390fd5b610ae381611193565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b559061161c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc5906116dc565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610cac91906116fc565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d20906115fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d90906116bc565b60405180910390fd5b610e0581604051806060016040528060268152602001611b6360269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f3a91906116fc565b60405180910390a3505050565b6000838311158290610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8691906115da565b60405180910390fd5b5060008385610f9e91906117a4565b9050809150509392505050565b6000808284610fba919061174e565b905083811015610fff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff69061165c565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611079576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110709061167c565b60405180910390fd5b61108e81600354610fab90919063ffffffff16565b6003819055506110e681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161118791906116fc565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fa9061163c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506112cf81611b0c565b92915050565b6000813590506112e481611b23565b92915050565b600060208284031215611300576112ff6118f0565b5b600061130e848285016112c0565b91505092915050565b6000806040838503121561132e5761132d6118f0565b5b600061133c858286016112c0565b925050602061134d858286016112c0565b9150509250929050565b6000806000606084860312156113705761136f6118f0565b5b600061137e868287016112c0565b935050602061138f868287016112c0565b92505060406113a0868287016112d5565b9150509250925092565b600080604083850312156113c1576113c06118f0565b5b60006113cf858286016112c0565b92505060206113e0858286016112d5565b9150509250929050565b600060208284031215611400576113ff6118f0565b5b600061140e848285016112d5565b91505092915050565b611420816117d8565b82525050565b61142f816117ea565b82525050565b600061144082611732565b61144a818561173d565b935061145a81856020860161182d565b611463816118f5565b840191505092915050565b600061147b60258361173d565b915061148682611906565b604082019050919050565b600061149e60248361173d565b91506114a982611955565b604082019050919050565b60006114c160268361173d565b91506114cc826119a4565b604082019050919050565b60006114e4601b8361173d565b91506114ef826119f3565b602082019050919050565b6000611507601f8361173d565b915061151282611a1c565b602082019050919050565b600061152a60208361173d565b915061153582611a45565b602082019050919050565b600061154d60238361173d565b915061155882611a6e565b604082019050919050565b600061157060228361173d565b915061157b82611abd565b604082019050919050565b61158f81611816565b82525050565b61159e81611820565b82525050565b60006020820190506115b96000830184611417565b92915050565b60006020820190506115d46000830184611426565b92915050565b600060208201905081810360008301526115f48184611435565b905092915050565b600060208201905081810360008301526116158161146e565b9050919050565b6000602082019050818103600083015261163581611491565b9050919050565b60006020820190508181036000830152611655816114b4565b9050919050565b60006020820190508181036000830152611675816114d7565b9050919050565b60006020820190508181036000830152611695816114fa565b9050919050565b600060208201905081810360008301526116b58161151d565b9050919050565b600060208201905081810360008301526116d581611540565b9050919050565b600060208201905081810360008301526116f581611563565b9050919050565b60006020820190506117116000830184611586565b92915050565b600060208201905061172c6000830184611595565b92915050565b600081519050919050565b600082825260208201905092915050565b600061175982611816565b915061176483611816565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561179957611798611892565b5b828201905092915050565b60006117af82611816565b91506117ba83611816565b9250828210156117cd576117cc611892565b5b828203905092915050565b60006117e3826117f6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561184b578082015181840152602081019050611830565b8381111561185a576000848401525b50505050565b6000600282049050600182168061187857607f821691505b6020821081141561188c5761188b6118c1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b611b15816117d8565b8114611b2057600080fd5b50565b611b2c81611816565b8114611b3757600080fd5b5056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122033033d66c3710f4238cf3cbb58b3b9075f9f31f4e2730e2fec18ae93f6ec8f9264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x21F5 CODESIZE SUB DUP1 PUSH3 0x21F5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x355 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49 PUSH3 0x1F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP4 PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xFF SWAP3 SWAP2 SWAP1 PUSH3 0x1F9 JUMP JUMPDEST POP DUP3 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x118 SWAP3 SWAP2 SWAP1 PUSH3 0x1F9 JUMP JUMPDEST POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x1DF SWAP2 SWAP1 PUSH3 0x416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH3 0x602 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x207 SWAP1 PUSH3 0x4DF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x22B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x277 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x246 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x277 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x277 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x276 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x259 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x286 SWAP2 SWAP1 PUSH3 0x28A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2A5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x28B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C0 PUSH3 0x2BA DUP5 PUSH3 0x45C JUMP JUMPDEST PUSH3 0x433 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x2DF JUMPI PUSH3 0x2DE PUSH3 0x5AE JUMP JUMPDEST JUMPDEST PUSH3 0x2EC DUP5 DUP3 DUP6 PUSH3 0x4A9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x30C JUMPI PUSH3 0x30B PUSH3 0x5A9 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x31E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x2A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x338 DUP2 PUSH3 0x5CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x34F DUP2 PUSH3 0x5E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x372 JUMPI PUSH3 0x371 PUSH3 0x5B8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x393 JUMPI PUSH3 0x392 PUSH3 0x5B3 JUMP JUMPDEST JUMPDEST PUSH3 0x3A1 DUP8 DUP3 DUP9 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3C5 JUMPI PUSH3 0x3C4 PUSH3 0x5B3 JUMP JUMPDEST JUMPDEST PUSH3 0x3D3 DUP8 DUP3 DUP9 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x3E6 DUP8 DUP3 DUP9 ADD PUSH3 0x33E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x3F9 DUP8 DUP3 DUP9 ADD PUSH3 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH3 0x410 DUP2 PUSH3 0x492 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x42D PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x43F PUSH3 0x452 JUMP JUMPDEST SWAP1 POP PUSH3 0x44D DUP3 DUP3 PUSH3 0x515 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x47A JUMPI PUSH3 0x479 PUSH3 0x57A JUMP JUMPDEST JUMPDEST PUSH3 0x485 DUP3 PUSH3 0x5BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4C9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4AC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x4D9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4F8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x50F JUMPI PUSH3 0x50E PUSH3 0x54B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x520 DUP3 PUSH3 0x5BD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x542 JUMPI PUSH3 0x541 PUSH3 0x57A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5D9 DUP2 PUSH3 0x492 JUMP JUMPDEST DUP2 EQ PUSH3 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x5F3 DUP2 PUSH3 0x49C JUMP JUMPDEST DUP2 EQ PUSH3 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BE3 DUP1 PUSH3 0x612 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x343 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1357 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0x1860 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39A SWAP1 PUSH2 0x1860 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0x3FE PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP5 DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x4E7 DUP5 PUSH2 0x432 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x4E2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B3B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x498 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x516 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x5AD DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x527 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x762 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x79F SWAP1 PUSH2 0x1860 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x1860 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x818 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x818 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH2 0x8C4 PUSH2 0xAE6 JUMP JUMPDEST DUP4 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x996 PUSH2 0x8E0 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x991 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B89 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x90A PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B4 PUSH2 0x9AD PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD1 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0x1193 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB55 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC5 SWAP1 PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD90 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE05 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B63 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE9A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF86 SWAP2 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x174E JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF6 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1070 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108E DUP2 PUSH1 0x3 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x10E6 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12CF DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E4 DUP2 PUSH2 0x1B23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1300 JUMPI PUSH2 0x12FF PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x130E DUP5 DUP3 DUP6 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x132E JUMPI PUSH2 0x132D PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133C DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x134D DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x136F PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x137E DUP7 DUP3 DUP8 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x138F DUP7 DUP3 DUP8 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13A0 DUP7 DUP3 DUP8 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C1 JUMPI PUSH2 0x13C0 PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13CF DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13E0 DUP6 DUP3 DUP7 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1400 JUMPI PUSH2 0x13FF PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140E DUP5 DUP3 DUP6 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1420 DUP2 PUSH2 0x17D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x142F DUP2 PUSH2 0x17EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1440 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x144A DUP2 DUP6 PUSH2 0x173D JUMP JUMPDEST SWAP4 POP PUSH2 0x145A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1463 DUP2 PUSH2 0x18F5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147B PUSH1 0x25 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1486 DUP3 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149E PUSH1 0x24 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x14A9 DUP3 PUSH2 0x1955 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C1 PUSH1 0x26 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x14CC DUP3 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E4 PUSH1 0x1B DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x14EF DUP3 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1507 PUSH1 0x1F DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1512 DUP3 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152A PUSH1 0x20 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1535 DUP3 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D PUSH1 0x23 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1558 DUP3 PUSH2 0x1A6E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1570 PUSH1 0x22 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x157B DUP3 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158F DUP2 PUSH2 0x1816 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x159E DUP2 PUSH2 0x1820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1417 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F4 DUP2 DUP5 PUSH2 0x1435 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1615 DUP2 PUSH2 0x146E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1635 DUP2 PUSH2 0x1491 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1655 DUP2 PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1675 DUP2 PUSH2 0x14D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1695 DUP2 PUSH2 0x14FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16B5 DUP2 PUSH2 0x151D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16D5 DUP2 PUSH2 0x1540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F5 DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1711 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1759 DUP3 PUSH2 0x1816 JUMP JUMPDEST SWAP2 POP PUSH2 0x1764 DUP4 PUSH2 0x1816 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1799 JUMPI PUSH2 0x1798 PUSH2 0x1892 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AF DUP3 PUSH2 0x1816 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BA DUP4 PUSH2 0x1816 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x1892 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E3 DUP3 PUSH2 0x17F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x184B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1830 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x185A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1878 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x188C JUMPI PUSH2 0x188B PUSH2 0x18C1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1B15 DUP2 PUSH2 0x17D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B2C DUP2 PUSH2 0x1816 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 CALLER SUB RETURNDATASIZE PUSH7 0xC3710F4238CF3C 0xBB PC 0xB3 0xB9 SMOD 0x5F SWAP16 BALANCE DELEGATECALL 0xE2 PUSH20 0xE2FEC18AE93F6EC8F9264736F6C634300080700 CALLER ",
							"sourceMap": "164:7857:0:-:0;;;482:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;853:17:3;873:12;:10;;;:12;;:::i;:::-;853:32;;900:9;891:6;;:18;;;;;;;;;;;;;;;;;;953:9;920:43;;949:1;920:43;;;;;;;;;;;;836:132;589:5:0;581;:13;;;;;;;;;;;;:::i;:::-;;610:7;600;:17;;;;;;;;;;;;:::i;:::-;;635:9;623;;:21;;;;;;;;;;;;;;;;;;665:12;650;:27;;;;707:12;683:9;:21;693:10;683:21;;;;;;;;;;;;;;;:36;;;;752:10;731:46;;748:1;731:46;;;764:12;731:46;;;;;;:::i;:::-;;;;;;;;482:300;;;;164:7857;;772:99:1;817:15;855:10;840:26;;772:99;:::o;164:7857:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:5:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:143::-;866:5;897:6;891:13;882:22;;913:33;940:5;913:33;:::i;:::-;809:143;;;;:::o;958:139::-;1013:5;1044:6;1038:13;1029:22;;1060:31;1085:5;1060:31;:::i;:::-;958:139;;;;:::o;1103:1162::-;1218:6;1226;1234;1242;1291:3;1279:9;1270:7;1266:23;1262:33;1259:120;;;1298:79;;:::i;:::-;1259:120;1439:1;1428:9;1424:17;1418:24;1469:18;1461:6;1458:30;1455:117;;;1491:79;;:::i;:::-;1455:117;1596:74;1662:7;1653:6;1642:9;1638:22;1596:74;:::i;:::-;1586:84;;1389:291;1740:2;1729:9;1725:18;1719:25;1771:18;1763:6;1760:30;1757:117;;;1793:79;;:::i;:::-;1757:117;1898:74;1964:7;1955:6;1944:9;1940:22;1898:74;:::i;:::-;1888:84;;1690:292;2021:2;2047:62;2101:7;2092:6;2081:9;2077:22;2047:62;:::i;:::-;2037:72;;1992:127;2158:2;2184:64;2240:7;2231:6;2220:9;2216:22;2184:64;:::i;:::-;2174:74;;2129:129;1103:1162;;;;;;;:::o;2271:118::-;2358:24;2376:5;2358:24;:::i;:::-;2353:3;2346:37;2271:118;;:::o;2395:222::-;2488:4;2526:2;2515:9;2511:18;2503:26;;2539:71;2607:1;2596:9;2592:17;2583:6;2539:71;:::i;:::-;2395:222;;;;:::o;2623:129::-;2657:6;2684:20;;:::i;:::-;2674:30;;2713:33;2741:4;2733:6;2713:33;:::i;:::-;2623:129;;;:::o;2758:75::-;2791:6;2824:2;2818:9;2808:19;;2758:75;:::o;2839:308::-;2901:4;2991:18;2983:6;2980:30;2977:56;;;3013:18;;:::i;:::-;2977:56;3051:29;3073:6;3051:29;:::i;:::-;3043:37;;3135:4;3129;3125:15;3117:23;;2839:308;;;:::o;3153:77::-;3190:7;3219:5;3208:16;;3153:77;;;:::o;3236:86::-;3271:7;3311:4;3304:5;3300:16;3289:27;;3236:86;;;:::o;3328:307::-;3396:1;3406:113;3420:6;3417:1;3414:13;3406:113;;;3505:1;3500:3;3496:11;3490:18;3486:1;3481:3;3477:11;3470:39;3442:2;3439:1;3435:10;3430:15;;3406:113;;;3537:6;3534:1;3531:13;3528:101;;;3617:1;3608:6;3603:3;3599:16;3592:27;3528:101;3377:258;3328:307;;;:::o;3641:320::-;3685:6;3722:1;3716:4;3712:12;3702:22;;3769:1;3763:4;3759:12;3790:18;3780:81;;3846:4;3838:6;3834:17;3824:27;;3780:81;3908:2;3900:6;3897:14;3877:18;3874:38;3871:84;;;3927:18;;:::i;:::-;3871:84;3692:269;3641:320;;;:::o;3967:281::-;4050:27;4072:4;4050:27;:::i;:::-;4042:6;4038:40;4180:6;4168:10;4165:22;4144:18;4132:10;4129:34;4126:62;4123:88;;;4191:18;;:::i;:::-;4123:88;4231:10;4227:2;4220:22;4010:238;3967:281;;:::o;4254:180::-;4302:77;4299:1;4292:88;4399:4;4396:1;4389:15;4423:4;4420:1;4413:15;4440:180;4488:77;4485:1;4478:88;4585:4;4582:1;4575:15;4609:4;4606:1;4599:15;4626:117;4735:1;4732;4725:12;4749:117;4858:1;4855;4848:12;4872:117;4981:1;4978;4971:12;4995:117;5104:1;5101;5094:12;5118:102;5159:6;5210:2;5206:7;5201:2;5194:5;5190:14;5186:28;5176:38;;5118:102;;;:::o;5226:122::-;5299:24;5317:5;5299:24;:::i;:::-;5292:5;5289:35;5279:63;;5338:1;5335;5328:12;5279:63;5226:122;:::o;5354:118::-;5425:22;5441:5;5425:22;:::i;:::-;5418:5;5415:33;5405:61;;5462:1;5459;5452:12;5405:61;5354:118;:::o;164:7857:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_514": {
									"entryPoint": 2798,
									"id": 514,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_422": {
									"entryPoint": 4105,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_563": {
									"entryPoint": 2790,
									"id": 563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_795": {
									"entryPoint": 4499,
									"id": 795,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_376": {
									"entryPoint": 3257,
									"id": 376,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_825": {
									"entryPoint": 4011,
									"id": 825,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_181": {
									"entryPoint": 2494,
									"id": 181,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_202": {
									"entryPoint": 1009,
									"id": 202,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_142": {
									"entryPoint": 1468,
									"id": 142,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_98": {
									"entryPoint": 1266,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_297": {
									"entryPoint": 2259,
									"id": 297,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_88": {
									"entryPoint": 1880,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_268": {
									"entryPoint": 1289,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_316": {
									"entryPoint": 2082,
									"id": 316,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_118": {
									"entryPoint": 863,
									"id": 118,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_721": {
									"entryPoint": 1895,
									"id": 721,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_756": {
									"entryPoint": 1541,
									"id": 756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_870": {
									"entryPoint": 3911,
									"id": 870,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_108": {
									"entryPoint": 1936,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_128": {
									"entryPoint": 1039,
									"id": 128,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_240": {
									"entryPoint": 1049,
									"id": 240,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_769": {
									"entryPoint": 2629,
									"id": 769,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_163": {
									"entryPoint": 2464,
									"id": 163,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6189,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6290,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6337,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6384,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57": {
									"entryPoint": 6406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4": {
									"entryPoint": 6485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3": {
									"entryPoint": 6684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2": {
									"entryPoint": 6766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15685:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:5",
														"type": ""
													}
												],
												"src": "152:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:5"
															},
															"nodeType": "YulIf",
															"src": "373:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:5",
														"type": ""
													}
												],
												"src": "297:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:5"
															},
															"nodeType": "YulIf",
															"src": "725:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:5",
														"type": ""
													}
												],
												"src": "632:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:5"
															},
															"nodeType": "YulIf",
															"src": "1222:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:5",
														"type": ""
													}
												],
												"src": "1112:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:5"
															},
															"nodeType": "YulIf",
															"src": "1830:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:5",
														"type": ""
													}
												],
												"src": "1737:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2283:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2329:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2331:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2331:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2331:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2304:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2313:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2300:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2300:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:32:5"
															},
															"nodeType": "YulIf",
															"src": "2293:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2422:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2437:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2451:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2441:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2466:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2501:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2512:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2497:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2497:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2521:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2476:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2466:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2253:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2264:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2276:6:5",
														"type": ""
													}
												],
												"src": "2217:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2617:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2634:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2657:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2639:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2627:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2627:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2627:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2605:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2612:3:5",
														"type": ""
													}
												],
												"src": "2552:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2735:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2752:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2772:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2757:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2757:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2745:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2745:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2745:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2723:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2730:3:5",
														"type": ""
													}
												],
												"src": "2676:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2883:272:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2893:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2940:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2907:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2897:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2955:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3021:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3026:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2962:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3068:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3075:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3064:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3064:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3082:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3087:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3042:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3042:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3103:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3114:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3141:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3119:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3110:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3103:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2864:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2871:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2879:3:5",
														"type": ""
													}
												],
												"src": "2791:364:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3307:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3317:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3383:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3388:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3324:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3317:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3489:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																	"nodeType": "YulIdentifier",
																	"src": "3400:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3400:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3400:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3502:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3513:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3518:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3509:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3509:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3502:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3295:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3303:3:5",
														"type": ""
													}
												],
												"src": "3161:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3679:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3689:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3755:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3760:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3696:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3689:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3861:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																	"nodeType": "YulIdentifier",
																	"src": "3772:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3772:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3874:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3885:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3881:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3881:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3874:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3667:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3675:3:5",
														"type": ""
													}
												],
												"src": "3533:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4051:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4061:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4127:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4132:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4068:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4068:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4061:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4233:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4144:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4144:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4144:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4246:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4257:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4262:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4253:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4039:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4047:3:5",
														"type": ""
													}
												],
												"src": "3905:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4423:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4433:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4499:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4504:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4440:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4605:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "4516:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4516:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4516:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4618:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4629:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4634:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4625:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4625:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4618:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4411:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4419:3:5",
														"type": ""
													}
												],
												"src": "4277:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4795:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4805:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4871:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4876:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4812:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4812:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4805:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4977:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																	"nodeType": "YulIdentifier",
																	"src": "4888:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4888:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4990:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5001:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5006:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4997:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4997:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4990:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4783:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4791:3:5",
														"type": ""
													}
												],
												"src": "4649:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5167:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5177:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5243:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5248:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5184:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5349:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5260:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5260:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5260:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5362:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5373:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5378:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5369:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5362:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5155:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5163:3:5",
														"type": ""
													}
												],
												"src": "5021:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5539:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5549:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5615:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5620:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5556:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5556:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5721:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																	"nodeType": "YulIdentifier",
																	"src": "5632:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5632:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5734:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5745:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5750:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5741:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5741:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5527:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5535:3:5",
														"type": ""
													}
												],
												"src": "5393:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5911:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5921:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5987:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5992:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5928:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5921:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6093:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																	"nodeType": "YulIdentifier",
																	"src": "6004:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6004:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6004:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6106:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6117:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6122:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6113:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6113:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6106:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5899:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5907:3:5",
														"type": ""
													}
												],
												"src": "5765:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6202:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6219:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6242:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6224:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6224:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6212:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6212:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6212:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6190:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6197:3:5",
														"type": ""
													}
												],
												"src": "6137:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6322:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6339:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6360:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6344:15:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6344:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6332:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6332:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6332:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6310:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6317:3:5",
														"type": ""
													}
												],
												"src": "6261:112:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6477:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6487:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6499:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6510:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6487:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6567:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6580:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6591:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6576:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6576:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6523:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6523:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6523:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6449:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6461:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6472:4:5",
														"type": ""
													}
												],
												"src": "6379:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6699:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6709:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6721:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6732:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6717:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6717:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6709:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6783:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6796:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6807:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6792:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6792:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6745:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6745:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6745:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6671:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6683:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6694:4:5",
														"type": ""
													}
												],
												"src": "6607:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6941:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6951:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6963:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6974:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6959:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6951:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6998:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7009:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6994:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6994:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7017:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7023:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7013:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7013:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6987:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7043:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7115:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7124:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7051:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7051:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7043:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6913:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6925:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6936:4:5",
														"type": ""
													}
												],
												"src": "6823:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7313:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7323:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7335:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7346:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7331:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7331:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7323:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7370:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7381:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7366:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7366:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7389:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7395:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7385:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7359:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7359:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7359:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7415:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7549:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7423:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7415:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7293:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7308:4:5",
														"type": ""
													}
												],
												"src": "7142:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7738:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7748:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7760:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7771:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7756:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7756:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7748:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7795:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7806:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7791:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7791:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7814:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7820:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7810:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7810:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7784:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7784:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7784:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7840:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7974:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7848:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7848:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7840:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7718:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7733:4:5",
														"type": ""
													}
												],
												"src": "7567:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8163:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8173:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8185:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8196:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8181:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8181:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8173:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8220:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8231:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8216:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8216:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8239:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8245:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8235:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8209:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8209:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8209:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8265:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8399:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8273:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8265:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8143:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8158:4:5",
														"type": ""
													}
												],
												"src": "7992:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8588:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8598:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8610:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8621:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8606:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8606:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8598:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8645:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8656:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8641:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8641:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8664:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8670:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8660:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8660:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8634:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8634:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8634:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8690:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8824:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8698:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8698:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8690:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8568:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8583:4:5",
														"type": ""
													}
												],
												"src": "8417:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9013:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9023:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9035:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9046:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9031:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9031:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9023:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9070:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9081:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9066:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9066:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9089:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9095:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9085:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9085:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9059:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9059:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9059:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9115:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9249:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9123:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9123:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9115:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8993:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9008:4:5",
														"type": ""
													}
												],
												"src": "8842:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9438:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9448:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9460:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9471:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9456:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9448:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9495:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9506:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9491:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9491:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9514:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9520:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9510:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9510:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9484:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9484:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9484:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9540:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9674:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9548:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9548:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9540:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9418:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9433:4:5",
														"type": ""
													}
												],
												"src": "9267:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9863:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9873:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9885:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9896:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9881:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9881:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9873:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9920:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9931:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9916:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9916:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9939:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9945:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9935:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9935:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9909:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9909:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9909:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9965:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10099:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9973:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9973:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9965:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9843:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9858:4:5",
														"type": ""
													}
												],
												"src": "9692:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10288:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10298:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10310:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10321:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10306:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10306:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10298:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10345:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10356:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10341:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10341:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10364:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10370:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10360:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10360:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10334:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10334:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10334:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10390:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10524:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10398:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10398:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10390:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10268:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10283:4:5",
														"type": ""
													}
												],
												"src": "10117:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10640:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10650:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10662:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10673:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10658:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10658:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10650:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10730:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10743:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10754:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10739:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10739:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10686:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10686:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10686:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10612:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10624:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10635:4:5",
														"type": ""
													}
												],
												"src": "10542:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10864:120:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10874:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10886:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10897:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10882:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10882:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10874:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10950:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10963:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10974:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10959:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10959:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10910:39:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10910:67:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10910:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10836:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10848:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10859:4:5",
														"type": ""
													}
												],
												"src": "10770:214:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11030:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11040:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11056:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11050:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11050:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "11040:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11023:6:5",
														"type": ""
													}
												],
												"src": "10990:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11130:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11141:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11157:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11151:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11151:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11141:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11113:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11123:6:5",
														"type": ""
													}
												],
												"src": "11071:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11272:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11289:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11294:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11282:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11282:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11282:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11310:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11329:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11334:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11325:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11325:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11310:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11244:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11249:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11260:11:5",
														"type": ""
													}
												],
												"src": "11176:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11395:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11405:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11428:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11410:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11410:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11405:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11439:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11462:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11444:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11444:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11439:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11602:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11604:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11604:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11604:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11523:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11530:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11598:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11526:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11526:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11520:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11520:81:5"
															},
															"nodeType": "YulIf",
															"src": "11517:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11634:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11645:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11648:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11641:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11641:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11634:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11382:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11385:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11391:3:5",
														"type": ""
													}
												],
												"src": "11351:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11707:146:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11717:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11740:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11722:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11722:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11717:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11751:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11774:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11756:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11756:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11751:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11798:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11800:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11800:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11800:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11792:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11795:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11789:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11789:8:5"
															},
															"nodeType": "YulIf",
															"src": "11786:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11830:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11842:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11845:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11838:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11838:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11830:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11693:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11696:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11702:4:5",
														"type": ""
													}
												],
												"src": "11662:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11904:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11914:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11943:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11925:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11925:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11914:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11886:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11896:7:5",
														"type": ""
													}
												],
												"src": "11859:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12003:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12013:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12038:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12031:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12031:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12024:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12024:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12013:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11985:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11995:7:5",
														"type": ""
													}
												],
												"src": "11961:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12102:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12112:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12127:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12134:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12123:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12123:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12112:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12084:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12094:7:5",
														"type": ""
													}
												],
												"src": "12057:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12234:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12244:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12255:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12244:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12216:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12226:7:5",
														"type": ""
													}
												],
												"src": "12189:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12315:43:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12325:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12340:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12347:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12336:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12336:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12325:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12297:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12307:7:5",
														"type": ""
													}
												],
												"src": "12272:86:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12413:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12423:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12432:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12427:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12492:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12517:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12522:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12513:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12513:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12536:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12541:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12532:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12532:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12526:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12526:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12506:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12506:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12506:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12453:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12456:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12450:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12450:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12464:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12466:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12475:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12478:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12471:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12471:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12466:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12446:3:5",
																"statements": []
															},
															"src": "12442:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12589:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12639:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12644:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12635:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12635:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12653:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12628:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12628:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12628:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12570:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12573:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12567:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12567:13:5"
															},
															"nodeType": "YulIf",
															"src": "12564:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12395:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12400:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12405:6:5",
														"type": ""
													}
												],
												"src": "12364:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12728:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12738:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12752:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12758:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12748:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12748:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12738:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12769:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12799:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12805:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12795:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12795:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12773:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12846:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12860:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12874:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12882:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12870:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12870:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12860:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12826:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12819:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12819:26:5"
															},
															"nodeType": "YulIf",
															"src": "12816:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12949:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "12963:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12963:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12963:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12913:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12936:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12944:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12933:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12933:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12910:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12910:38:5"
															},
															"nodeType": "YulIf",
															"src": "12907:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12712:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12721:6:5",
														"type": ""
													}
												],
												"src": "12677:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13031:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13048:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13051:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13041:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13041:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13041:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13145:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13148:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13138:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13138:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13138:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13169:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13172:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13162:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13162:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13162:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13003:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13217:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13234:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13237:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13227:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13227:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13227:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13331:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13334:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13324:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13324:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13324:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13355:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13358:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13348:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13348:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13348:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "13189:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13464:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13481:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13484:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13474:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13474:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13474:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13375:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13587:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13604:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13607:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13597:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13597:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13597:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13498:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13669:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13679:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13697:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13704:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13693:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13693:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13713:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13709:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13709:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13689:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13689:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13679:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13652:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13662:6:5",
														"type": ""
													}
												],
												"src": "13621:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13835:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13857:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13865:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13853:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13853:14:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13869:34:5",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13846:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13846:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13846:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13925:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13933:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13921:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13921:15:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13938:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13914:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13914:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13914:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13827:6:5",
														"type": ""
													}
												],
												"src": "13729:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14065:117:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14087:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14095:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14083:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14083:14:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14099:34:5",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14076:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14076:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14076:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14155:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14163:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14151:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14151:15:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14168:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14144:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14144:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14144:31:5"
														}
													]
												},
												"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14057:6:5",
														"type": ""
													}
												],
												"src": "13959:223:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14294:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14316:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14324:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14312:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14312:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14328:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14305:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14305:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14305:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14384:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14392:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14380:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14380:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14397:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14373:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14373:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14373:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14286:6:5",
														"type": ""
													}
												],
												"src": "14188:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14525:71:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14547:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14555:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14543:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14543:14:5"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14559:29:5",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14536:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14536:53:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14536:53:5"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14517:6:5",
														"type": ""
													}
												],
												"src": "14419:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14708:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14730:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14738:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14726:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14726:14:5"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14742:33:5",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14719:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14719:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14719:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14700:6:5",
														"type": ""
													}
												],
												"src": "14602:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14895:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14917:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14925:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14913:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14913:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14929:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14906:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14906:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14906:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14887:6:5",
														"type": ""
													}
												],
												"src": "14789:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15083:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15105:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15113:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15101:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15101:14:5"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15117:34:5",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15094:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15094:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15094:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15173:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15181:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15169:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15169:15:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15186:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15162:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15162:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15162:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15075:6:5",
														"type": ""
													}
												],
												"src": "14977:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15311:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15333:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15341:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15329:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15329:14:5"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15345:34:5",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15322:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15322:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15322:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15401:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15409:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15397:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15397:15:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15414:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15390:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15390:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15390:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15303:6:5",
														"type": ""
													}
												],
												"src": "15205:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15475:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15532:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15541:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15544:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15534:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15534:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15534:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15498:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15523:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "15505:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15505:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15495:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15495:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15488:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15488:43:5"
															},
															"nodeType": "YulIf",
															"src": "15485:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15468:5:5",
														"type": ""
													}
												],
												"src": "15432:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15603:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15660:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15669:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15672:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15662:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15662:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15662:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15626:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15651:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15633:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15633:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15623:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15623:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15616:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15616:43:5"
															},
															"nodeType": "YulIf",
															"src": "15613:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15596:5:5",
														"type": ""
													}
												],
												"src": "15560:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102b3578063a9059cbb146102e3578063dd62ed3e14610313578063f2fde38b1461034357610100565b8063893d20e8146102295780638da5cb5b1461024757806395d89b4114610265578063a0712d681461028357610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef578063715018a61461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a91906115da565b60405180910390f35b61013d600480360381019061013891906113aa565b6103f1565b60405161014a91906115bf565b60405180910390f35b61015b61040f565b60405161016891906116fc565b60405180910390f35b61018b60048036038101906101869190611357565b610419565b60405161019891906115bf565b60405180910390f35b6101a96104f2565b6040516101b69190611717565b60405180910390f35b6101d960048036038101906101d491906113aa565b610509565b6040516101e691906115bf565b60405180910390f35b610209600480360381019061020491906112ea565b6105bc565b60405161021691906116fc565b60405180910390f35b610227610605565b005b610231610758565b60405161023e91906115a4565b60405180910390f35b61024f610767565b60405161025c91906115a4565b60405180910390f35b61026d610790565b60405161027a91906115da565b60405180910390f35b61029d600480360381019061029891906113ea565b610822565b6040516102aa91906115bf565b60405180910390f35b6102cd60048036038101906102c891906113aa565b6108d3565b6040516102da91906115bf565b60405180910390f35b6102fd60048036038101906102f891906113aa565b6109a0565b60405161030a91906115bf565b60405180910390f35b61032d60048036038101906103289190611317565b6109be565b60405161033a91906116fc565b60405180910390f35b61035d600480360381019061035891906112ea565b610a45565b005b60606006805461036e90611860565b80601f016020809104026020016040519081016040528092919081815260200182805461039a90611860565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006104056103fe610ae6565b8484610aee565b6001905092915050565b6000600354905090565b6000610426848484610cb9565b6104e784610432610ae6565b6104e285604051806060016040528060288152602001611b3b60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610498610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006105b2610516610ae6565b846105ad8560026000610527610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b610aee565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106919061169c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610762610767565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461079f90611860565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb90611860565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b5050505050905090565b600061082c610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b09061169c565b60405180910390fd5b6108ca6108c4610ae6565b83611009565b60019050919050565b60006109966108e0610ae6565b8461099185604051806060016040528060258152602001611b89602591396002600061090a610ae6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b610aee565b6001905092915050565b60006109b46109ad610ae6565b8484610cb9565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610a4d610ae6565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ada576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad19061169c565b60405180910390fd5b610ae381611193565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b559061161c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc5906116dc565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610cac91906116fc565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d20906115fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d90906116bc565b60405180910390fd5b610e0581604051806060016040528060268152602001611b6360269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f479092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f3a91906116fc565b60405180910390a3505050565b6000838311158290610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8691906115da565b60405180910390fd5b5060008385610f9e91906117a4565b9050809150509392505050565b6000808284610fba919061174e565b905083811015610fff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff69061165c565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611079576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110709061167c565b60405180910390fd5b61108e81600354610fab90919063ffffffff16565b6003819055506110e681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fab90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161118791906116fc565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fa9061163c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506112cf81611b0c565b92915050565b6000813590506112e481611b23565b92915050565b600060208284031215611300576112ff6118f0565b5b600061130e848285016112c0565b91505092915050565b6000806040838503121561132e5761132d6118f0565b5b600061133c858286016112c0565b925050602061134d858286016112c0565b9150509250929050565b6000806000606084860312156113705761136f6118f0565b5b600061137e868287016112c0565b935050602061138f868287016112c0565b92505060406113a0868287016112d5565b9150509250925092565b600080604083850312156113c1576113c06118f0565b5b60006113cf858286016112c0565b92505060206113e0858286016112d5565b9150509250929050565b600060208284031215611400576113ff6118f0565b5b600061140e848285016112d5565b91505092915050565b611420816117d8565b82525050565b61142f816117ea565b82525050565b600061144082611732565b61144a818561173d565b935061145a81856020860161182d565b611463816118f5565b840191505092915050565b600061147b60258361173d565b915061148682611906565b604082019050919050565b600061149e60248361173d565b91506114a982611955565b604082019050919050565b60006114c160268361173d565b91506114cc826119a4565b604082019050919050565b60006114e4601b8361173d565b91506114ef826119f3565b602082019050919050565b6000611507601f8361173d565b915061151282611a1c565b602082019050919050565b600061152a60208361173d565b915061153582611a45565b602082019050919050565b600061154d60238361173d565b915061155882611a6e565b604082019050919050565b600061157060228361173d565b915061157b82611abd565b604082019050919050565b61158f81611816565b82525050565b61159e81611820565b82525050565b60006020820190506115b96000830184611417565b92915050565b60006020820190506115d46000830184611426565b92915050565b600060208201905081810360008301526115f48184611435565b905092915050565b600060208201905081810360008301526116158161146e565b9050919050565b6000602082019050818103600083015261163581611491565b9050919050565b60006020820190508181036000830152611655816114b4565b9050919050565b60006020820190508181036000830152611675816114d7565b9050919050565b60006020820190508181036000830152611695816114fa565b9050919050565b600060208201905081810360008301526116b58161151d565b9050919050565b600060208201905081810360008301526116d581611540565b9050919050565b600060208201905081810360008301526116f581611563565b9050919050565b60006020820190506117116000830184611586565b92915050565b600060208201905061172c6000830184611595565b92915050565b600081519050919050565b600082825260208201905092915050565b600061175982611816565b915061176483611816565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561179957611798611892565b5b828201905092915050565b60006117af82611816565b91506117ba83611816565b9250828210156117cd576117cc611892565b5b828203905092915050565b60006117e3826117f6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561184b578082015181840152602081019050611830565b8381111561185a576000848401525b50505050565b6000600282049050600182168061187857607f821691505b6020821081141561188c5761188b6118c1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b611b15816117d8565b8114611b2057600080fd5b50565b611b2c81611816565b8114611b3757600080fd5b5056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122033033d66c3710f4238cf3cbb58b3b9075f9f31f4e2730e2fec18ae93f6ec8f9264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x343 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x283 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1357 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0x1860 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39A SWAP1 PUSH2 0x1860 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x405 PUSH2 0x3FE PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP5 DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH2 0x4E7 DUP5 PUSH2 0x432 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x4E2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B3B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x498 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x516 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x5AD DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x527 PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x762 PUSH2 0x767 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x79F SWAP1 PUSH2 0x1860 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x1860 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x818 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x818 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH2 0x8C4 PUSH2 0xAE6 JUMP JUMPDEST DUP4 PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x996 PUSH2 0x8E0 PUSH2 0xAE6 JUMP JUMPDEST DUP5 PUSH2 0x991 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B89 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x90A PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B4 PUSH2 0x9AD PUSH2 0xAE6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xAE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD1 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE3 DUP2 PUSH2 0x1193 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB55 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC5 SWAP1 PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP1 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD90 SWAP1 PUSH2 0x16BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE05 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B63 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF47 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE9A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3A SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF86 SWAP2 SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x174E JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF6 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1070 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x108E DUP2 PUSH1 0x3 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x10E6 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xFAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1187 SWAP2 SWAP1 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FA SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12CF DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12E4 DUP2 PUSH2 0x1B23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1300 JUMPI PUSH2 0x12FF PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x130E DUP5 DUP3 DUP6 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x132E JUMPI PUSH2 0x132D PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133C DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x134D DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x136F PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x137E DUP7 DUP3 DUP8 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x138F DUP7 DUP3 DUP8 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13A0 DUP7 DUP3 DUP8 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C1 JUMPI PUSH2 0x13C0 PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13CF DUP6 DUP3 DUP7 ADD PUSH2 0x12C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13E0 DUP6 DUP3 DUP7 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1400 JUMPI PUSH2 0x13FF PUSH2 0x18F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140E DUP5 DUP3 DUP6 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1420 DUP2 PUSH2 0x17D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x142F DUP2 PUSH2 0x17EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1440 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x144A DUP2 DUP6 PUSH2 0x173D JUMP JUMPDEST SWAP4 POP PUSH2 0x145A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1463 DUP2 PUSH2 0x18F5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x147B PUSH1 0x25 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1486 DUP3 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149E PUSH1 0x24 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x14A9 DUP3 PUSH2 0x1955 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C1 PUSH1 0x26 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x14CC DUP3 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E4 PUSH1 0x1B DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x14EF DUP3 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1507 PUSH1 0x1F DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1512 DUP3 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152A PUSH1 0x20 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1535 DUP3 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154D PUSH1 0x23 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x1558 DUP3 PUSH2 0x1A6E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1570 PUSH1 0x22 DUP4 PUSH2 0x173D JUMP JUMPDEST SWAP2 POP PUSH2 0x157B DUP3 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158F DUP2 PUSH2 0x1816 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x159E DUP2 PUSH2 0x1820 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1417 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F4 DUP2 DUP5 PUSH2 0x1435 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1615 DUP2 PUSH2 0x146E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1635 DUP2 PUSH2 0x1491 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1655 DUP2 PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1675 DUP2 PUSH2 0x14D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1695 DUP2 PUSH2 0x14FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16B5 DUP2 PUSH2 0x151D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16D5 DUP2 PUSH2 0x1540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F5 DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1711 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1759 DUP3 PUSH2 0x1816 JUMP JUMPDEST SWAP2 POP PUSH2 0x1764 DUP4 PUSH2 0x1816 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1799 JUMPI PUSH2 0x1798 PUSH2 0x1892 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AF DUP3 PUSH2 0x1816 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BA DUP4 PUSH2 0x1816 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x1892 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E3 DUP3 PUSH2 0x17F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x184B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1830 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x185A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1878 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x188C JUMPI PUSH2 0x188B PUSH2 0x18C1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1B15 DUP2 PUSH2 0x17D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B2C DUP2 PUSH2 0x1816 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 CALLER SUB RETURNDATASIZE PUSH7 0xC3710F4238CF3C 0xBB PC 0xB3 0xB9 SMOD 0x5F SWAP16 BALANCE DELEGATECALL 0xE2 PUSH20 0xE2FEC18AE93F6EC8F9264736F6C634300080700 CALLER ",
							"sourceMap": "164:7857:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1277:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2357:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1422:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2946:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;985:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3619:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1573:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1619:127:3;;;:::i;:::-;;837:94:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:71:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1131:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4728:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4281:257;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1878:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2091:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1885:101:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1277:94:0;1333:13;1361:5;1354:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1277:94;:::o;2357:158::-;2442:4;2454:39;2463:12;:10;:12::i;:::-;2477:7;2486:6;2454:8;:39::i;:::-;2506:4;2499:11;;2357:158;;;;:::o;1422:102::-;1485:7;1507:12;;1500:19;;1422:102;:::o;2946:305::-;3054:4;3066:36;3076:6;3084:9;3095:6;3066:9;:36::i;:::-;3108:121;3117:6;3125:12;:10;:12::i;:::-;3139:89;3177:6;3139:89;;;;;;;;;;;;;;;;;:11;:19;3151:6;3139:19;;;;;;;;;;;;;;;:33;3159:12;:10;:12::i;:::-;3139:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3108:8;:121::i;:::-;3242:4;3235:11;;2946:305;;;;;:::o;985:94::-;1045:5;1065:9;;;;;;;;;;;1058:16;;985:94;:::o;3619:206::-;3708:4;3720:83;3729:12;:10;:12::i;:::-;3743:7;3752:50;3791:10;3752:11;:25;3764:12;:10;:12::i;:::-;3752:25;;;;;;;;;;;;;;;:34;3778:7;3752:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3720:8;:83::i;:::-;3816:4;3809:11;;3619:206;;;;:::o;1573:121::-;1649:7;1671:9;:18;1681:7;1671:18;;;;;;;;;;;;;;;;1664:25;;1573:121;;;:::o;1619:127:3:-;1232:12;:10;:12::i;:::-;1222:22;;:6;;;;;;;;;;:22;;;1214:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1713:1:::1;1676:40;;1697:6;::::0;::::1;;;;;;;;1676:40;;;;;;;;;;;;1739:1;1722:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1619:127::o:0;837:94:0:-;897:7;919;:5;:7::i;:::-;912:14;;837:94;:::o;1036:71:3:-;1074:7;1096:6;;;;;;;;;;;1089:13;;1036:71;:::o;1131:98:0:-;1189:13;1217:7;1210:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1131:98;:::o;4728:126::-;4793:4;1232:12:3;:10;:12::i;:::-;1222:22;;:6;;;;;;;;;;:22;;;1214:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4805:27:0::1;4811:12;:10;:12::i;:::-;4825:6;4805:5;:27::i;:::-;4845:4;4838:11;;4728:126:::0;;;:::o;4281:257::-;4375:4;4387:129;4396:12;:10;:12::i;:::-;4410:7;4419:96;4458:15;4419:96;;;;;;;;;;;;;;;;;:11;:25;4431:12;:10;:12::i;:::-;4419:25;;;;;;;;;;;;;;;:34;4445:7;4419:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4387:8;:129::i;:::-;4529:4;4522:11;;4281:257;;;;:::o;1878:164::-;1966:4;1978:42;1988:12;:10;:12::i;:::-;2002:9;2013:6;1978:9;:42::i;:::-;2033:4;2026:11;;1878:164;;;;:::o;2091:145::-;2182:7;2204:11;:18;2216:5;2204:18;;;;;;;;;;;;;;;:27;2223:7;2204:27;;;;;;;;;;;;;;;;2197:34;;2091:145;;;;:::o;1885:101:3:-;1232:12;:10;:12::i;:::-;1222:22;;:6;;;;;;;;;;:22;;;1214:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1953:28:::1;1972:8;1953:18;:28::i;:::-;1885:101:::0;:::o;772:99:1:-;817:15;855:10;840:26;;772:99;:::o;7306:322:0:-;7420:1;7403:19;;:5;:19;;;;7395:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7496:1;7477:21;;:7;:21;;;;7469:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7574:6;7544:11;:18;7556:5;7544:18;;;;;;;;;;;;;;;:27;7563:7;7544:27;;;;;;;;;;;;;;;:36;;;;7607:7;7591:32;;7600:5;7591:32;;;7616:6;7591:32;;;;;;:::i;:::-;;;;;;;;7306:322;;;:::o;5298:450::-;5417:1;5399:20;;:6;:20;;;;5391:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;5496:1;5475:23;;:9;:23;;;;5467:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5565;5587:6;5565:71;;;;;;;;;;;;;;;;;:9;:17;5575:6;5565:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5545:9;:17;5555:6;5545:17;;;;;;;;;;;;;;;:91;;;;5665:32;5690:6;5665:9;:20;5675:9;5665:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5642:9;:20;5652:9;5642:20;;;;;;;;;;;;;;;:55;;;;5725:9;5708:35;;5717:6;5708:35;;;5736:6;5708:35;;;;;;:::i;:::-;;;;;;;;5298:450;;;:::o;1653:173:4:-;1739:7;1767:1;1762;:6;;1770:12;1754:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1789:9;1805:1;1801;:5;;;;:::i;:::-;1789:17;;1820:1;1813:8;;;1653:173;;;;;:::o;855:162::-;913:7;928:9;944:1;940;:5;;;;:::i;:::-;928:17;;964:1;959;:6;;951:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1011:1;1004:8;;;855:162;;;;:::o;5998:284:0:-;6088:1;6069:21;;:7;:21;;;;6061:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;6148:24;6165:6;6148:12;;:16;;:24;;;;:::i;:::-;6133:12;:39;;;;6199:30;6222:6;6199:9;:18;6209:7;6199:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6178:9;:18;6188:7;6178:18;;;;;;;;;;;;;;;:51;;;;6261:7;6240:37;;6257:1;6240:37;;;6270:6;6240:37;;;;;;:::i;:::-;;;;;;;;5998:284;;:::o;2079:211:3:-;2168:1;2148:22;;:8;:22;;;;2140:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2253:8;2224:38;;2245:6;;;;;;;;;;2224:38;;;;;;;;;;;;2277:8;2268:6;;:17;;;;;;;;;;;;;;;;;;2079:211;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:329::-;2276:6;2325:2;2313:9;2304:7;2300:23;2296:32;2293:119;;;2331:79;;:::i;:::-;2293:119;2451:1;2476:53;2521:7;2512:6;2501:9;2497:22;2476:53;:::i;:::-;2466:63;;2422:117;2217:329;;;;:::o;2552:118::-;2639:24;2657:5;2639:24;:::i;:::-;2634:3;2627:37;2552:118;;:::o;2676:109::-;2757:21;2772:5;2757:21;:::i;:::-;2752:3;2745:34;2676:109;;:::o;2791:364::-;2879:3;2907:39;2940:5;2907:39;:::i;:::-;2962:71;3026:6;3021:3;2962:71;:::i;:::-;2955:78;;3042:52;3087:6;3082:3;3075:4;3068:5;3064:16;3042:52;:::i;:::-;3119:29;3141:6;3119:29;:::i;:::-;3114:3;3110:39;3103:46;;2883:272;2791:364;;;;:::o;3161:366::-;3303:3;3324:67;3388:2;3383:3;3324:67;:::i;:::-;3317:74;;3400:93;3489:3;3400:93;:::i;:::-;3518:2;3513:3;3509:12;3502:19;;3161:366;;;:::o;3533:::-;3675:3;3696:67;3760:2;3755:3;3696:67;:::i;:::-;3689:74;;3772:93;3861:3;3772:93;:::i;:::-;3890:2;3885:3;3881:12;3874:19;;3533:366;;;:::o;3905:::-;4047:3;4068:67;4132:2;4127:3;4068:67;:::i;:::-;4061:74;;4144:93;4233:3;4144:93;:::i;:::-;4262:2;4257:3;4253:12;4246:19;;3905:366;;;:::o;4277:::-;4419:3;4440:67;4504:2;4499:3;4440:67;:::i;:::-;4433:74;;4516:93;4605:3;4516:93;:::i;:::-;4634:2;4629:3;4625:12;4618:19;;4277:366;;;:::o;4649:::-;4791:3;4812:67;4876:2;4871:3;4812:67;:::i;:::-;4805:74;;4888:93;4977:3;4888:93;:::i;:::-;5006:2;5001:3;4997:12;4990:19;;4649:366;;;:::o;5021:::-;5163:3;5184:67;5248:2;5243:3;5184:67;:::i;:::-;5177:74;;5260:93;5349:3;5260:93;:::i;:::-;5378:2;5373:3;5369:12;5362:19;;5021:366;;;:::o;5393:::-;5535:3;5556:67;5620:2;5615:3;5556:67;:::i;:::-;5549:74;;5632:93;5721:3;5632:93;:::i;:::-;5750:2;5745:3;5741:12;5734:19;;5393:366;;;:::o;5765:::-;5907:3;5928:67;5992:2;5987:3;5928:67;:::i;:::-;5921:74;;6004:93;6093:3;6004:93;:::i;:::-;6122:2;6117:3;6113:12;6106:19;;5765:366;;;:::o;6137:118::-;6224:24;6242:5;6224:24;:::i;:::-;6219:3;6212:37;6137:118;;:::o;6261:112::-;6344:22;6360:5;6344:22;:::i;:::-;6339:3;6332:35;6261:112;;:::o;6379:222::-;6472:4;6510:2;6499:9;6495:18;6487:26;;6523:71;6591:1;6580:9;6576:17;6567:6;6523:71;:::i;:::-;6379:222;;;;:::o;6607:210::-;6694:4;6732:2;6721:9;6717:18;6709:26;;6745:65;6807:1;6796:9;6792:17;6783:6;6745:65;:::i;:::-;6607:210;;;;:::o;6823:313::-;6936:4;6974:2;6963:9;6959:18;6951:26;;7023:9;7017:4;7013:20;7009:1;6998:9;6994:17;6987:47;7051:78;7124:4;7115:6;7051:78;:::i;:::-;7043:86;;6823:313;;;;:::o;7142:419::-;7308:4;7346:2;7335:9;7331:18;7323:26;;7395:9;7389:4;7385:20;7381:1;7370:9;7366:17;7359:47;7423:131;7549:4;7423:131;:::i;:::-;7415:139;;7142:419;;;:::o;7567:::-;7733:4;7771:2;7760:9;7756:18;7748:26;;7820:9;7814:4;7810:20;7806:1;7795:9;7791:17;7784:47;7848:131;7974:4;7848:131;:::i;:::-;7840:139;;7567:419;;;:::o;7992:::-;8158:4;8196:2;8185:9;8181:18;8173:26;;8245:9;8239:4;8235:20;8231:1;8220:9;8216:17;8209:47;8273:131;8399:4;8273:131;:::i;:::-;8265:139;;7992:419;;;:::o;8417:::-;8583:4;8621:2;8610:9;8606:18;8598:26;;8670:9;8664:4;8660:20;8656:1;8645:9;8641:17;8634:47;8698:131;8824:4;8698:131;:::i;:::-;8690:139;;8417:419;;;:::o;8842:::-;9008:4;9046:2;9035:9;9031:18;9023:26;;9095:9;9089:4;9085:20;9081:1;9070:9;9066:17;9059:47;9123:131;9249:4;9123:131;:::i;:::-;9115:139;;8842:419;;;:::o;9267:::-;9433:4;9471:2;9460:9;9456:18;9448:26;;9520:9;9514:4;9510:20;9506:1;9495:9;9491:17;9484:47;9548:131;9674:4;9548:131;:::i;:::-;9540:139;;9267:419;;;:::o;9692:::-;9858:4;9896:2;9885:9;9881:18;9873:26;;9945:9;9939:4;9935:20;9931:1;9920:9;9916:17;9909:47;9973:131;10099:4;9973:131;:::i;:::-;9965:139;;9692:419;;;:::o;10117:::-;10283:4;10321:2;10310:9;10306:18;10298:26;;10370:9;10364:4;10360:20;10356:1;10345:9;10341:17;10334:47;10398:131;10524:4;10398:131;:::i;:::-;10390:139;;10117:419;;;:::o;10542:222::-;10635:4;10673:2;10662:9;10658:18;10650:26;;10686:71;10754:1;10743:9;10739:17;10730:6;10686:71;:::i;:::-;10542:222;;;;:::o;10770:214::-;10859:4;10897:2;10886:9;10882:18;10874:26;;10910:67;10974:1;10963:9;10959:17;10950:6;10910:67;:::i;:::-;10770:214;;;;:::o;11071:99::-;11123:6;11157:5;11151:12;11141:22;;11071:99;;;:::o;11176:169::-;11260:11;11294:6;11289:3;11282:19;11334:4;11329:3;11325:14;11310:29;;11176:169;;;;:::o;11351:305::-;11391:3;11410:20;11428:1;11410:20;:::i;:::-;11405:25;;11444:20;11462:1;11444:20;:::i;:::-;11439:25;;11598:1;11530:66;11526:74;11523:1;11520:81;11517:107;;;11604:18;;:::i;:::-;11517:107;11648:1;11645;11641:9;11634:16;;11351:305;;;;:::o;11662:191::-;11702:4;11722:20;11740:1;11722:20;:::i;:::-;11717:25;;11756:20;11774:1;11756:20;:::i;:::-;11751:25;;11795:1;11792;11789:8;11786:34;;;11800:18;;:::i;:::-;11786:34;11845:1;11842;11838:9;11830:17;;11662:191;;;;:::o;11859:96::-;11896:7;11925:24;11943:5;11925:24;:::i;:::-;11914:35;;11859:96;;;:::o;11961:90::-;11995:7;12038:5;12031:13;12024:21;12013:32;;11961:90;;;:::o;12057:126::-;12094:7;12134:42;12127:5;12123:54;12112:65;;12057:126;;;:::o;12189:77::-;12226:7;12255:5;12244:16;;12189:77;;;:::o;12272:86::-;12307:7;12347:4;12340:5;12336:16;12325:27;;12272:86;;;:::o;12364:307::-;12432:1;12442:113;12456:6;12453:1;12450:13;12442:113;;;12541:1;12536:3;12532:11;12526:18;12522:1;12517:3;12513:11;12506:39;12478:2;12475:1;12471:10;12466:15;;12442:113;;;12573:6;12570:1;12567:13;12564:101;;;12653:1;12644:6;12639:3;12635:16;12628:27;12564:101;12413:258;12364:307;;;:::o;12677:320::-;12721:6;12758:1;12752:4;12748:12;12738:22;;12805:1;12799:4;12795:12;12826:18;12816:81;;12882:4;12874:6;12870:17;12860:27;;12816:81;12944:2;12936:6;12933:14;12913:18;12910:38;12907:84;;;12963:18;;:::i;:::-;12907:84;12728:269;12677:320;;;:::o;13003:180::-;13051:77;13048:1;13041:88;13148:4;13145:1;13138:15;13172:4;13169:1;13162:15;13189:180;13237:77;13234:1;13227:88;13334:4;13331:1;13324:15;13358:4;13355:1;13348:15;13498:117;13607:1;13604;13597:12;13621:102;13662:6;13713:2;13709:7;13704:2;13697:5;13693:14;13689:28;13679:38;;13621:102;;;:::o;13729:224::-;13869:34;13865:1;13857:6;13853:14;13846:58;13938:7;13933:2;13925:6;13921:15;13914:32;13729:224;:::o;13959:223::-;14099:34;14095:1;14087:6;14083:14;14076:58;14168:6;14163:2;14155:6;14151:15;14144:31;13959:223;:::o;14188:225::-;14328:34;14324:1;14316:6;14312:14;14305:58;14397:8;14392:2;14384:6;14380:15;14373:33;14188:225;:::o;14419:177::-;14559:29;14555:1;14547:6;14543:14;14536:53;14419:177;:::o;14602:181::-;14742:33;14738:1;14730:6;14726:14;14719:57;14602:181;:::o;14789:182::-;14929:34;14925:1;14917:6;14913:14;14906:58;14789:182;:::o;14977:222::-;15117:34;15113:1;15105:6;15101:14;15094:58;15186:5;15181:2;15173:6;15169:15;15162:30;14977:222;:::o;15205:221::-;15345:34;15341:1;15333:6;15329:14;15322:58;15414:4;15409:2;15401:6;15397:15;15390:29;15205:221;:::o;15432:122::-;15505:24;15523:5;15505:24;:::i;:::-;15498:5;15495:35;15485:63;;15544:1;15541;15534:12;15485:63;15432:122;:::o;15560:::-;15633:24;15651:5;15633:24;:::i;:::-;15626:5;15623:35;15613:63;;15672:1;15669;15662:12;15613:63;15560:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1427800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2908",
								"decimals()": "2502",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2580",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30380",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30757"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 482,
									"end": 782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 482,
									"end": 782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 482,
									"end": 782,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 482,
									"end": 782,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 482,
									"end": 782,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 482,
									"end": 782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 853,
									"end": 870,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 873,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 873,
									"end": 883,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 873,
									"end": 883,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 873,
									"end": 883,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 873,
									"end": 885,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 873,
									"end": 885,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 873,
									"end": 885,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 873,
									"end": 885,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 873,
									"end": 885,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 853,
									"end": 885,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 853,
									"end": 885,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 900,
									"end": 909,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 891,
									"end": 897,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 891,
									"end": 897,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 891,
									"end": 909,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 891,
									"end": 909,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 891,
									"end": 909,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 949,
									"end": 950,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 836,
									"end": 968,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 589,
									"end": 594,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 581,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 581,
									"end": 594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 594,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 581,
									"end": 594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 581,
									"end": 594,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 581,
									"end": 594,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 581,
									"end": 594,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 581,
									"end": 594,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 581,
									"end": 594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 581,
									"end": 594,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 610,
									"end": 617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 600,
									"end": 607,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 600,
									"end": 617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 600,
									"end": 617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 600,
									"end": 617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 600,
									"end": 617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 600,
									"end": 617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 600,
									"end": 617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 600,
									"end": 617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 600,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 600,
									"end": 617,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 600,
									"end": 617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 600,
									"end": 617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 600,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 600,
									"end": 617,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 600,
									"end": 617,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 600,
									"end": 617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 600,
									"end": 617,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 635,
									"end": 644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 623,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 644,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 623,
									"end": 644,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 623,
									"end": 644,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 623,
									"end": 644,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 623,
									"end": 644,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 665,
									"end": 677,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 650,
									"end": 662,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 650,
									"end": 677,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 650,
									"end": 677,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 650,
									"end": 677,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 650,
									"end": 677,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 707,
									"end": 719,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 683,
									"end": 692,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 683,
									"end": 704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 693,
									"end": 703,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 683,
									"end": 704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 683,
									"end": 704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 683,
									"end": 704,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 683,
									"end": 704,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 683,
									"end": 704,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 683,
									"end": 704,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 683,
									"end": 704,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 704,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 683,
									"end": 704,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 683,
									"end": 704,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 683,
									"end": 704,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 683,
									"end": 704,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 704,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 683,
									"end": 704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 683,
									"end": 704,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 683,
									"end": 719,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 683,
									"end": 719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 683,
									"end": 719,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 683,
									"end": 719,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 752,
									"end": 762,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 731,
									"end": 777,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 748,
									"end": 749,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 731,
									"end": 777,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 731,
									"end": 777,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 764,
									"end": 776,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 731,
									"end": 777,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 731,
									"end": 777,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 731,
									"end": 777,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 731,
									"end": 777,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 731,
									"end": 777,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 731,
									"end": 777,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 731,
									"end": 777,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 482,
									"end": 782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 772,
									"end": 871,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 772,
									"end": 871,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 817,
									"end": 832,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 855,
									"end": 865,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 840,
									"end": 866,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 840,
									"end": 866,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 772,
									"end": 871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 871,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 952,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 809,
									"end": 952,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 866,
									"end": 871,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 903,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 891,
									"end": 904,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 882,
									"end": 904,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 882,
									"end": 904,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 913,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 940,
									"end": 945,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 913,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 913,
									"end": 946,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 913,
									"end": 946,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 913,
									"end": 946,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 809,
									"end": 952,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 809,
									"end": 952,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 809,
									"end": 952,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 809,
									"end": 952,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 809,
									"end": 952,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 958,
									"end": 1097,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 958,
									"end": 1097,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1013,
									"end": 1018,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 1050,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1051,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1029,
									"end": 1051,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1029,
									"end": 1051,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1091,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1085,
									"end": 1090,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1091,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 1060,
									"end": 1091,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1060,
									"end": 1091,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1060,
									"end": 1091,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1097,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1097,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1097,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1097,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 958,
									"end": 1097,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1103,
									"end": 2265,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1103,
									"end": 2265,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1218,
									"end": 1224,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1226,
									"end": 1232,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1234,
									"end": 1240,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1242,
									"end": 1248,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1291,
									"end": 1294,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1279,
									"end": 1288,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1270,
									"end": 1277,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1266,
									"end": 1289,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1262,
									"end": 1295,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1379,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1259,
									"end": 1379,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1298,
									"end": 1377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1298,
									"end": 1377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1298,
									"end": 1377,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1298,
									"end": 1377,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1298,
									"end": 1377,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1379,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1259,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1439,
									"end": 1440,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1428,
									"end": 1437,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1424,
									"end": 1441,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1418,
									"end": 1442,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1469,
									"end": 1487,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1461,
									"end": 1467,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1458,
									"end": 1488,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1572,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1572,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1455,
									"end": 1572,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1491,
									"end": 1570,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1491,
									"end": 1570,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 1491,
									"end": 1570,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1491,
									"end": 1570,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1491,
									"end": 1570,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1572,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1455,
									"end": 1572,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1662,
									"end": 1669,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1653,
									"end": 1659,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1642,
									"end": 1651,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1596,
									"end": 1670,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1596,
									"end": 1670,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1596,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1670,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1670,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1389,
									"end": 1680,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1740,
									"end": 1742,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1729,
									"end": 1738,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1743,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1719,
									"end": 1744,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1771,
									"end": 1789,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1763,
									"end": 1769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1760,
									"end": 1790,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1757,
									"end": 1874,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1757,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1757,
									"end": 1874,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1793,
									"end": 1872,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 1793,
									"end": 1872,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 1793,
									"end": 1872,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1793,
									"end": 1872,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 1793,
									"end": 1872,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1757,
									"end": 1874,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1757,
									"end": 1874,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1898,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 1964,
									"end": 1971,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1955,
									"end": 1961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1944,
									"end": 1953,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 1940,
									"end": 1962,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1898,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1898,
									"end": 1972,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1898,
									"end": 1972,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 1898,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1888,
									"end": 1972,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1888,
									"end": 1972,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1982,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2021,
									"end": 2023,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2047,
									"end": 2109,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2101,
									"end": 2108,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2092,
									"end": 2098,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2081,
									"end": 2090,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2077,
									"end": 2099,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2047,
									"end": 2109,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2047,
									"end": 2109,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2047,
									"end": 2109,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2047,
									"end": 2109,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2037,
									"end": 2109,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2037,
									"end": 2109,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1992,
									"end": 2119,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2158,
									"end": 2160,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 2184,
									"end": 2248,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2240,
									"end": 2247,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2231,
									"end": 2237,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2220,
									"end": 2229,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2216,
									"end": 2238,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2184,
									"end": 2248,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 2184,
									"end": 2248,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2184,
									"end": 2248,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2184,
									"end": 2248,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2174,
									"end": 2248,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2174,
									"end": 2248,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2129,
									"end": 2258,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1103,
									"end": 2265,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1103,
									"end": 2265,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1103,
									"end": 2265,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1103,
									"end": 2265,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1103,
									"end": 2265,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1103,
									"end": 2265,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1103,
									"end": 2265,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1103,
									"end": 2265,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2271,
									"end": 2389,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2271,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2358,
									"end": 2382,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 2376,
									"end": 2381,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2358,
									"end": 2382,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 2358,
									"end": 2382,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2358,
									"end": 2382,
									"name": "tag",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 2358,
									"end": 2382,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2353,
									"end": 2356,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 2383,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2271,
									"end": 2389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2271,
									"end": 2389,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2271,
									"end": 2389,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2395,
									"end": 2617,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2395,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2488,
									"end": 2492,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2526,
									"end": 2528,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2515,
									"end": 2524,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2511,
									"end": 2529,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2503,
									"end": 2529,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2503,
									"end": 2529,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2539,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2607,
									"end": 2608,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2596,
									"end": 2605,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2592,
									"end": 2609,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2583,
									"end": 2589,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2539,
									"end": 2610,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2539,
									"end": 2610,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2539,
									"end": 2610,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2539,
									"end": 2610,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2395,
									"end": 2617,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2395,
									"end": 2617,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2395,
									"end": 2617,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2395,
									"end": 2617,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2395,
									"end": 2617,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2623,
									"end": 2752,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2623,
									"end": 2752,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2657,
									"end": 2663,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2684,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 2684,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 2684,
									"end": 2704,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2684,
									"end": 2704,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 2684,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2674,
									"end": 2704,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2674,
									"end": 2704,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2713,
									"end": 2746,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 2741,
									"end": 2745,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2733,
									"end": 2739,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2713,
									"end": 2746,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 2713,
									"end": 2746,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2713,
									"end": 2746,
									"name": "tag",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 2713,
									"end": 2746,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2752,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2752,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2752,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2752,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2758,
									"end": 2833,
									"name": "tag",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 2758,
									"end": 2833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2791,
									"end": 2797,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2824,
									"end": 2826,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2818,
									"end": 2827,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2808,
									"end": 2827,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2808,
									"end": 2827,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2758,
									"end": 2833,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2758,
									"end": 2833,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2839,
									"end": 3147,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 2839,
									"end": 3147,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2983,
									"end": 2989,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2980,
									"end": 3010,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2977,
									"end": 3033,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2977,
									"end": 3033,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 2977,
									"end": 3033,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3013,
									"end": 3031,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 3013,
									"end": 3031,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 3013,
									"end": 3031,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3013,
									"end": 3031,
									"name": "tag",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 3013,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2977,
									"end": 3033,
									"name": "tag",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 2977,
									"end": 3033,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3051,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 3073,
									"end": 3079,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3051,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 3051,
									"end": 3080,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3051,
									"end": 3080,
									"name": "tag",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 3051,
									"end": 3080,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3043,
									"end": 3080,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3043,
									"end": 3080,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3129,
									"end": 3133,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3125,
									"end": 3140,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3117,
									"end": 3140,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3117,
									"end": 3140,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2839,
									"end": 3147,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2839,
									"end": 3147,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2839,
									"end": 3147,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2839,
									"end": 3147,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 3153,
									"end": 3230,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3153,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3190,
									"end": 3197,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3219,
									"end": 3224,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3208,
									"end": 3224,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3208,
									"end": 3224,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3153,
									"end": 3230,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3153,
									"end": 3230,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3153,
									"end": 3230,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3153,
									"end": 3230,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 3236,
									"end": 3322,
									"name": "tag",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 3236,
									"end": 3322,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3271,
									"end": 3278,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3311,
									"end": 3315,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 3304,
									"end": 3309,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3300,
									"end": 3316,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3289,
									"end": 3316,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3289,
									"end": 3316,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3322,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3322,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3322,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3322,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 3328,
									"end": 3635,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 3328,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3396,
									"end": 3397,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3406,
									"end": 3519,
									"name": "tag",
									"source": 5,
									"value": "91"
								},
								{
									"begin": 3406,
									"end": 3519,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3420,
									"end": 3426,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3417,
									"end": 3418,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3414,
									"end": 3427,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3406,
									"end": 3519,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3406,
									"end": 3519,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 3406,
									"end": 3519,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3505,
									"end": 3506,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3500,
									"end": 3503,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3490,
									"end": 3508,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3486,
									"end": 3487,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3481,
									"end": 3484,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3477,
									"end": 3488,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3470,
									"end": 3509,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3442,
									"end": 3444,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3439,
									"end": 3440,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3435,
									"end": 3445,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3430,
									"end": 3445,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3430,
									"end": 3445,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3406,
									"end": 3519,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "91"
								},
								{
									"begin": 3406,
									"end": 3519,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3406,
									"end": 3519,
									"name": "tag",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 3406,
									"end": 3519,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3537,
									"end": 3543,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3534,
									"end": 3535,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3531,
									"end": 3544,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3528,
									"end": 3629,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3528,
									"end": 3629,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "94"
								},
								{
									"begin": 3528,
									"end": 3629,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3617,
									"end": 3618,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3608,
									"end": 3614,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3603,
									"end": 3606,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3599,
									"end": 3615,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3592,
									"end": 3619,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3528,
									"end": 3629,
									"name": "tag",
									"source": 5,
									"value": "94"
								},
								{
									"begin": 3528,
									"end": 3629,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3377,
									"end": 3635,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3328,
									"end": 3635,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3328,
									"end": 3635,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3328,
									"end": 3635,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3328,
									"end": 3635,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 3641,
									"end": 3961,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3641,
									"end": 3961,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3685,
									"end": 3691,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3722,
									"end": 3723,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3716,
									"end": 3720,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3712,
									"end": 3724,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 3702,
									"end": 3724,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3702,
									"end": 3724,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3769,
									"end": 3770,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3763,
									"end": 3767,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3759,
									"end": 3771,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3790,
									"end": 3808,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3780,
									"end": 3861,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "96"
								},
								{
									"begin": 3780,
									"end": 3861,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3846,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 3838,
									"end": 3844,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3834,
									"end": 3851,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3824,
									"end": 3851,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3824,
									"end": 3851,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3780,
									"end": 3861,
									"name": "tag",
									"source": 5,
									"value": "96"
								},
								{
									"begin": 3780,
									"end": 3861,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3908,
									"end": 3910,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3900,
									"end": 3906,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3897,
									"end": 3911,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3877,
									"end": 3895,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3874,
									"end": 3912,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3871,
									"end": 3955,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3871,
									"end": 3955,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "97"
								},
								{
									"begin": 3871,
									"end": 3955,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3927,
									"end": 3945,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "98"
								},
								{
									"begin": 3927,
									"end": 3945,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "99"
								},
								{
									"begin": 3927,
									"end": 3945,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3927,
									"end": 3945,
									"name": "tag",
									"source": 5,
									"value": "98"
								},
								{
									"begin": 3927,
									"end": 3945,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3871,
									"end": 3955,
									"name": "tag",
									"source": 5,
									"value": "97"
								},
								{
									"begin": 3871,
									"end": 3955,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3692,
									"end": 3961,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3641,
									"end": 3961,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3641,
									"end": 3961,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3641,
									"end": 3961,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3641,
									"end": 3961,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 3967,
									"end": 4248,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 3967,
									"end": 4248,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4050,
									"end": 4077,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 4072,
									"end": 4076,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4050,
									"end": 4077,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 4050,
									"end": 4077,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 4050,
									"end": 4077,
									"name": "tag",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 4050,
									"end": 4077,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4042,
									"end": 4048,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4038,
									"end": 4078,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4180,
									"end": 4186,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4168,
									"end": 4178,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4165,
									"end": 4187,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4144,
									"end": 4162,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4132,
									"end": 4142,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4129,
									"end": 4163,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4126,
									"end": 4188,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4123,
									"end": 4211,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4123,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "102"
								},
								{
									"begin": 4123,
									"end": 4211,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4191,
									"end": 4209,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "103"
								},
								{
									"begin": 4191,
									"end": 4209,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 4191,
									"end": 4209,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 4191,
									"end": 4209,
									"name": "tag",
									"source": 5,
									"value": "103"
								},
								{
									"begin": 4191,
									"end": 4209,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4123,
									"end": 4211,
									"name": "tag",
									"source": 5,
									"value": "102"
								},
								{
									"begin": 4123,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4231,
									"end": 4241,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4227,
									"end": 4229,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4220,
									"end": 4242,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4010,
									"end": 4248,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3967,
									"end": 4248,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3967,
									"end": 4248,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3967,
									"end": 4248,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 4254,
									"end": 4434,
									"name": "tag",
									"source": 5,
									"value": "99"
								},
								{
									"begin": 4254,
									"end": 4434,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4302,
									"end": 4379,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4299,
									"end": 4300,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4292,
									"end": 4380,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4399,
									"end": 4403,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 4396,
									"end": 4397,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4389,
									"end": 4404,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4423,
									"end": 4427,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4420,
									"end": 4421,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4413,
									"end": 4428,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4440,
									"end": 4620,
									"name": "tag",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 4440,
									"end": 4620,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4488,
									"end": 4565,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4485,
									"end": 4486,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4478,
									"end": 4566,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4585,
									"end": 4589,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 4582,
									"end": 4583,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4575,
									"end": 4590,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4609,
									"end": 4613,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4606,
									"end": 4607,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4599,
									"end": 4614,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4626,
									"end": 4743,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 4626,
									"end": 4743,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4735,
									"end": 4736,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4732,
									"end": 4733,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4725,
									"end": 4737,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4749,
									"end": 4866,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 4749,
									"end": 4866,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4858,
									"end": 4859,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4855,
									"end": 4856,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4848,
									"end": 4860,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4872,
									"end": 4989,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 4872,
									"end": 4989,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4981,
									"end": 4982,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4978,
									"end": 4979,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4971,
									"end": 4983,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4995,
									"end": 5112,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 4995,
									"end": 5112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5104,
									"end": 5105,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5101,
									"end": 5102,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5094,
									"end": 5106,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5118,
									"end": 5220,
									"name": "tag",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 5118,
									"end": 5220,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5159,
									"end": 5165,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5210,
									"end": 5212,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 5206,
									"end": 5213,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5203,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 5194,
									"end": 5199,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5190,
									"end": 5204,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5186,
									"end": 5214,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5214,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5176,
									"end": 5214,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5118,
									"end": 5220,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5118,
									"end": 5220,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5118,
									"end": 5220,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5118,
									"end": 5220,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 5226,
									"end": 5348,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 5226,
									"end": 5348,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5299,
									"end": 5323,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "112"
								},
								{
									"begin": 5317,
									"end": 5322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5299,
									"end": 5323,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 5299,
									"end": 5323,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5299,
									"end": 5323,
									"name": "tag",
									"source": 5,
									"value": "112"
								},
								{
									"begin": 5299,
									"end": 5323,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5297,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5289,
									"end": 5324,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 5279,
									"end": 5342,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "113"
								},
								{
									"begin": 5279,
									"end": 5342,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5338,
									"end": 5339,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5335,
									"end": 5336,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5328,
									"end": 5340,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5279,
									"end": 5342,
									"name": "tag",
									"source": 5,
									"value": "113"
								},
								{
									"begin": 5279,
									"end": 5342,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5226,
									"end": 5348,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5226,
									"end": 5348,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 5354,
									"end": 5472,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 5354,
									"end": 5472,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5425,
									"end": 5447,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "115"
								},
								{
									"begin": 5441,
									"end": 5446,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5425,
									"end": 5447,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 5425,
									"end": 5447,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5425,
									"end": 5447,
									"name": "tag",
									"source": 5,
									"value": "115"
								},
								{
									"begin": 5425,
									"end": 5447,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5418,
									"end": 5423,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5415,
									"end": 5448,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 5405,
									"end": 5466,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "116"
								},
								{
									"begin": 5405,
									"end": 5466,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5462,
									"end": 5463,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5459,
									"end": 5460,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5452,
									"end": 5464,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5405,
									"end": 5466,
									"name": "tag",
									"source": 5,
									"value": "116"
								},
								{
									"begin": 5405,
									"end": 5466,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5354,
									"end": 5472,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5354,
									"end": 5472,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 8021,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122033033d66c3710f4238cf3cbb58b3b9075f9f31f4e2730e2fec18ae93f6ec8f9264736f6c63430008070033",
									".code": [
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 8021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 837,
											"end": 931,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1346,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1361,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1371,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2463,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2477,
											"end": 2484,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2486,
											"end": 2492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2454,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2454,
											"end": 2493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2493,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2454,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2499,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2515,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1485,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1507,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1524,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3054,
											"end": 3058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3066,
											"end": 3102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3066,
											"end": 3102,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3066,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3117,
											"end": 3123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3125,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3125,
											"end": 3137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3125,
											"end": 3137,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3125,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3177,
											"end": 3183,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3150,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3157,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3159,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3139,
											"end": 3176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3139,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3108,
											"end": 3229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3108,
											"end": 3229,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3108,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3235,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2946,
											"end": 3251,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1079,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 3712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3729,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3729,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3729,
											"end": 3741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3741,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3729,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3743,
											"end": 3750,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3791,
											"end": 3801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3763,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3764,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3764,
											"end": 3776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3764,
											"end": 3776,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3764,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3777,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3752,
											"end": 3790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3752,
											"end": 3802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3752,
											"end": 3802,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3752,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3720,
											"end": 3803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3720,
											"end": 3803,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3720,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3820,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3809,
											"end": 3820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3825,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1664,
											"end": 1689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1664,
											"end": 1689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1694,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 837,
											"end": 931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 897,
											"end": 904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 919,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 919,
											"end": 926,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 926,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 919,
											"end": 926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 931,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1189,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1229,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4811,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4811,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4811,
											"end": 4823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4811,
											"end": 4823,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4811,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4805,
											"end": 4832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4805,
											"end": 4832,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4805,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4849,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4854,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4375,
											"end": 4379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4396,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4396,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4396,
											"end": 4408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4396,
											"end": 4408,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4396,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4410,
											"end": 4417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4458,
											"end": 4473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4431,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4452,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4419,
											"end": 4457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4419,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4387,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4387,
											"end": 4516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4387,
											"end": 4516,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4387,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4529,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4522,
											"end": 4533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4522,
											"end": 4533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4281,
											"end": 4538,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1988,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1988,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1988,
											"end": 2000,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2000,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1988,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2019,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1978,
											"end": 2020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1978,
											"end": 2020,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1978,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2037,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2026,
											"end": 2037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2042,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2215,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2221,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2236,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1972,
											"end": 1980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1953,
											"end": 1981,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1953,
											"end": 1981,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1953,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 772,
											"end": 871,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 772,
											"end": 871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 817,
											"end": 832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 865,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 840,
											"end": 866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 772,
											"end": 871,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7306,
											"end": 7628,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7306,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7403,
											"end": 7422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7403,
											"end": 7422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7403,
											"end": 7408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7403,
											"end": 7422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7403,
											"end": 7422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7403,
											"end": 7422,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7403,
											"end": 7422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7395,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7477,
											"end": 7498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7477,
											"end": 7498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7477,
											"end": 7498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7469,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7555,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7556,
											"end": 7561,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7563,
											"end": 7570,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7571,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7580,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7607,
											"end": 7614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7600,
											"end": 7605,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7616,
											"end": 7622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7628,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5298,
											"end": 5748,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5298,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5399,
											"end": 5419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5399,
											"end": 5419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5405,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5419,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5399,
											"end": 5419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5391,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5496,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5475,
											"end": 5484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5475,
											"end": 5498,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5498,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5475,
											"end": 5498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5475,
											"end": 5498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5587,
											"end": 5593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5565,
											"end": 5586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5565,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5554,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5561,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5545,
											"end": 5562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5636,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5545,
											"end": 5636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5690,
											"end": 5696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5684,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5665,
											"end": 5689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5665,
											"end": 5697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5665,
											"end": 5697,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5665,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5661,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5697,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5642,
											"end": 5697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5725,
											"end": 5734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5736,
											"end": 5742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5743,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5298,
											"end": 5748,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1653,
											"end": 1826,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1653,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1763,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1768,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1783,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1820,
											"end": 1821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1826,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1826,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1826,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 855,
											"end": 1017,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 855,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 913,
											"end": 920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 944,
											"end": 945,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 940,
											"end": 941,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 928,
											"end": 945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 928,
											"end": 945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 964,
											"end": 965,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 959,
											"end": 960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 959,
											"end": 965,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 959,
											"end": 965,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 951,
											"end": 997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 951,
											"end": 997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 951,
											"end": 997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 951,
											"end": 997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 951,
											"end": 997,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 951,
											"end": 997,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 951,
											"end": 997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 951,
											"end": 997,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 951,
											"end": 997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 855,
											"end": 1017,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 1017,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 1017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 855,
											"end": 1017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 855,
											"end": 1017,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5998,
											"end": 6282,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5998,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6088,
											"end": 6089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6069,
											"end": 6090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6069,
											"end": 6076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6069,
											"end": 6090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6069,
											"end": 6090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6069,
											"end": 6090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6069,
											"end": 6090,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6061,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6165,
											"end": 6171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6160,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6148,
											"end": 6160,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6148,
											"end": 6164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6145,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6133,
											"end": 6172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6172,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6222,
											"end": 6228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6209,
											"end": 6216,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6199,
											"end": 6221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6199,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6195,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6178,
											"end": 6196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6229,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6261,
											"end": 6268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6270,
											"end": 6276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6240,
											"end": 6277,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6282,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2079,
											"end": 2290,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2079,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2290,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2290,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2311,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2323,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2328,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2521,
											"end": 2528,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2510,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2657,
											"end": 2662,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2639,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2634,
											"end": 2637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2670,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2772,
											"end": 2777,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2757,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2752,
											"end": 2755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2779,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2785,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2907,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3026,
											"end": 3032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3024,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2962,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 3033,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 3033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3085,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3079,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3073,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3042,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3119,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3117,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3149,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3149,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2883,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 3155,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3388,
											"end": 3390,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3383,
											"end": 3386,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3324,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3391,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 3489,
											"end": 3492,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 3400,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3527,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3760,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3755,
											"end": 3758,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3696,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3763,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 3861,
											"end": 3864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 3772,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3885,
											"end": 3888,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3874,
											"end": 3893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3874,
											"end": 3893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3899,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4047,
											"end": 4050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4132,
											"end": 4134,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4127,
											"end": 4130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4233,
											"end": 4236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4144,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4262,
											"end": 4264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4246,
											"end": 4265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4246,
											"end": 4265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 4271,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 4504,
											"end": 4506,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 4499,
											"end": 4502,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 4440,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4507,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 4516,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4634,
											"end": 4636,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4632,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4643,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 4876,
											"end": 4878,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4871,
											"end": 4874,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 4812,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4879,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4888,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5008,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5001,
											"end": 5004,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4997,
											"end": 5009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 5015,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 5248,
											"end": 5250,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5243,
											"end": 5246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 5184,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 5349,
											"end": 5352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 5260,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5373,
											"end": 5376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5387,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 5620,
											"end": 5622,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5615,
											"end": 5618,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 5556,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5721,
											"end": 5724,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5632,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5748,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5734,
											"end": 5753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5734,
											"end": 5753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5759,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5907,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5992,
											"end": 5994,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5987,
											"end": 5990,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5928,
											"end": 5995,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5928,
											"end": 5995,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5928,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5995,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 6093,
											"end": 6096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 6004,
											"end": 6097,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6004,
											"end": 6097,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 6004,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6122,
											"end": 6124,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6117,
											"end": 6120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6125,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 6131,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6137,
											"end": 6255,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 6137,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6224,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 6242,
											"end": 6247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6224,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 6224,
											"end": 6248,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6224,
											"end": 6248,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 6224,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6219,
											"end": 6222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6212,
											"end": 6249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6137,
											"end": 6255,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6261,
											"end": 6373,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 6261,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6344,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 6360,
											"end": 6365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6344,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 6344,
											"end": 6366,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6344,
											"end": 6366,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 6344,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6339,
											"end": 6342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6332,
											"end": 6367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6261,
											"end": 6373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6261,
											"end": 6373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6261,
											"end": 6373,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6379,
											"end": 6601,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 6379,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6472,
											"end": 6476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6512,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6499,
											"end": 6508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6487,
											"end": 6513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6487,
											"end": 6513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 6591,
											"end": 6592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6593,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6567,
											"end": 6573,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 6523,
											"end": 6594,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6523,
											"end": 6594,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 6523,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6379,
											"end": 6601,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6379,
											"end": 6601,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6379,
											"end": 6601,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6379,
											"end": 6601,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6379,
											"end": 6601,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6607,
											"end": 6817,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 6607,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6734,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6721,
											"end": 6730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6717,
											"end": 6735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6709,
											"end": 6735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6709,
											"end": 6735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6745,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 6807,
											"end": 6808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 6805,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6792,
											"end": 6809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6783,
											"end": 6789,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6745,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6745,
											"end": 6810,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6745,
											"end": 6810,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 6745,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 6817,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 6817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 6817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 6817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 6817,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6823,
											"end": 7136,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6823,
											"end": 7136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6976,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6959,
											"end": 6977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7023,
											"end": 7032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7017,
											"end": 7021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7013,
											"end": 7033,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7009,
											"end": 7010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 7007,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6994,
											"end": 7011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 7124,
											"end": 7128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7121,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 7051,
											"end": 7129,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7051,
											"end": 7129,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 7051,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7043,
											"end": 7129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7043,
											"end": 7129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 7136,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 7136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 7136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 7136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 7136,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7142,
											"end": 7561,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 7142,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7308,
											"end": 7312,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7346,
											"end": 7348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7335,
											"end": 7344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7331,
											"end": 7349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7393,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7385,
											"end": 7405,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7381,
											"end": 7382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7379,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7359,
											"end": 7406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7423,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 7549,
											"end": 7553,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7423,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 7423,
											"end": 7554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7423,
											"end": 7554,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 7423,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7415,
											"end": 7554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7415,
											"end": 7554,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7142,
											"end": 7561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7142,
											"end": 7561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7142,
											"end": 7561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7142,
											"end": 7561,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7567,
											"end": 7986,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 7567,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7733,
											"end": 7737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7760,
											"end": 7769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7756,
											"end": 7774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7748,
											"end": 7774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7748,
											"end": 7774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7820,
											"end": 7829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7814,
											"end": 7818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7810,
											"end": 7830,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7806,
											"end": 7807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7795,
											"end": 7804,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7791,
											"end": 7808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7784,
											"end": 7831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7848,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7848,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7848,
											"end": 7979,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7848,
											"end": 7979,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 7848,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7840,
											"end": 7979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7840,
											"end": 7979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7986,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7992,
											"end": 8411,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 7992,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8158,
											"end": 8162,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8196,
											"end": 8198,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8194,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8181,
											"end": 8199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8245,
											"end": 8254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8239,
											"end": 8243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8235,
											"end": 8255,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8231,
											"end": 8232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8229,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8216,
											"end": 8233,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8209,
											"end": 8256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8273,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 8399,
											"end": 8403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8273,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 8273,
											"end": 8404,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8273,
											"end": 8404,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 8273,
											"end": 8404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8265,
											"end": 8404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7992,
											"end": 8411,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8417,
											"end": 8836,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 8417,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8587,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8621,
											"end": 8623,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8610,
											"end": 8619,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8606,
											"end": 8624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8598,
											"end": 8624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8598,
											"end": 8624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8664,
											"end": 8668,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8680,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8656,
											"end": 8657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8634,
											"end": 8681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 8824,
											"end": 8828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8698,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 8698,
											"end": 8829,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8698,
											"end": 8829,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 8698,
											"end": 8829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8690,
											"end": 8829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8690,
											"end": 8829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8417,
											"end": 8836,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8417,
											"end": 8836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8417,
											"end": 8836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8417,
											"end": 8836,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9008,
											"end": 9012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9046,
											"end": 9048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9044,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9049,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9023,
											"end": 9049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9023,
											"end": 9049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9095,
											"end": 9104,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9085,
											"end": 9105,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9070,
											"end": 9079,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9066,
											"end": 9083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9059,
											"end": 9106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9123,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9123,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 9123,
											"end": 9254,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9123,
											"end": 9254,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 9123,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 9261,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9267,
											"end": 9686,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 9267,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9433,
											"end": 9437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9473,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9448,
											"end": 9474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9448,
											"end": 9474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9520,
											"end": 9529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9514,
											"end": 9518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9510,
											"end": 9530,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9495,
											"end": 9504,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9491,
											"end": 9508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9484,
											"end": 9531,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9548,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 9674,
											"end": 9678,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9548,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 9548,
											"end": 9679,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9548,
											"end": 9679,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 9548,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9267,
											"end": 9686,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9267,
											"end": 9686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9267,
											"end": 9686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9267,
											"end": 9686,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9692,
											"end": 10111,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 9692,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9858,
											"end": 9862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9885,
											"end": 9894,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9881,
											"end": 9899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9873,
											"end": 9899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9873,
											"end": 9899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9945,
											"end": 9954,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9939,
											"end": 9943,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9955,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9931,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9916,
											"end": 9933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9909,
											"end": 9956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 10099,
											"end": 10103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9973,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 9973,
											"end": 10104,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9973,
											"end": 10104,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 9973,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9965,
											"end": 10104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9965,
											"end": 10104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 10111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 10111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 10111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 10111,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10117,
											"end": 10536,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 10117,
											"end": 10536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10283,
											"end": 10287,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10321,
											"end": 10323,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10310,
											"end": 10319,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10306,
											"end": 10324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10298,
											"end": 10324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10298,
											"end": 10324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10370,
											"end": 10379,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10364,
											"end": 10368,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10380,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10356,
											"end": 10357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10345,
											"end": 10354,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10334,
											"end": 10381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10398,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 10524,
											"end": 10528,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10398,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 10398,
											"end": 10529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10398,
											"end": 10529,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 10398,
											"end": 10529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10390,
											"end": 10529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10390,
											"end": 10529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10117,
											"end": 10536,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10117,
											"end": 10536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10117,
											"end": 10536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10117,
											"end": 10536,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10542,
											"end": 10764,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 10542,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10662,
											"end": 10671,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10658,
											"end": 10676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10650,
											"end": 10676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10650,
											"end": 10676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10686,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 10754,
											"end": 10755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10743,
											"end": 10752,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10739,
											"end": 10756,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10730,
											"end": 10736,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10686,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 10686,
											"end": 10757,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10686,
											"end": 10757,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 10686,
											"end": 10757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10542,
											"end": 10764,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10542,
											"end": 10764,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10542,
											"end": 10764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10542,
											"end": 10764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10542,
											"end": 10764,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10770,
											"end": 10984,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10770,
											"end": 10984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10859,
											"end": 10863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10897,
											"end": 10899,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10886,
											"end": 10895,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10882,
											"end": 10900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10874,
											"end": 10900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10874,
											"end": 10900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10910,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10972,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10959,
											"end": 10976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10950,
											"end": 10956,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10910,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 10910,
											"end": 10977,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10910,
											"end": 10977,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 10910,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10770,
											"end": 10984,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10770,
											"end": 10984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10770,
											"end": 10984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10770,
											"end": 10984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10770,
											"end": 10984,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11071,
											"end": 11170,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 11071,
											"end": 11170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11123,
											"end": 11129,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11157,
											"end": 11162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11151,
											"end": 11163,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11141,
											"end": 11163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11141,
											"end": 11163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11071,
											"end": 11170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11071,
											"end": 11170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11071,
											"end": 11170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11071,
											"end": 11170,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11176,
											"end": 11345,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 11176,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11260,
											"end": 11271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11289,
											"end": 11292,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11282,
											"end": 11301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11334,
											"end": 11338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11329,
											"end": 11332,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11325,
											"end": 11339,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11310,
											"end": 11339,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11310,
											"end": 11339,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11176,
											"end": 11345,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11176,
											"end": 11345,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11176,
											"end": 11345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11176,
											"end": 11345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11176,
											"end": 11345,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11351,
											"end": 11656,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 11351,
											"end": 11656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11410,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 11428,
											"end": 11429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11410,
											"end": 11430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 11410,
											"end": 11430,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11410,
											"end": 11430,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 11410,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11405,
											"end": 11430,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11405,
											"end": 11430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11439,
											"end": 11464,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11439,
											"end": 11464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11598,
											"end": 11599,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11530,
											"end": 11596,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11526,
											"end": 11600,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11523,
											"end": 11524,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11520,
											"end": 11601,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 11517,
											"end": 11624,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11517,
											"end": 11624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 11517,
											"end": 11624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11604,
											"end": 11622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 11604,
											"end": 11622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 11604,
											"end": 11622,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11604,
											"end": 11622,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 11604,
											"end": 11622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11517,
											"end": 11624,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 11517,
											"end": 11624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11648,
											"end": 11649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11645,
											"end": 11646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11641,
											"end": 11650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11634,
											"end": 11650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11634,
											"end": 11650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11351,
											"end": 11656,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11351,
											"end": 11656,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11351,
											"end": 11656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11351,
											"end": 11656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11351,
											"end": 11656,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11662,
											"end": 11853,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 11662,
											"end": 11853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11702,
											"end": 11706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11722,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 11740,
											"end": 11741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11722,
											"end": 11742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 11722,
											"end": 11742,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11722,
											"end": 11742,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 11722,
											"end": 11742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11717,
											"end": 11742,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11717,
											"end": 11742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 11774,
											"end": 11775,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 11756,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11751,
											"end": 11776,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11751,
											"end": 11776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11795,
											"end": 11796,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11792,
											"end": 11793,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11789,
											"end": 11797,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11786,
											"end": 11820,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11786,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 11786,
											"end": 11820,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11786,
											"end": 11820,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 11786,
											"end": 11820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11845,
											"end": 11846,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11842,
											"end": 11843,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11838,
											"end": 11847,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11830,
											"end": 11847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11830,
											"end": 11847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11662,
											"end": 11853,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11662,
											"end": 11853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11662,
											"end": 11853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11662,
											"end": 11853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11662,
											"end": 11853,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11859,
											"end": 11955,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 11859,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11896,
											"end": 11903,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11925,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 11943,
											"end": 11948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11925,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 11925,
											"end": 11949,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11925,
											"end": 11949,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 11925,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11914,
											"end": 11949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11914,
											"end": 11949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11859,
											"end": 11955,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11859,
											"end": 11955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11859,
											"end": 11955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11859,
											"end": 11955,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11961,
											"end": 12051,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 11961,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11995,
											"end": 12002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12038,
											"end": 12043,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12031,
											"end": 12044,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12024,
											"end": 12045,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12013,
											"end": 12045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12013,
											"end": 12045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11961,
											"end": 12051,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11961,
											"end": 12051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11961,
											"end": 12051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11961,
											"end": 12051,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12057,
											"end": 12183,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 12057,
											"end": 12183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12094,
											"end": 12101,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12176,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12127,
											"end": 12132,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12123,
											"end": 12177,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12112,
											"end": 12177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12112,
											"end": 12177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12057,
											"end": 12183,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12057,
											"end": 12183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12057,
											"end": 12183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12057,
											"end": 12183,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12189,
											"end": 12266,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 12189,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12226,
											"end": 12233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12255,
											"end": 12260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12244,
											"end": 12260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12244,
											"end": 12260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12189,
											"end": 12266,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12189,
											"end": 12266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12189,
											"end": 12266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12189,
											"end": 12266,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12272,
											"end": 12358,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 12272,
											"end": 12358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12307,
											"end": 12314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12347,
											"end": 12351,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 12340,
											"end": 12345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12336,
											"end": 12352,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12325,
											"end": 12352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12325,
											"end": 12352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12272,
											"end": 12358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12272,
											"end": 12358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12272,
											"end": 12358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12272,
											"end": 12358,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12364,
											"end": 12671,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 12364,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12432,
											"end": 12433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12555,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 12442,
											"end": 12555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12456,
											"end": 12462,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12453,
											"end": 12454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12450,
											"end": 12463,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12442,
											"end": 12555,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12442,
											"end": 12555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 12442,
											"end": 12555,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12541,
											"end": 12542,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12536,
											"end": 12539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12532,
											"end": 12543,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12526,
											"end": 12544,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12522,
											"end": 12523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12517,
											"end": 12520,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12513,
											"end": 12524,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12506,
											"end": 12545,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12478,
											"end": 12480,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12475,
											"end": 12476,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12471,
											"end": 12481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12466,
											"end": 12481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12466,
											"end": 12481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12442,
											"end": 12555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 12442,
											"end": 12555,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12442,
											"end": 12555,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 12442,
											"end": 12555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12573,
											"end": 12579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12570,
											"end": 12571,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12567,
											"end": 12580,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12564,
											"end": 12665,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12564,
											"end": 12665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 12564,
											"end": 12665,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12653,
											"end": 12654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12644,
											"end": 12650,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12639,
											"end": 12642,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12635,
											"end": 12651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12628,
											"end": 12655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12564,
											"end": 12665,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 12564,
											"end": 12665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12413,
											"end": 12671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12364,
											"end": 12671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12364,
											"end": 12671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12364,
											"end": 12671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12364,
											"end": 12671,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12677,
											"end": 12997,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 12677,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12721,
											"end": 12727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12758,
											"end": 12759,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 12752,
											"end": 12756,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12748,
											"end": 12760,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12738,
											"end": 12760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12805,
											"end": 12806,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 12799,
											"end": 12803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12795,
											"end": 12807,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12826,
											"end": 12844,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12816,
											"end": 12897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 12816,
											"end": 12897,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12882,
											"end": 12886,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 12874,
											"end": 12880,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12860,
											"end": 12887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12860,
											"end": 12887,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12816,
											"end": 12897,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 12816,
											"end": 12897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12944,
											"end": 12946,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12936,
											"end": 12942,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12933,
											"end": 12947,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12913,
											"end": 12931,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12910,
											"end": 12948,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12907,
											"end": 12991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12907,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 12907,
											"end": 12991,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 12963,
											"end": 12981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12907,
											"end": 12991,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 12907,
											"end": 12991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12728,
											"end": 12997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12677,
											"end": 12997,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12677,
											"end": 12997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12677,
											"end": 12997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12677,
											"end": 12997,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13003,
											"end": 13183,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 13003,
											"end": 13183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13051,
											"end": 13128,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13048,
											"end": 13049,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13041,
											"end": 13129,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13148,
											"end": 13152,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 13145,
											"end": 13146,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13138,
											"end": 13153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13172,
											"end": 13176,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13169,
											"end": 13170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13177,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13189,
											"end": 13369,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 13189,
											"end": 13369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13237,
											"end": 13314,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13234,
											"end": 13235,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13227,
											"end": 13315,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13334,
											"end": 13338,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 13331,
											"end": 13332,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13324,
											"end": 13339,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13358,
											"end": 13362,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13355,
											"end": 13356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13348,
											"end": 13363,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13498,
											"end": 13615,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 13498,
											"end": 13615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13607,
											"end": 13608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13604,
											"end": 13605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13597,
											"end": 13609,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13621,
											"end": 13723,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 13621,
											"end": 13723,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13662,
											"end": 13668,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13713,
											"end": 13715,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 13709,
											"end": 13716,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 13704,
											"end": 13706,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 13697,
											"end": 13702,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13693,
											"end": 13707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13689,
											"end": 13717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13679,
											"end": 13717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13679,
											"end": 13717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13621,
											"end": 13723,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13621,
											"end": 13723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13621,
											"end": 13723,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13621,
											"end": 13723,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13729,
											"end": 13953,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 13729,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13869,
											"end": 13903,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13865,
											"end": 13866,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13857,
											"end": 13863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13853,
											"end": 13867,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13846,
											"end": 13904,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13938,
											"end": 13945,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13933,
											"end": 13935,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13925,
											"end": 13931,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13921,
											"end": 13936,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13914,
											"end": 13946,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13729,
											"end": 13953,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13729,
											"end": 13953,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13959,
											"end": 14182,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 13959,
											"end": 14182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14099,
											"end": 14133,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 14095,
											"end": 14096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14087,
											"end": 14093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14083,
											"end": 14097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14076,
											"end": 14134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14168,
											"end": 14174,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14163,
											"end": 14165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14155,
											"end": 14161,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14151,
											"end": 14166,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14144,
											"end": 14175,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13959,
											"end": 14182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13959,
											"end": 14182,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14188,
											"end": 14413,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 14188,
											"end": 14413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14328,
											"end": 14362,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14324,
											"end": 14325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14316,
											"end": 14322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14312,
											"end": 14326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14305,
											"end": 14363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14397,
											"end": 14405,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14392,
											"end": 14394,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14384,
											"end": 14390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14380,
											"end": 14395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14373,
											"end": 14406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14188,
											"end": 14413,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14188,
											"end": 14413,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14419,
											"end": 14596,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 14419,
											"end": 14596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14559,
											"end": 14588,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 14555,
											"end": 14556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14547,
											"end": 14553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14543,
											"end": 14557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14536,
											"end": 14589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14419,
											"end": 14596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14419,
											"end": 14596,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14602,
											"end": 14783,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 14602,
											"end": 14783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14742,
											"end": 14775,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 14738,
											"end": 14739,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14730,
											"end": 14736,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14726,
											"end": 14740,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14719,
											"end": 14776,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14602,
											"end": 14783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14602,
											"end": 14783,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14789,
											"end": 14971,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 14789,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14929,
											"end": 14963,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14925,
											"end": 14926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14917,
											"end": 14923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14913,
											"end": 14927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14906,
											"end": 14964,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14789,
											"end": 14971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14789,
											"end": 14971,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14977,
											"end": 15199,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 14977,
											"end": 15199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15117,
											"end": 15151,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 15113,
											"end": 15114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15105,
											"end": 15111,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15101,
											"end": 15115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15094,
											"end": 15152,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15186,
											"end": 15191,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15181,
											"end": 15183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15173,
											"end": 15179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15169,
											"end": 15184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15162,
											"end": 15192,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14977,
											"end": 15199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14977,
											"end": 15199,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15205,
											"end": 15426,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 15205,
											"end": 15426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15379,
											"name": "PUSH",
											"source": 5,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 15341,
											"end": 15342,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15333,
											"end": 15339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15329,
											"end": 15343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15322,
											"end": 15380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15414,
											"end": 15418,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15409,
											"end": 15411,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15401,
											"end": 15407,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15397,
											"end": 15412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15390,
											"end": 15419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15205,
											"end": 15426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15205,
											"end": 15426,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15432,
											"end": 15554,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 15432,
											"end": 15554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15505,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 15523,
											"end": 15528,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15505,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 15505,
											"end": 15529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15505,
											"end": 15529,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 15505,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15498,
											"end": 15503,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15495,
											"end": 15530,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15485,
											"end": 15548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 15485,
											"end": 15548,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15544,
											"end": 15545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15541,
											"end": 15542,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15534,
											"end": 15546,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15485,
											"end": 15548,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 15485,
											"end": 15548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15432,
											"end": 15554,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15432,
											"end": 15554,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15560,
											"end": 15682,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 15560,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15633,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 15651,
											"end": 15656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15633,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 15633,
											"end": 15657,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15633,
											"end": 15657,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 15633,
											"end": 15657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15626,
											"end": 15631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15623,
											"end": 15658,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15613,
											"end": 15676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 15613,
											"end": 15676,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15672,
											"end": 15673,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15669,
											"end": 15670,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15662,
											"end": 15674,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15613,
											"end": 15676,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 15613,
											"end": 15676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15560,
											"end": 15682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15560,
											"end": 15682,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEP20/BEP20Token.sol\":\"BEP20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP20/BEP20Token.sol\":{\"keccak256\":\"0xab32eca2e02d53f04f3205974735f33eb441670c373272885ac6aee69439dea8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24c68486232c5456df67b43ca4263bdb6874ff2c50f55d9f2218d4f2da61db57\",\"dweb:/ipfs/QmZig7anGawutHuxdTzmfz1tpTWjcTVjU8bLKKH6gys3dF\"]},\"BEP20/Context.sol\":{\"keccak256\":\"0xcf50ef7eb9328cf9a60082bc9d23fc0ca6344cbeb4abf1b312a2390b7ecab7ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1bbbe9a786fc8ea85583e8fbd4d34c3f31c2b92e9f8b2a5df6affa2f229bf09\",\"dweb:/ipfs/QmPYdsdJ8ugVgLMsK1vibuXrbMMThG8KbY4sDGM9XSW5Bn\"]},\"BEP20/IBEP20.sol\":{\"keccak256\":\"0xbe57f8362a148cc000e0c2ebbb5d7efe22cb62089dcd178bdbf35b35c09bc09a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296c60c309bab8a9ad0e5e0ce69634be029278bd27c618864fa49b92653e3d66\",\"dweb:/ipfs/QmNmUBxrxetyfVxhB8ZyhVEamqUieEtYAod7YfadAKEfh7\"]},\"BEP20/Ownable.sol\":{\"keccak256\":\"0x106507e412cf86289e52c137ce5cbc87f7cc191198382687b70861e27dac8fec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac715ddb2f98a3ccbd3f9893643c4896060ae95f8ea9e5f263c5c567e4daaa5f\",\"dweb:/ipfs/QmfEtqyqwkRgog18kUkeyTpBB76RxXMWCJDaRQ2bbRnbL9\"]},\"BEP20/SafeMath.sol\":{\"keccak256\":\"0xeb08c3fbee681669025b9edef233aa66317a39adc44d62d1af7a86b3be3607f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://903d3e0e809e52a2867a448037a69baedd9e28dfbc83bea7fbc9a11233b559b0\",\"dweb:/ipfs/QmYHVPya4pMnTuTHuAJBUxvk2rBJNQLnefoiVKQwYez7af\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEP20/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BEP20/Context.sol\":567:1089  contract Context {... */\n  mstore(0x40, 0x80)\n    /* \"BEP20/Context.sol\":738:757  constructor ()  { } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"BEP20/Context.sol\":567:1089  contract Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEP20/Context.sol\":567:1089  contract Context {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a15e82f999567bce0c9e88185f52bda5419db029d167304778ca8e535c29002364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_551": {
									"entryPoint": null,
									"id": 551,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a15e82f999567bce0c9e88185f52bda5419db029d167304778ca8e535c29002364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0x5E DUP3 0xF9 SWAP10 JUMP PUSH28 0xCE0C9E88185F52BDA5419DB029D167304778CA8E535C29002364736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "567:522:1:-:0;;;738:19;;;;;;;;;;567:522;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220a15e82f999567bce0c9e88185f52bda5419db029d167304778ca8e535c29002364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0x5E DUP3 0xF9 SWAP10 JUMP PUSH28 0xCE0C9E88185F52BDA5419DB029D167304778CA8E535C29002364736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "567:522:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 567,
									"end": 1089,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 567,
									"end": 1089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 567,
									"end": 1089,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 738,
									"end": 757,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 738,
									"end": 757,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 738,
									"end": 757,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 738,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 738,
									"end": 757,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 738,
									"end": 757,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 738,
									"end": 757,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 738,
									"end": 757,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 738,
									"end": 757,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 738,
									"end": 757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 738,
									"end": 757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 567,
									"end": 1089,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 567,
									"end": 1089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 567,
									"end": 1089,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 567,
									"end": 1089,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 567,
									"end": 1089,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 567,
									"end": 1089,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 567,
									"end": 1089,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a15e82f999567bce0c9e88185f52bda5419db029d167304778ca8e535c29002364736f6c63430008070033",
									".code": [
										{
											"begin": 567,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 567,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 1089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 567,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 1089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 1089,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEP20/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP20/Context.sol\":{\"keccak256\":\"0xcf50ef7eb9328cf9a60082bc9d23fc0ca6344cbeb4abf1b312a2390b7ecab7ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1bbbe9a786fc8ea85583e8fbd4d34c3f31c2b92e9f8b2a5df6affa2f229bf09\",\"dweb:/ipfs/QmPYdsdJ8ugVgLMsK1vibuXrbMMThG8KbY4sDGM9XSW5Bn\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEP20/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEP20/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP20/IBEP20.sol\":{\"keccak256\":\"0xbe57f8362a148cc000e0c2ebbb5d7efe22cb62089dcd178bdbf35b35c09bc09a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296c60c309bab8a9ad0e5e0ce69634be029278bd27c618864fa49b92653e3d66\",\"dweb:/ipfs/QmNmUBxrxetyfVxhB8ZyhVEamqUieEtYAod7YfadAKEfh7\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEP20/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BEP20/Ownable.sol\":584:2292  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"BEP20/Ownable.sol\":821:968  constructor () { //internal... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"BEP20/Ownable.sol\":853:870  address msgSender */\n  0x00\n    /* \"BEP20/Ownable.sol\":873:885  _msgSender() */\n  tag_6\n    /* \"BEP20/Ownable.sol\":873:883  _msgSender */\n  shl(0x20, tag_7)\n    /* \"BEP20/Ownable.sol\":873:885  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"BEP20/Ownable.sol\":853:885  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"BEP20/Ownable.sol\":900:909  msgSender */\n  dup1\n    /* \"BEP20/Ownable.sol\":891:897  _owner */\n  0x00\n  dup1\n    /* \"BEP20/Ownable.sol\":891:909  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEP20/Ownable.sol\":953:962  msgSender */\n  dup1\n    /* \"BEP20/Ownable.sol\":920:963  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEP20/Ownable.sol\":949:950  0 */\n  0x00\n    /* \"BEP20/Ownable.sol\":920:963  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEP20/Ownable.sol\":836:968  { //internal... */\n  pop\n    /* \"BEP20/Ownable.sol\":584:2292  contract Ownable is Context {... */\n  jump(tag_8)\n    /* \"BEP20/Context.sol\":772:871  function _msgSender() internal view returns (address payable) {... */\ntag_7:\n    /* \"BEP20/Context.sol\":817:832  address payable */\n  0x00\n    /* \"BEP20/Context.sol\":855:865  msg.sender */\n  caller\n    /* \"BEP20/Context.sol\":840:866  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"BEP20/Context.sol\":772:871  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"BEP20/Ownable.sol\":584:2292  contract Ownable is Context {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEP20/Ownable.sol\":584:2292  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BEP20/Ownable.sol\":1619:1746  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"BEP20/Ownable.sol\":1036:1107  function owner() public view returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20/Ownable.sol\":1885:1986  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"BEP20/Ownable.sol\":1619:1746  function renounceOwnership() public onlyOwner {... */\n    tag_7:\n        /* \"BEP20/Ownable.sol\":1232:1244  _msgSender() */\n      tag_17\n        /* \"BEP20/Ownable.sol\":1232:1242  _msgSender */\n      tag_18\n        /* \"BEP20/Ownable.sol\":1232:1244  _msgSender() */\n      jump\t// in\n    tag_17:\n        /* \"BEP20/Ownable.sol\":1222:1244  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1222:1228  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1222:1244  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEP20/Ownable.sol\":1214:1281  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"BEP20/Ownable.sol\":1713:1714  0 */\n      0x00\n        /* \"BEP20/Ownable.sol\":1676:1716  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1697:1703  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1676:1716  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20/Ownable.sol\":1739:1740  0 */\n      0x00\n        /* \"BEP20/Ownable.sol\":1722:1728  _owner */\n      dup1\n      0x00\n        /* \"BEP20/Ownable.sol\":1722:1741  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEP20/Ownable.sol\":1619:1746  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"BEP20/Ownable.sol\":1036:1107  function owner() public view returns (address) {... */\n    tag_9:\n        /* \"BEP20/Ownable.sol\":1074:1081  address */\n      0x00\n        /* \"BEP20/Ownable.sol\":1096:1102  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1089:1102  return _owner */\n      swap1\n      pop\n        /* \"BEP20/Ownable.sol\":1036:1107  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20/Ownable.sol\":1885:1986  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_15:\n        /* \"BEP20/Ownable.sol\":1232:1244  _msgSender() */\n      tag_25\n        /* \"BEP20/Ownable.sol\":1232:1242  _msgSender */\n      tag_18\n        /* \"BEP20/Ownable.sol\":1232:1244  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"BEP20/Ownable.sol\":1222:1244  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1222:1228  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":1222:1244  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEP20/Ownable.sol\":1214:1281  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"BEP20/Ownable.sol\":1953:1981  _transferOwnership(newOwner) */\n      tag_29\n        /* \"BEP20/Ownable.sol\":1972:1980  newOwner */\n      dup2\n        /* \"BEP20/Ownable.sol\":1953:1971  _transferOwnership */\n      tag_30\n        /* \"BEP20/Ownable.sol\":1953:1981  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_29:\n        /* \"BEP20/Ownable.sol\":1885:1986  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BEP20/Context.sol\":772:871  function _msgSender() internal view returns (address payable) {... */\n    tag_18:\n        /* \"BEP20/Context.sol\":817:832  address payable */\n      0x00\n        /* \"BEP20/Context.sol\":855:865  msg.sender */\n      caller\n        /* \"BEP20/Context.sol\":840:866  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"BEP20/Context.sol\":772:871  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"BEP20/Ownable.sol\":2079:2290  function _transferOwnership(address newOwner) internal {... */\n    tag_30:\n        /* \"BEP20/Ownable.sol\":2168:2169  0 */\n      0x00\n        /* \"BEP20/Ownable.sol\":2148:2170  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":2148:2156  newOwner */\n      dup2\n        /* \"BEP20/Ownable.sol\":2148:2170  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20/Ownable.sol\":2140:2213  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"BEP20/Ownable.sol\":2253:2261  newOwner */\n      dup1\n        /* \"BEP20/Ownable.sol\":2224:2262  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":2245:2251  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20/Ownable.sol\":2224:2262  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20/Ownable.sol\":2277:2285  newOwner */\n      dup1\n        /* \"BEP20/Ownable.sol\":2268:2274  _owner */\n      0x00\n      dup1\n        /* \"BEP20/Ownable.sol\":2268:2285  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEP20/Ownable.sol\":2079:2290  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_37:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_39\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_14:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":228:347   */\n    tag_42:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_45\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_37\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_46:\n        /* \"#utility.yul\":574:598   */\n      tag_48\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:977   */\n    tag_50:\n        /* \"#utility.yul\":753:756   */\n      0x00\n        /* \"#utility.yul\":774:841   */\n      tag_52\n        /* \"#utility.yul\":838:840   */\n      0x26\n        /* \"#utility.yul\":833:836   */\n      dup4\n        /* \"#utility.yul\":774:841   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":767:841   */\n      swap2\n      pop\n        /* \"#utility.yul\":850:943   */\n      tag_54\n        /* \"#utility.yul\":939:942   */\n      dup3\n        /* \"#utility.yul\":850:943   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":968:970   */\n      0x40\n        /* \"#utility.yul\":963:966   */\n      dup3\n        /* \"#utility.yul\":959:971   */\n      add\n        /* \"#utility.yul\":952:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":611:977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":983:1349   */\n    tag_56:\n        /* \"#utility.yul\":1125:1128   */\n      0x00\n        /* \"#utility.yul\":1146:1213   */\n      tag_58\n        /* \"#utility.yul\":1210:1212   */\n      0x20\n        /* \"#utility.yul\":1205:1208   */\n      dup4\n        /* \"#utility.yul\":1146:1213   */\n      tag_53\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1139:1213   */\n      swap2\n      pop\n        /* \"#utility.yul\":1222:1315   */\n      tag_59\n        /* \"#utility.yul\":1311:1314   */\n      dup3\n        /* \"#utility.yul\":1222:1315   */\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1340:1342   */\n      0x20\n        /* \"#utility.yul\":1335:1338   */\n      dup3\n        /* \"#utility.yul\":1331:1343   */\n      add\n        /* \"#utility.yul\":1324:1343   */\n      swap1\n      pop\n        /* \"#utility.yul\":983:1349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1355:1577   */\n    tag_11:\n        /* \"#utility.yul\":1448:1452   */\n      0x00\n        /* \"#utility.yul\":1486:1488   */\n      0x20\n        /* \"#utility.yul\":1475:1484   */\n      dup3\n        /* \"#utility.yul\":1471:1489   */\n      add\n        /* \"#utility.yul\":1463:1489   */\n      swap1\n      pop\n        /* \"#utility.yul\":1499:1570   */\n      tag_62\n        /* \"#utility.yul\":1567:1568   */\n      0x00\n        /* \"#utility.yul\":1556:1565   */\n      dup4\n        /* \"#utility.yul\":1552:1569   */\n      add\n        /* \"#utility.yul\":1543:1549   */\n      dup5\n        /* \"#utility.yul\":1499:1570   */\n      tag_46\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1355:1577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1583:2002   */\n    tag_35:\n        /* \"#utility.yul\":1749:1753   */\n      0x00\n        /* \"#utility.yul\":1787:1789   */\n      0x20\n        /* \"#utility.yul\":1776:1785   */\n      dup3\n        /* \"#utility.yul\":1772:1790   */\n      add\n        /* \"#utility.yul\":1764:1790   */\n      swap1\n      pop\n        /* \"#utility.yul\":1836:1845   */\n      dup2\n        /* \"#utility.yul\":1830:1834   */\n      dup2\n        /* \"#utility.yul\":1826:1846   */\n      sub\n        /* \"#utility.yul\":1822:1823   */\n      0x00\n        /* \"#utility.yul\":1811:1820   */\n      dup4\n        /* \"#utility.yul\":1807:1824   */\n      add\n        /* \"#utility.yul\":1800:1847   */\n      mstore\n        /* \"#utility.yul\":1864:1995   */\n      tag_64\n        /* \"#utility.yul\":1990:1994   */\n      dup2\n        /* \"#utility.yul\":1864:1995   */\n      tag_50\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1856:1995   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:2002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2008:2427   */\n    tag_21:\n        /* \"#utility.yul\":2174:2178   */\n      0x00\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2201:2210   */\n      dup3\n        /* \"#utility.yul\":2197:2215   */\n      add\n        /* \"#utility.yul\":2189:2215   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2270   */\n      dup2\n        /* \"#utility.yul\":2255:2259   */\n      dup2\n        /* \"#utility.yul\":2251:2271   */\n      sub\n        /* \"#utility.yul\":2247:2248   */\n      0x00\n        /* \"#utility.yul\":2236:2245   */\n      dup4\n        /* \"#utility.yul\":2232:2249   */\n      add\n        /* \"#utility.yul\":2225:2272   */\n      mstore\n        /* \"#utility.yul\":2289:2420   */\n      tag_66\n        /* \"#utility.yul\":2415:2419   */\n      dup2\n        /* \"#utility.yul\":2289:2420   */\n      tag_56\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2281:2420   */\n      swap1\n      pop\n        /* \"#utility.yul\":2008:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2514:2683   */\n    tag_53:\n        /* \"#utility.yul\":2598:2609   */\n      0x00\n        /* \"#utility.yul\":2632:2638   */\n      dup3\n        /* \"#utility.yul\":2627:2630   */\n      dup3\n        /* \"#utility.yul\":2620:2639   */\n      mstore\n        /* \"#utility.yul\":2672:2676   */\n      0x20\n        /* \"#utility.yul\":2667:2670   */\n      dup3\n        /* \"#utility.yul\":2663:2677   */\n      add\n        /* \"#utility.yul\":2648:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2514:2683   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2689:2785   */\n    tag_49:\n        /* \"#utility.yul\":2726:2733   */\n      0x00\n        /* \"#utility.yul\":2755:2779   */\n      tag_71\n        /* \"#utility.yul\":2773:2778   */\n      dup3\n        /* \"#utility.yul\":2755:2779   */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2744:2779   */\n      swap1\n      pop\n        /* \"#utility.yul\":2689:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2917   */\n    tag_72:\n        /* \"#utility.yul\":2828:2835   */\n      0x00\n        /* \"#utility.yul\":2868:2910   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2861:2866   */\n      dup3\n        /* \"#utility.yul\":2857:2911   */\n      and\n        /* \"#utility.yul\":2846:2911   */\n      swap1\n      pop\n        /* \"#utility.yul\":2791:2917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3046:3163   */\n    tag_44:\n        /* \"#utility.yul\":3155:3156   */\n      0x00\n        /* \"#utility.yul\":3152:3153   */\n      dup1\n        /* \"#utility.yul\":3145:3157   */\n      revert\n        /* \"#utility.yul\":3169:3394   */\n    tag_55:\n        /* \"#utility.yul\":3309:3343   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3305:3306   */\n      0x00\n        /* \"#utility.yul\":3297:3303   */\n      dup3\n        /* \"#utility.yul\":3293:3307   */\n      add\n        /* \"#utility.yul\":3286:3344   */\n      mstore\n        /* \"#utility.yul\":3378:3386   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3373:3375   */\n      0x20\n        /* \"#utility.yul\":3365:3371   */\n      dup3\n        /* \"#utility.yul\":3361:3376   */\n      add\n        /* \"#utility.yul\":3354:3387   */\n      mstore\n        /* \"#utility.yul\":3169:3394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3400:3582   */\n    tag_60:\n        /* \"#utility.yul\":3540:3574   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3536:3537   */\n      0x00\n        /* \"#utility.yul\":3528:3534   */\n      dup3\n        /* \"#utility.yul\":3524:3538   */\n      add\n        /* \"#utility.yul\":3517:3575   */\n      mstore\n        /* \"#utility.yul\":3400:3582   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3588:3710   */\n    tag_40:\n        /* \"#utility.yul\":3661:3685   */\n      tag_80\n        /* \"#utility.yul\":3679:3684   */\n      dup2\n        /* \"#utility.yul\":3661:3685   */\n      tag_49\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3654:3659   */\n      dup2\n        /* \"#utility.yul\":3651:3686   */\n      eq\n        /* \"#utility.yul\":3641:3704   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":3700:3701   */\n      0x00\n        /* \"#utility.yul\":3697:3698   */\n      dup1\n        /* \"#utility.yul\":3690:3702   */\n      revert\n        /* \"#utility.yul\":3641:3704   */\n    tag_81:\n        /* \"#utility.yul\":3588:3710   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c1891e5f076ce0201047b2743bc7b812810a6e7f1f8824c50e2d39856dbacdd164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_551": {
									"entryPoint": null,
									"id": 551,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_712": {
									"entryPoint": null,
									"id": 712,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_563": {
									"entryPoint": 196,
									"id": 563,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b6105db806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b6040516100659190610473565b60405180910390f35b610088600480360381019061008391906103f1565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104ae565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104ae565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103169061048e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506103eb8161058e565b92915050565b60006020828403121561040757610406610511565b5b6000610415848285016103dc565b91505092915050565b610427816104df565b82525050565b600061043a6026836104ce565b915061044582610516565b604082019050919050565b600061045d6020836104ce565b915061046882610565565b602082019050919050565b6000602082019050610488600083018461041e565b92915050565b600060208201905081810360008301526104a78161042d565b9050919050565b600060208201905081810360008301526104c781610450565b9050919050565b600082825260208201905092915050565b60006104ea826104f1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610597816104df565b81146105a257600080fd5b5056fea2646970667358221220c1891e5f076ce0201047b2743bc7b812810a6e7f1f8824c50e2d39856dbacdd164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x21 PUSH2 0xC4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5DB DUP1 PUSH2 0xDB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316 SWAP1 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EB DUP2 PUSH2 0x58E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x407 JUMPI PUSH2 0x406 PUSH2 0x511 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x415 DUP5 DUP3 DUP6 ADD PUSH2 0x3DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A PUSH1 0x26 DUP4 PUSH2 0x4CE JUMP JUMPDEST SWAP2 POP PUSH2 0x445 DUP3 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D PUSH1 0x20 DUP4 PUSH2 0x4CE JUMP JUMPDEST SWAP2 POP PUSH2 0x468 DUP3 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x488 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A7 DUP2 PUSH2 0x42D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C7 DUP2 PUSH2 0x450 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP2 EQ PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 DUP10 0x1E 0x5F SMOD PUSH13 0xE0201047B2743BC7B812810A6E PUSH32 0x1F8824C50E2D39856DBACDD164736F6C63430008070033000000000000000000 ",
							"sourceMap": "584:1708:3:-:0;;;821:147;;;;;;;;;;853:17;873:12;:10;;;:12;;:::i;:::-;853:32;;900:9;891:6;;:18;;;;;;;;;;;;;;;;;;953:9;920:43;;949:1;920:43;;;;;;;;;;;;836:132;584:1708;;772:99:1;817:15;855:10;840:26;;772:99;:::o;584:1708:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_563": {
									"entryPoint": 679,
									"id": 563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_795": {
									"entryPoint": 687,
									"id": 795,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_721": {
									"entryPoint": 477,
									"id": 721,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_756": {
									"entryPoint": 138,
									"id": 756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_769": {
									"entryPoint": 518,
									"id": 769,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3713:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:5"
															},
															"nodeType": "YulIf",
															"src": "228:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:5",
														"type": ""
													}
												],
												"src": "152:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:5",
														"type": ""
													}
												],
												"src": "487:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "757:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "767:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "833:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "838:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "774:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "939:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "850:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "850:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "850:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "963:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "968:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "959:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "753:3:5",
														"type": ""
													}
												],
												"src": "611:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1129:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1139:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1210:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1146:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1222:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1222:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1324:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1335:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1340:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1331:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1324:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1117:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1125:3:5",
														"type": ""
													}
												],
												"src": "983:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1453:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1463:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1475:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1486:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1471:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1463:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1543:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1556:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1567:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1552:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1552:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1499:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1499:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1425:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1437:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1448:4:5",
														"type": ""
													}
												],
												"src": "1355:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1754:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1764:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1776:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1787:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1764:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1811:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1822:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1830:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1836:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1826:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1800:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1800:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1856:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1990:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1864:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1856:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1734:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1749:4:5",
														"type": ""
													}
												],
												"src": "1583:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2179:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2189:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2201:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2197:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2189:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2236:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2247:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2232:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2232:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2255:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2261:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2251:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2251:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2225:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2225:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2281:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2415:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2289:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2281:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2159:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2174:4:5",
														"type": ""
													}
												],
												"src": "2008:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2473:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2483:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2499:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2493:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2483:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2466:6:5",
														"type": ""
													}
												],
												"src": "2433:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2610:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2627:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2632:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2620:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2620:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2648:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2667:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2672:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2663:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2648:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2582:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2587:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2598:11:5",
														"type": ""
													}
												],
												"src": "2514:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2734:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2744:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2773:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2755:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2755:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2744:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2716:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2726:7:5",
														"type": ""
													}
												],
												"src": "2689:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2861:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2868:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2857:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2846:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2818:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2828:7:5",
														"type": ""
													}
												],
												"src": "2791:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3012:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3032:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3022:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3022:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2923:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3135:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3152:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3155:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3145:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3145:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3046:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3275:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3297:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3305:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3309:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3286:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3365:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3373:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3361:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3361:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3378:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3354:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3354:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3354:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3267:6:5",
														"type": ""
													}
												],
												"src": "3169:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3506:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3528:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3536:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3524:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3524:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3540:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3517:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3517:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3498:6:5",
														"type": ""
													}
												],
												"src": "3400:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3631:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3688:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3697:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3700:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3690:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3690:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3690:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3654:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3679:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3661:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3661:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3651:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3651:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3644:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3644:43:5"
															},
															"nodeType": "YulIf",
															"src": "3641:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3624:5:5",
														"type": ""
													}
												],
												"src": "3588:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b6100586101dd565b6040516100659190610473565b60405180910390f35b610088600480360381019061008391906103f1565b610206565b005b6100926102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906104ae565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61020e6102a7565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461029b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610292906104ae565b60405180910390fd5b6102a4816102af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103169061048e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506103eb8161058e565b92915050565b60006020828403121561040757610406610511565b5b6000610415848285016103dc565b91505092915050565b610427816104df565b82525050565b600061043a6026836104ce565b915061044582610516565b604082019050919050565b600061045d6020836104ce565b915061046882610565565b602082019050919050565b6000602082019050610488600083018461041e565b92915050565b600060208201905081810360008301526104a78161042d565b9050919050565b600060208201905081810360008301526104c781610450565b9050919050565b600082825260208201905092915050565b60006104ea826104f1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610597816104df565b81146105a257600080fd5b5056fea2646970667358221220c1891e5f076ce0201047b2743bc7b812810a6e7f1f8824c50e2d39856dbacdd164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x2AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316 SWAP1 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EB DUP2 PUSH2 0x58E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x407 JUMPI PUSH2 0x406 PUSH2 0x511 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x415 DUP5 DUP3 DUP6 ADD PUSH2 0x3DC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A PUSH1 0x26 DUP4 PUSH2 0x4CE JUMP JUMPDEST SWAP2 POP PUSH2 0x445 DUP3 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D PUSH1 0x20 DUP4 PUSH2 0x4CE JUMP JUMPDEST SWAP2 POP PUSH2 0x468 DUP3 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x488 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x41E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A7 DUP2 PUSH2 0x42D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C7 DUP2 PUSH2 0x450 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA DUP3 PUSH2 0x4F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x4DF JUMP JUMPDEST DUP2 EQ PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 DUP10 0x1E 0x5F SMOD PUSH13 0xE0201047B2743BC7B812810A6E PUSH32 0x1F8824C50E2D39856DBACDD164736F6C63430008070033000000000000000000 ",
							"sourceMap": "584:1708:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1619:127;;;:::i;:::-;;1036:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1885:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1619:127;1232:12;:10;:12::i;:::-;1222:22;;:6;;;;;;;;;;:22;;;1214:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1713:1:::1;1676:40;;1697:6;::::0;::::1;;;;;;;;1676:40;;;;;;;;;;;;1739:1;1722:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1619:127::o:0;1036:71::-;1074:7;1096:6;;;;;;;;;;;1089:13;;1036:71;:::o;1885:101::-;1232:12;:10;:12::i;:::-;1222:22;;:6;;;;;;;;;;:22;;;1214:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1953:28:::1;1972:8;1953:18;:28::i;:::-;1885:101:::0;:::o;772:99:1:-;817:15;855:10;840:26;;772:99;:::o;2079:211:3:-;2168:1;2148:22;;:8;:22;;;;2140:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2253:8;2224:38;;2245:6;;;;;;;;;;2224:38;;;;;;;;;;;;2277:8;2268:6;;:17;;;;;;;;;;;;;;;;;;2079:211;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:366::-;753:3;774:67;838:2;833:3;774:67;:::i;:::-;767:74;;850:93;939:3;850:93;:::i;:::-;968:2;963:3;959:12;952:19;;611:366;;;:::o;983:::-;1125:3;1146:67;1210:2;1205:3;1146:67;:::i;:::-;1139:74;;1222:93;1311:3;1222:93;:::i;:::-;1340:2;1335:3;1331:12;1324:19;;983:366;;;:::o;1355:222::-;1448:4;1486:2;1475:9;1471:18;1463:26;;1499:71;1567:1;1556:9;1552:17;1543:6;1499:71;:::i;:::-;1355:222;;;;:::o;1583:419::-;1749:4;1787:2;1776:9;1772:18;1764:26;;1836:9;1830:4;1826:20;1822:1;1811:9;1807:17;1800:47;1864:131;1990:4;1864:131;:::i;:::-;1856:139;;1583:419;;;:::o;2008:::-;2174:4;2212:2;2201:9;2197:18;2189:26;;2261:9;2255:4;2251:20;2247:1;2236:9;2232:17;2225:47;2289:131;2415:4;2289:131;:::i;:::-;2281:139;;2008:419;;;:::o;2514:169::-;2598:11;2632:6;2627:3;2620:19;2672:4;2667:3;2663:14;2648:29;;2514:169;;;;:::o;2689:96::-;2726:7;2755:24;2773:5;2755:24;:::i;:::-;2744:35;;2689:96;;;:::o;2791:126::-;2828:7;2868:42;2861:5;2857:54;2846:65;;2791:126;;;:::o;3046:117::-;3155:1;3152;3145:12;3169:225;3309:34;3305:1;3297:6;3293:14;3286:58;3378:8;3373:2;3365:6;3361:15;3354:33;3169:225;:::o;3400:182::-;3540:34;3536:1;3528:6;3524:14;3517:58;3400:182;:::o;3588:122::-;3661:24;3679:5;3661:24;:::i;:::-;3654:5;3651:35;3641:63;;3700:1;3697;3690:12;3641:63;3588:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "299800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2522",
								"renounceOwnership()": "30269",
								"transferOwnership(address)": "30691"
							},
							"internal": {
								"_transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 584,
									"end": 2292,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 821,
									"end": 968,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 821,
									"end": 968,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 821,
									"end": 968,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 821,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 821,
									"end": 968,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 821,
									"end": 968,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 968,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 821,
									"end": 968,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 821,
									"end": 968,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 821,
									"end": 968,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 821,
									"end": 968,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 853,
									"end": 870,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 873,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 873,
									"end": 883,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 873,
									"end": 883,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 873,
									"end": 883,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 873,
									"end": 885,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 873,
									"end": 885,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 873,
									"end": 885,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 873,
									"end": 885,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 873,
									"end": 885,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 853,
									"end": 885,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 853,
									"end": 885,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 900,
									"end": 909,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 891,
									"end": 897,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 891,
									"end": 897,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 891,
									"end": 909,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 891,
									"end": 909,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 891,
									"end": 909,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 891,
									"end": 909,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 949,
									"end": 950,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 920,
									"end": 963,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 920,
									"end": 963,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 836,
									"end": 968,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 772,
									"end": 871,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 772,
									"end": 871,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 817,
									"end": 832,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 855,
									"end": 865,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 840,
									"end": 866,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 840,
									"end": 866,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 772,
									"end": 871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 772,
									"end": 871,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 2292,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c1891e5f076ce0201047b2743bc7b812810a6e7f1f8824c50e2d39856dbacdd164736f6c63430008070033",
									".code": [
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 584,
											"end": 2292,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1676,
											"end": 1716,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1722,
											"end": 1741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1746,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1096,
											"end": 1102,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1102,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1107,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1214,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1972,
											"end": 1980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1953,
											"end": 1981,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1953,
											"end": 1981,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1953,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1885,
											"end": 1986,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 772,
											"end": 871,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 772,
											"end": 871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 817,
											"end": 832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 865,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 840,
											"end": 866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 840,
											"end": 866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 772,
											"end": 871,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2079,
											"end": 2290,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2079,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2148,
											"end": 2170,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2140,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2224,
											"end": 2262,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2290,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2290,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 611,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 753,
											"end": 756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 838,
											"end": 840,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 833,
											"end": 836,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 774,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 774,
											"end": 841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 767,
											"end": 841,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 841,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 850,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 939,
											"end": 942,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 850,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 850,
											"end": 943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 959,
											"end": 971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 952,
											"end": 971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 952,
											"end": 971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 611,
											"end": 977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 611,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 611,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 611,
											"end": 977,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1210,
											"end": 1212,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1146,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1222,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1342,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1349,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1484,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1567,
											"end": 1568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1569,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1543,
											"end": 1549,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1499,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1577,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1820,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1847,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1864,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 2002,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2197,
											"end": 2215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2251,
											"end": 2271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2245,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2272,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2415,
											"end": 2419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2289,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2427,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2676,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2677,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2683,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2755,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2689,
											"end": 2785,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2910,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2846,
											"end": 2911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2846,
											"end": 2911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2917,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3046,
											"end": 3163,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3046,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3153,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3157,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3343,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3305,
											"end": 3306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3293,
											"end": 3307,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3386,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3373,
											"end": 3375,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3365,
											"end": 3371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3354,
											"end": 3387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3394,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3574,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3536,
											"end": 3537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3538,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3517,
											"end": 3575,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3582,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3679,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3651,
											"end": 3686,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3710,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEP20/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP20/Context.sol\":{\"keccak256\":\"0xcf50ef7eb9328cf9a60082bc9d23fc0ca6344cbeb4abf1b312a2390b7ecab7ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1bbbe9a786fc8ea85583e8fbd4d34c3f31c2b92e9f8b2a5df6affa2f229bf09\",\"dweb:/ipfs/QmPYdsdJ8ugVgLMsK1vibuXrbMMThG8KbY4sDGM9XSW5Bn\"]},\"BEP20/Ownable.sol\":{\"keccak256\":\"0x106507e412cf86289e52c137ce5cbc87f7cc191198382687b70861e27dac8fec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac715ddb2f98a3ccbd3f9893643c4896060ae95f8ea9e5f263c5c567e4daaa5f\",\"dweb:/ipfs/QmfEtqyqwkRgog18kUkeyTpBB76RxXMWCJDaRQ2bbRnbL9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BEP20/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BEP20/SafeMath.sol\":630:4924  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEP20/SafeMath.sol\":630:4924  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208e930fd8d1779e6cad0419226facc4dc593dcd1e841f509c4ddc67315cc7569364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e930fd8d1779e6cad0419226facc4dc593dcd1e841f509c4ddc67315cc7569364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 SWAP4 0xF 0xD8 0xD1 PUSH24 0x9E6CAD0419226FACC4DC593DCD1E841F509C4DDC67315CC7 JUMP SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "630:4294:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e930fd8d1779e6cad0419226facc4dc593dcd1e841f509c4ddc67315cc7569364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 SWAP4 0xF 0xD8 0xD1 PUSH24 0x9E6CAD0419226FACC4DC593DCD1E841F509C4DDC67315CC7 JUMP SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "630:4294:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 630,
									"end": 4924,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e930fd8d1779e6cad0419226facc4dc593dcd1e841f509c4ddc67315cc7569364736f6c63430008070033",
									".code": [
										{
											"begin": 630,
											"end": 4924,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 630,
											"end": 4924,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 630,
											"end": 4924,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 630,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 4924,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 630,
											"end": 4924,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 4924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 630,
											"end": 4924,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BEP20/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP20/SafeMath.sol\":{\"keccak256\":\"0xeb08c3fbee681669025b9edef233aa66317a39adc44d62d1af7a86b3be3607f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://903d3e0e809e52a2867a448037a69baedd9e28dfbc83bea7fbc9a11233b559b0\",\"dweb:/ipfs/QmYHVPya4pMnTuTHuAJBUxvk2rBJNQLnefoiVKQwYez7af\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"BEP20/BEP20Token.sol": {
				"ast": {
					"absolutePath": "BEP20/BEP20Token.sol",
					"exportedSymbols": {
						"BEP20Token": [
							545
						],
						"Context": [
							575
						],
						"IBEP20": [
							676
						],
						"Ownable": [
							796
						],
						"SafeMath": [
							992
						]
					},
					"id": 546,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16",
								"<",
								"9.0",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:0"
						},
						{
							"absolutePath": "BEP20/Context.sol",
							"file": "./Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 546,
							"sourceUnit": 576,
							"src": "67:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEP20/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 546,
							"sourceUnit": 677,
							"src": "91:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEP20/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 546,
							"sourceUnit": 797,
							"src": "114:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEP20/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 546,
							"sourceUnit": 993,
							"src": "138:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 575,
										"src": "187:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "196:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "196:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 796,
										"src": "204:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "204:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 545,
							"linearizedBaseContracts": [
								545,
								796,
								676,
								575
							],
							"name": "BEP20Token",
							"nameLocation": "173:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 14,
									"libraryName": {
										"id": 12,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 992,
										"src": "222:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "216:27:0",
									"typeName": {
										"id": 13,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "235:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "284:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "247:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 15,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "256:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "247:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 16,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "267:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "356:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "298:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "307:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "298:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 22,
											"keyType": {
												"id": 20,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "327:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "318:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 21,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "338:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "388:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "372:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "418:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "404:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 27,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "404:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "446:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "431:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 29,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "431:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "472:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 545,
									"src": "457:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 31,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "457:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "575:207:0",
										"statements": [
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "581:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "589:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "581:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "581:13:0"
											},
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "610:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "600:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "600:17:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 51,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "623:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 52,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "635:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "623:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "623:21:0"
											},
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 55,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "650:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 56,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "665:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "650:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "650:27:0"
											},
											{
												"expression": {
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 59,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "683:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 62,
														"indexExpression": {
															"expression": {
																"id": 60,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "693:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "693:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "683:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 63,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "707:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "683:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "683:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "740:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 67,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "740:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "740:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 71,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "752:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "752:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 73,
															"name": "totalSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "764:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 66,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "731:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "731:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "EmitStatement",
												"src": "726:51:0"
											}
										]
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "508:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "494:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "494:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "529:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "515:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "515:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "544:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "538:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 37,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "538:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "totalSupply_",
												"nameLocation": "560:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "555:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:80:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:0:0"
									},
									"scope": 545,
									"src": "482:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										607
									],
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "906:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "919:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 83,
												"id": 86,
												"nodeType": "Return",
												"src": "912:14:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "786:48:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "846:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "879:8:0"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "897:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:9:0"
									},
									"scope": 545,
									"src": "837:94:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										589
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "1052:27:0",
										"statements": [
											{
												"expression": {
													"id": 95,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1065:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 94,
												"id": 96,
												"nodeType": "Return",
												"src": "1058:16:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "935:47:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "994:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 91,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1027:8:0"
									},
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1002:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1045:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 92,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1045:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:7:0"
									},
									"scope": 545,
									"src": "985:94:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										595
									],
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1204:25:0",
										"statements": [
											{
												"expression": {
													"id": 105,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 104,
												"id": 106,
												"nodeType": "Return",
												"src": "1210:14:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1083:45:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1140:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 101,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1171:8:0"
									},
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1146:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1189:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 102,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:15:0"
									},
									"scope": 545,
									"src": "1131:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										601
									],
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1348:23:0",
										"statements": [
											{
												"expression": {
													"id": 115,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "1361:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 114,
												"id": 116,
												"nodeType": "Return",
												"src": "1354:12:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1233:41:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1286:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 111,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1315:8:0"
									},
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:2:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1333:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 112,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1333:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:15:0"
									},
									"scope": 545,
									"src": "1277:94:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										583
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1494:30:0",
										"statements": [
											{
												"expression": {
													"id": 125,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "1507:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "1500:19:0"
											}
										]
									},
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "1375:44:0",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1431:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 121,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1467:8:0"
									},
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1442:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1485:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:9:0"
									},
									"scope": 545,
									"src": "1422:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										615
									],
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1658:36:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 137,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1671:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 139,
													"indexExpression": {
														"id": 138,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1681:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1671:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 136,
												"id": 140,
												"nodeType": "Return",
												"src": "1664:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "1528:42:0",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1582:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 133,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1631:8:0"
									},
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1600:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1592:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:17:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1649:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:9:0"
									},
									"scope": 545,
									"src": "1573:121:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										625
									],
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1972:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 154,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "1988:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1988:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 156,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2002:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2013:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 153,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1978:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1978:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1978:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2033:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 152,
												"id": 161,
												"nodeType": "Return",
												"src": "2026:11:0"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "1698:177:0",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1887:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 149,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1948:8:0"
									},
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1904:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1896:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1923:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1915:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1895:35:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1966:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1966:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1965:6:0"
									},
									"scope": 545,
									"src": "1878:164:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										635
									],
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2191:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 174,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "2204:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 176,
														"indexExpression": {
															"id": 175,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "2216:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2204:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 178,
													"indexExpression": {
														"id": 177,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "2223:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2204:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 173,
												"id": 179,
												"nodeType": "Return",
												"src": "2197:34:0"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2046:42:0",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2100:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2164:8:0"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2118:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2110:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2133:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2125:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:32:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2182:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:9:0"
									},
									"scope": 545,
									"src": "2091:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										645
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "2448:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 193,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "2463:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2463:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 195,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "2477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 196,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "2486:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 192,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2454:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2454:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2454:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2506:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 191,
												"id": 200,
												"nodeType": "Return",
												"src": "2499:11:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2240:114:0",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2366:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2424:8:0"
									},
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2399:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2391:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:33:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2442:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2442:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:6:0"
									},
									"scope": 545,
									"src": "2357:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										657
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3060:191:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 216,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "3076:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "3084:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 215,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "3066:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3066:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "3066:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "3117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 223,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "3125:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3125:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 232,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "3177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3185:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 225,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "3139:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 227,
																		"indexExpression": {
																			"id": 226,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "3151:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3139:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 230,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 228,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 563,
																			"src": "3159:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3159:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3139:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "3139:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3139:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 221,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3108:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3108:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "3108:121:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3242:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 214,
												"id": 238,
												"nodeType": "Return",
												"src": "3235:11:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "2519:424:0",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2955:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 211,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3036:8:0"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2976:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2968:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2992:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2984:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3011:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3003:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2967:51:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3054:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:6:0"
									},
									"scope": 545,
									"src": "2946:305:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3714:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 251,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "3729:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3729:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 253,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "3743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 261,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 245,
																	"src": "3791:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 254,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "3752:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 257,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 255,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 563,
																				"src": "3764:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3764:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3752:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 259,
																	"indexExpression": {
																		"id": 258,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "3778:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3752:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 825,
																"src": "3752:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3752:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 250,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3720:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3720:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "3720:83:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3816:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 249,
												"id": 266,
												"nodeType": "Return",
												"src": "3809:11:0"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "3255:361:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "3628:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3654:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3646:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "3671:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3663:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3645:37:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3708:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3708:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3707:6:0"
									},
									"scope": 545,
									"src": "3619:206:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "4381:157:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 279,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4396:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4396:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 281,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "4410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 289,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "4458:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4475:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 282,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "4419:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 285,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 283,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 563,
																				"src": "4431:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4431:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4419:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 287,
																	"indexExpression": {
																		"id": 286,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "4445:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4419:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "4419:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4419:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 278,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "4387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4387:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "4387:129:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 277,
												"id": 295,
												"nodeType": "Return",
												"src": "4522:11:0"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3829:449:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "4290:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4316:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4308:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "4333:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4325:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4307:42:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4374:6:0"
									},
									"scope": 545,
									"src": "4281:257:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "4799:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 308,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4811:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4811:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 310,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4825:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 307,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "4805:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4805:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "4805:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4845:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 306,
												"id": 314,
												"nodeType": "Return",
												"src": "4838:11:0"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "4542:183:0",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 303,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 302,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 734,
												"src": "4774:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4774:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "4737:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4750:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4742:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:16:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "4793:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4793:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4792:6:0"
									},
									"scope": 545,
									"src": "4728:126:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "5385:363:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 327,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "5399:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5417:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5409:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 328,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5409:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5409:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5399:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5421:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5391:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5391:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "5391:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "5475:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5496:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5488:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 338,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5488:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5488:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5475:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5500:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5467:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5467:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "5467:71:0"
											},
											{
												"expression": {
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 346,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "5545:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 348,
														"indexExpression": {
															"id": 347,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "5555:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5545:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 353,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "5587:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5595:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 349,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "5565:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 351,
																"indexExpression": {
																	"id": 350,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "5575:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5565:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 870,
															"src": "5565:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5565:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5545:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "5545:91:0"
											},
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 358,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "5642:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 360,
														"indexExpression": {
															"id": 359,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "5652:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5642:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 365,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "5690:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 361,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "5665:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 363,
																"indexExpression": {
																	"id": 362,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "5675:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5665:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 825,
															"src": "5665:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5665:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5642:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "5642:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 370,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "5717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "5725:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "5736:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "5708:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5708:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "EmitStatement",
												"src": "5703:40:0"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "4858:437:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5307:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5325:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "5317:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5317:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5341:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "5333:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "5352:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:51:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5385:0:0"
									},
									"scope": 545,
									"src": "5298:450:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "6055:227:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 385,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "6069:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6088:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6080:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 386,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6080:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6080:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6069:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6092:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6061:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6061:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "6061:65:0"
											},
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 394,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "6133:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 397,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "6165:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 395,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "6148:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 825,
															"src": "6148:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6148:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6133:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "6133:39:0"
											},
											{
												"expression": {
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 401,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "6178:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 403,
														"indexExpression": {
															"id": 402,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "6188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6178:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 408,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "6222:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "6199:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "6209:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6199:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 825,
															"src": "6199:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6199:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6178:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "6178:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6257:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6249:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 413,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6249:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6249:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "6261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "6270:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "6240:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6240:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "EmitStatement",
												"src": "6235:42:0"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "5752:243:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "6007:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6021:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "6013:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6038:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "6030:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6012:33:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6055:0:0"
									},
									"scope": 545,
									"src": "5998:284:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "6642:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 431,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6656:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6675:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6667:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 432,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6667:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6667:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6656:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6679:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6648:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6648:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "6648:67:0"
											},
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 440,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "6722:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 442,
														"indexExpression": {
															"id": 441,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "6732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6722:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "6766:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6774:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 443,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "6743:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 445,
																"indexExpression": {
																	"id": 444,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "6753:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6743:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 870,
															"src": "6743:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6743:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6722:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "6722:89:0"
											},
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 452,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "6817:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 455,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "6849:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 453,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "6832:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 842,
															"src": "6832:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6832:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6817:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "6817:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 460,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "6876:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6893:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6885:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 461,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6885:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6885:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "6897:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 459,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "6867:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6867:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "EmitStatement",
												"src": "6862:42:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "6286:288:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6586:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6600:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "6592:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6617:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "6609:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6591:33:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6642:0:0"
									},
									"scope": 545,
									"src": "6577:332:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "7389:239:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 480,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "7403:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7420:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7412:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 481,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7412:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7412:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7403:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7424:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7395:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7395:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "7395:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 490,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "7477:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7496:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7488:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 491,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7488:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7488:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7477:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7500:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7469:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7469:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "7469:68:0"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 499,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7544:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 502,
															"indexExpression": {
																"id": 500,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "7556:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7544:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 503,
														"indexExpression": {
															"id": 501,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "7563:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7544:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 504,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7574:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7544:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "7544:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 508,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "7600:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "7607:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "7616:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 507,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "7591:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "EmitStatement",
												"src": "7586:37:0"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "6913:390:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "7315:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7332:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "7324:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7347:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "7339:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7364:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "7356:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7323:48:0"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7389:0:0"
									},
									"scope": 545,
									"src": "7306:322:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "7861:158:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "7873:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "7882:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "7867:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7867:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "7867:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "7904:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 529,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "7913:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7913:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 538,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "7966:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7974:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 531,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "7927:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 533,
																		"indexExpression": {
																			"id": 532,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 517,
																			"src": "7939:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7927:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 536,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 534,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 563,
																			"src": "7948:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7948:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7927:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "7927:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7927:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "7895:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7895:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "7895:119:0"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "7632:157:0",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "7801:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7819:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "7811:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7836:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "7828:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7810:33:0"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7861:0:0"
									},
									"scope": 545,
									"src": "7792:227:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 546,
							"src": "164:7857:0",
							"usedErrors": []
						}
					],
					"src": "32:7989:0"
				},
				"id": 0
			},
			"BEP20/Context.sol": {
				"ast": {
					"absolutePath": "BEP20/Context.sol",
					"exportedSymbols": {
						"Context": [
							575
						]
					},
					"id": 576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 547,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16",
								"<",
								"9.0",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 575,
							"linearizedBaseContracts": [
								575
							],
							"name": "Context",
							"nameLocation": "576:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "754:3:1",
										"statements": []
									},
									"id": 551,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:2:1"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:1"
									},
									"scope": 575,
									"src": "738:19:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "834:37:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 558,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "855:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "855:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "847:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 556,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "847:8:1",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "847:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 555,
												"id": 561,
												"nodeType": "Return",
												"src": "840:26:1"
											}
										]
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "781:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:2:1"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "817:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:17:1"
									},
									"scope": 575,
									"src": "772:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "932:155:1",
										"statements": [
											{
												"expression": {
													"id": 568,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "938:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$575",
														"typeString": "contract Context"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "938:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 570,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1074:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1074:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 567,
												"id": 572,
												"nodeType": "Return",
												"src": "1067:15:1"
											}
										]
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "884:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "918:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "918:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:14:1"
									},
									"scope": 575,
									"src": "875:212:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 576,
							"src": "567:522:1",
							"usedErrors": []
						}
					],
					"src": "32:1057:1"
				},
				"id": 1
			},
			"BEP20/IBEP20.sol": {
				"ast": {
					"absolutePath": "BEP20/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							676
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 577,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16",
								"<",
								"9.0",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 676,
							"linearizedBaseContracts": [
								676
							],
							"name": "IBEP20",
							"nameLocation": "77:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "88:62:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "162:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "173:2:2"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "199:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:9:2"
									},
									"scope": 676,
									"src": "153:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "212:47:2",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "271:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "279:2:2"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "305:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 586,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "305:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "304:7:2"
									},
									"scope": 676,
									"src": "262:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "316:45:2",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "373:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:2:2"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "405:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 592,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "405:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:15:2"
									},
									"scope": 676,
									"src": "364:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "424:41:2",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "477:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:2:2"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "507:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "507:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "506:15:2"
									},
									"scope": 676,
									"src": "468:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "526:48:2",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "586:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:2"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "620:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:9:2"
									},
									"scope": 676,
									"src": "577:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "633:68:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "713:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "731:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "723:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:17:2"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "763:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:9:2"
									},
									"scope": 676,
									"src": "704:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "776:197:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "985:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1002:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "994:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1021:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1013:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:35:2"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1047:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1047:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:6:2"
									},
									"scope": 676,
									"src": "976:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "1057:252:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1321:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1339:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1331:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1355:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1347:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1347:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1330:33:2"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1387:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:9:2"
									},
									"scope": 676,
									"src": "1312:84:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1400:616:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2028:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2044:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2036:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2061:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2053:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2035:33:2"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2087:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:6:2"
									},
									"scope": 676,
									"src": "2019:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "2097:280:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2389:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2410:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2402:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2426:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2418:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2445:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2437:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:51:2"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2471:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2471:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:6:2"
									},
									"scope": 676,
									"src": "2380:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "2481:148:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 666,
									"name": "Transfer",
									"nameLocation": "2638:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2663:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2647:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2685:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2669:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2697:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2689:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2646:57:2"
									},
									"src": "2632:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "2708:142:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 675,
									"name": "Approval",
									"nameLocation": "2859:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2884:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2868:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2868:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2907:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2891:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2924:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2916:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2867:63:2"
									},
									"src": "2853:78:2"
								}
							],
							"scope": 677,
							"src": "67:2866:2",
							"usedErrors": []
						}
					],
					"src": "33:2900:2"
				},
				"id": 2
			},
			"BEP20/Ownable.sol": {
				"ast": {
					"absolutePath": "BEP20/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							575
						],
						"Ownable": [
							796
						]
					},
					"id": 797,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16",
								"<",
								"9.0",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:3"
						},
						{
							"absolutePath": "BEP20/Context.sol",
							"file": "./Context.sol",
							"id": 679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 797,
							"sourceUnit": 576,
							"src": "65:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 681,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 575,
										"src": "604:7:3"
									},
									"id": 682,
									"nodeType": "InheritanceSpecifier",
									"src": "604:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 680,
								"nodeType": "StructuredDocumentation",
								"src": "89:494:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 796,
							"linearizedBaseContracts": [
								796,
								575
							],
							"name": "Ownable",
							"nameLocation": "593:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 684,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "632:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 796,
									"src": "616:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 683,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "616:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 690,
									"name": "OwnershipTransferred",
									"nameLocation": "649:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "686:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "670:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "717:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "701:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:57:3"
									},
									"src": "643:84:3"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "836:132:3",
										"statements": [
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "861:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 711,
														"src": "853:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 694,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 696,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "873:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:32:3"
											},
											{
												"expression": {
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 699,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "891:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 700,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "900:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "891:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "891:18:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "949:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "941:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 704,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "941:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "941:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "953:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 703,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "920:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "920:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "EmitStatement",
												"src": "915:48:3"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "731:87:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 712,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "833:2:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "836:0:3"
									},
									"scope": 796,
									"src": "821:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "1083:24:3",
										"statements": [
											{
												"expression": {
													"id": 718,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 684,
													"src": "1096:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 717,
												"id": 719,
												"nodeType": "Return",
												"src": "1089:13:3"
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "972:61:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1074:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:9:3"
									},
									"scope": 796,
									"src": "1036:71:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "1208:85:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 725,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "1222:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 726,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "1232:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1232:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1222:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1246:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1214:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1214:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "1214:67:3"
											},
											{
												"id": 732,
												"nodeType": "PlaceholderStatement",
												"src": "1287:1:3"
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "1111:73:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 734,
									"name": "onlyOwner",
									"nameLocation": "1196:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1205:2:3"
									},
									"src": "1187:106:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "1665:81:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 741,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "1697:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1713:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1705:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 742,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1705:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1705:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 740,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "1676:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1676:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "EmitStatement",
												"src": "1671:45:3"
											},
											{
												"expression": {
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 748,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "1722:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1739:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1731:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 749,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1731:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1731:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1722:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "1722:19:3"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "1297:319:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 738,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 737,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 734,
												"src": "1655:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1655:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1628:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:3"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:3"
									},
									"scope": 796,
									"src": "1619:127:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "1947:39:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 765,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1972:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 764,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "1953:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1953:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "1953:28:3"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "1750:132:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 762,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 761,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 734,
												"src": "1937:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1937:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1894:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1920:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1912:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:18:3"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:0:3"
									},
									"scope": 796,
									"src": "1885:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "2134:156:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 776,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "2148:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2168:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2160:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 777,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2160:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2160:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2148:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2172:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 775,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2140:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2140:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "2140:73:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 786,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "2245:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "2253:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 785,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "2224:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "EmitStatement",
												"src": "2219:43:3"
											},
											{
												"expression": {
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 790,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "2268:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 791,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "2277:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2268:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "2268:17:3"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "1990:86:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2088:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2115:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2107:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:18:3"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2134:0:3"
									},
									"scope": 796,
									"src": "2079:211:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 797,
							"src": "584:1708:3",
							"usedErrors": []
						}
					],
					"src": "32:2260:3"
				},
				"id": 3
			},
			"BEP20/SafeMath.sol": {
				"ast": {
					"absolutePath": "BEP20/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							992
						]
					},
					"id": 993,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 798,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16",
								"<",
								"9.0",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 799,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 992,
							"linearizedBaseContracts": [
								992
							],
							"name": "SafeMath",
							"nameLocation": "638:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "922:95:4",
										"statements": [
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "936:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 824,
														"src": "928:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 809,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "928:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 814,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 811,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "940:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 812,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "944:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "940:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "928:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 816,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "959:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 817,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "964:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "959:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "967:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "951:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "951:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "951:46:4"
											},
											{
												"expression": {
													"id": 822,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 810,
													"src": "1011:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 808,
												"id": 823,
												"nodeType": "Return",
												"src": "1004:8:4"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "651:201:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "864:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "876:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "868:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "887:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "879:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:22:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "913:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:9:4"
									},
									"scope": 992,
									"src": "855:162:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "1328:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "1345:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 837,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "1348:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1351:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 835,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															842,
															870
														],
														"referencedDeclaration": 870,
														"src": "1341:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1341:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 834,
												"id": 840,
												"nodeType": "Return",
												"src": "1334:50:4"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "1021:237:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1270:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1282:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1274:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1293:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1285:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:22:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1319:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1318:9:4"
									},
									"scope": 992,
									"src": "1261:128:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "1748:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 855,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "1762:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 856,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "1767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1762:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 858,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "1770:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1754:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1754:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "1754:29:4"
											},
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1797:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "1789:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 861,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1789:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 866,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 863,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "1801:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 864,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "1805:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1801:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1789:17:4"
											},
											{
												"expression": {
													"id": 867,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 862,
													"src": "1820:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 853,
												"id": 868,
												"nodeType": "Return",
												"src": "1813:8:4"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "1393:257:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1662:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1674:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1666:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1685:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1677:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1677:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1702:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1688:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 848,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1688:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:50:4"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1739:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:9:4"
									},
									"scope": 992,
									"src": "1653:173:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "2113:352:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 880,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "2329:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2334:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2329:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "2325:35:4",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "2337:23:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2352:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 879,
															"id": 884,
															"nodeType": "Return",
															"src": "2345:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2374:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "2366:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 887,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2366:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 892,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 889,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "2378:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 890,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "2382:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2378:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2366:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 894,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "2397:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 895,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "2401:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2397:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 897,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "2406:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2397:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2409:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2389:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2389:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "2389:56:4"
											},
											{
												"expression": {
													"id": 902,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 888,
													"src": "2459:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 879,
												"id": 903,
												"nodeType": "Return",
												"src": "2452:8:4"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "1830:213:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2055:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2067:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "2059:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2078:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "2070:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2058:22:4"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "2104:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:9:4"
									},
									"scope": 992,
									"src": "2046:419:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2963:57:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 916,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "2980:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 917,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "2983:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2986:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 915,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															922,
															950
														],
														"referencedDeclaration": 950,
														"src": "2976:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2976:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 914,
												"id": 920,
												"nodeType": "Return",
												"src": "2969:46:4"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "2469:424:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2905:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2917:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2909:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2928:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2920:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2908:22:4"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2954:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2954:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2953:9:4"
									},
									"scope": 992,
									"src": "2896:124:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "3566:221:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 935,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "3642:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3646:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 938,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "3649:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 934,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3634:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "3634:28:4"
											},
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3676:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 949,
														"src": "3668:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 941,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3668:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "3680:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 944,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "3684:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3680:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3668:17:4"
											},
											{
												"expression": {
													"id": 947,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 942,
													"src": "3781:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 933,
												"id": 948,
												"nodeType": "Return",
												"src": "3774:8:4"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "3024:444:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3480:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3492:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "3484:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3484:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3503:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "3495:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3520:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "3506:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 928,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3506:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:50:4"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "3557:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3557:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3556:9:4"
									},
									"scope": 992,
									"src": "3471:316:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "4274:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "4291:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 962,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4294:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4297:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 960,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															967,
															991
														],
														"referencedDeclaration": 991,
														"src": "4287:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 959,
												"id": 965,
												"nodeType": "Return",
												"src": "4280:44:4"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "3791:413:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4216:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4228:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "4220:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4220:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4239:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "4231:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4219:22:4"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "4265:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4265:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4264:9:4"
									},
									"scope": 992,
									"src": "4207:122:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "4864:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 980,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "4878:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4883:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4878:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 983,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "4886:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4870:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "4870:29:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "4912:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 987,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "4916:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4912:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 978,
												"id": 989,
												"nodeType": "Return",
												"src": "4905:12:4"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "4333:433:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4778:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4790:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "4782:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4782:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4801:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "4793:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4818:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "4804:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4804:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4781:50:4"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "4855:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4855:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4854:9:4"
									},
									"scope": 992,
									"src": "4769:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 993,
							"src": "630:4294:4",
							"usedErrors": []
						}
					],
					"src": "32:4892:4"
				},
				"id": 4
			}
		}
	}
}